{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wizardTower",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Empty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "indexed": false,
          "internalType": "struct Governance.Task",
          "name": "myTask",
          "type": "tuple"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "areTasksAvailableToConfirm",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        }
      ],
      "name": "deleteTaskTypeByIPFSHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getTasksAssignedToWiz",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCallerOnBoard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "isMyWizardOnBoard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksWaitingConfirmation",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTasksAttempted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "13": "contracts/helpers/Ownable.sol",
    "14": "contracts/helpers/ReentrancyGuard.sol",
    "18": "contracts/interfaces/IERC20.sol",
    "26": "contracts/libraries/Strings.sol",
    "28": "contracts/wizards.sol",
    "3": "contracts/Governance.sol",
    "5": "contracts/WizardTower.sol",
    "7": "contracts/helpers/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        9291
      ],
      "Context": [
        6765
      ],
      "DoubleEndedQueue": [
        6744
      ],
      "ERC165": [
        6789
      ],
      "ERC2981Collection": [
        6873
      ],
      "ERC721": [
        7692
      ],
      "ERC721A": [
        8763
      ],
      "ERC721Enumerable": [
        11007
      ],
      "Governance": [
        2948
      ],
      "IERC165": [
        8775
      ],
      "IERC20": [
        8848
      ],
      "IERC2981": [
        12897
      ],
      "IERC721": [
        8964
      ],
      "IERC721Enumerable": [
        8995
      ],
      "IERC721Metadata": [
        12924
      ],
      "IERC721Receiver": [
        12942
      ],
      "Ownable": [
        6363
      ],
      "ReentrancyGuard": [
        6403
      ],
      "Strings": [
        9494
      ],
      "WizardTower": [
        3631
      ],
      "Wizards": [
        10668
      ]
    },
    "id": 2949,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 977,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 978,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 10669,
        "src": "64:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 979,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 8849,
        "src": "88:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 980,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 8776,
        "src": "122:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 981,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 8965,
        "src": "157:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 982,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 8996,
        "src": "192:44:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 8764,
        "src": "270:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 984,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 7693,
        "src": "302:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 6790,
        "src": "333:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 986,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 6364,
        "src": "364:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 6766,
        "src": "396:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 988,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 6404,
        "src": "428:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 989,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 6874,
        "src": "468:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 990,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 9495,
        "src": "510:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 991,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 9292,
        "src": "544:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/WizardTower.sol",
        "file": "./WizardTower.sol",
        "id": 992,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 3632,
        "src": "578:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 994,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2949,
        "sourceUnit": 6745,
        "src": "606:92:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 993,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6744,
              "src": "614:16:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 995,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6403,
              "src": "794:15:3"
            },
            "id": 996,
            "nodeType": "InheritanceSpecifier",
            "src": "794:15:3"
          },
          {
            "baseName": {
              "id": 997,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6363,
              "src": "811:7:3"
            },
            "id": 998,
            "nodeType": "InheritanceSpecifier",
            "src": "811:7:3"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2948,
        "linearizedBaseContracts": [
          2948,
          6363,
          6765,
          6403
        ],
        "name": "Governance",
        "nameLocation": "780:10:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1001,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "865:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "857:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$10668",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 1000,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 999,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10668,
                "src": "857:7:3"
              },
              "referencedDeclaration": 10668,
              "src": "857:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$10668",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1004,
            "mutability": "mutable",
            "name": "wizardTower",
            "nameLocation": "893:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "881:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WizardTower_$3631",
              "typeString": "contract WizardTower"
            },
            "typeName": {
              "id": 1003,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1002,
                "name": "WizardTower",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3631,
                "src": "881:11:3"
              },
              "referencedDeclaration": 3631,
              "src": "881:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WizardTower_$3631",
                "typeString": "contract WizardTower"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 1010,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1071:18:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "1014:75:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 1009,
              "keyType": {
                "id": 1005,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1023:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1014:49:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 1008,
                "keyType": {
                  "id": 1006,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1043:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1034:28:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 1007,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1054:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 1031,
            "members": [
              {
                "constant": false,
                "id": 1014,
                "mutability": "mutable",
                "name": "nextActiveTimeThreshold",
                "nameLocation": "1183:23:3",
                "nodeType": "VariableDeclaration",
                "scope": 1031,
                "src": "1155:51:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                  "typeString": "mapping(uint40 => uint256)"
                },
                "typeName": {
                  "id": 1013,
                  "keyType": {
                    "id": 1011,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1155:27:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                    "typeString": "mapping(uint40 => uint256)"
                  },
                  "valueType": {
                    "id": 1012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1016,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1277:8:3",
                "nodeType": "VariableDeclaration",
                "scope": 1031,
                "src": "1270:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1015,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1270:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1018,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1321:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 1031,
                "src": "1316:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1017,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1316:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1020,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1344:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 1031,
                "src": "1337:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 1019,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1337:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1022,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1398:15:3",
                "nodeType": "VariableDeclaration",
                "scope": 1031,
                "src": "1392:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 1021,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1392:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1024,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1430:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 1031,
                "src": "1423:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 1023,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1423:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1026,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1456:12:3",
                "nodeType": "VariableDeclaration",
                "scope": 1031,
                "src": "1449:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 1025,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1449:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1028,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1485:12:3",
                "nodeType": "VariableDeclaration",
                "scope": 1031,
                "src": "1478:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 1027,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1478:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1030,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1514:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 1031,
                "src": "1507:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1029,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1507:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1136:8:3",
            "nodeType": "StructDefinition",
            "scope": 2948,
            "src": "1129:406:3",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 1052,
            "members": [
              {
                "constant": false,
                "id": 1033,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1595:8:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "1588:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1032,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1588:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1035,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1641:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "1634:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 1034,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1634:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1037,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1701:4:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "1693:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1036,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1693:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1039,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1755:11:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "1747:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1038,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1747:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1041,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1819:15:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "1813:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 1040,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1813:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1043,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1867:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "1860:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 1042,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1860:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1045,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "2039:7:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "2032:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 1044,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "2032:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1047,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2066:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "2059:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1046,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2059:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1049,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2117:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "2110:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1048,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2110:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1051,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2167:29:3",
                "nodeType": "VariableDeclaration",
                "scope": 1052,
                "src": "2160:36:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 1050,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2160:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1573:4:3",
            "nodeType": "StructDefinition",
            "scope": 2948,
            "src": "1566:675:3",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 1067,
            "members": [
              {
                "constant": false,
                "id": 1054,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2280:8:3",
                "nodeType": "VariableDeclaration",
                "scope": 1067,
                "src": "2273:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1053,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2273:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1056,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2305:15:3",
                "nodeType": "VariableDeclaration",
                "scope": 1067,
                "src": "2298:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1055,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2298:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1060,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2340:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 1067,
                "src": "2330:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1057,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1059,
                  "length": {
                    "hexValue": "38",
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2337:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2330:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1062,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2362:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 1067,
                "src": "2355:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 1061,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2355:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1064,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2389:12:3",
                "nodeType": "VariableDeclaration",
                "scope": 1067,
                "src": "2382:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 1063,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2382:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1066,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2418:12:3",
                "nodeType": "VariableDeclaration",
                "scope": 1067,
                "src": "2411:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 1065,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2411:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2254:8:3",
            "nodeType": "StructDefinition",
            "scope": 2948,
            "src": "2247:190:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 1071,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2463:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "2445:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 1069,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1068,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1031,
                  "src": "2445:8:3"
                },
                "referencedDeclaration": 1031,
                "src": "2445:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 1070,
              "nodeType": "ArrayTypeName",
              "src": "2445:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e95d2347",
            "id": 1074,
            "mutability": "mutable",
            "name": "tasksWaitingConfirmation",
            "nameLocation": "2619:24:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "2582:61:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 1073,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1072,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6422,
                "src": "2582:29:3"
              },
              "referencedDeclaration": 6422,
              "src": "2582:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 1079,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2796:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "2759:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 1078,
              "keyType": {
                "id": 1075,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2768:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2759:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 1077,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1076,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1067,
                  "src": "2779:8:3"
                },
                "referencedDeclaration": 1067,
                "src": "2779:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$1067_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1081,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2819:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "2811:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1080,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2811:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 1086,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2873:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "2840:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 1085,
              "keyType": {
                "id": 1082,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2849:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2840:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 1084,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1083,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1052,
                  "src": "2860:4:3"
                },
                "referencedDeclaration": 1052,
                "src": "2860:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90b293d8",
            "id": 1088,
            "mutability": "mutable",
            "name": "totalTasksAttempted",
            "nameLocation": "2899:19:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "2884:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1087,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2884:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1093,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2959:16:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "2951:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1089,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2951:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 1092,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 1090,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2978:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 1091,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2981:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2978:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1096,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "3010:25:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "3003:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint40",
              "typeString": "uint40"
            },
            "typeName": {
              "id": 1094,
              "name": "uint40",
              "nodeType": "ElementaryTypeName",
              "src": "3003:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint40",
                "typeString": "uint40"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1095,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3038:6:3",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1099,
            "mutability": "mutable",
            "name": "boardSeats",
            "nameLocation": "3067:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 2948,
            "src": "3059:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1097,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3059:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 1098,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3080:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df268",
            "id": 1108,
            "name": "VerificationAssigned",
            "nameLocation": "3094:20:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3123:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "3115:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3141:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "3133:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1106,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "myTask",
                  "nameLocation": "3154:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "3149:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 1105,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1104,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1052,
                      "src": "3149:4:3"
                    },
                    "referencedDeclaration": 1052,
                    "src": "3149:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3114:47:3"
            },
            "src": "3088:74:3"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 1116,
            "name": "VerificationFailed",
            "nameLocation": "3173:18:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3200:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "3192:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1112,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3225:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "3217:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3217:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1114,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3251:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "3243:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3243:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3191:67:3"
            },
            "src": "3167:92:3"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 1128,
            "name": "VerificationSucceeded",
            "nameLocation": "3270:21:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3300:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "3292:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3318:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "3310:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3310:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1122,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3336:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "3328:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1124,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3352:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "3344:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1126,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3363:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "3358:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3291:86:3"
            },
            "src": "3264:114:3"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 1138,
            "name": "HashTesting",
            "nameLocation": "3389:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3409:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "3401:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3401:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3420:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "3415:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3415:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3443:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "3435:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3463:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "3457:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3457:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3400:78:3"
            },
            "src": "3383:96:3"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 1154,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3490:18:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3516:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "3509:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3509:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1142,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3533:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "3526:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3526:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3552:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "3546:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3577:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "3570:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3570:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3606:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "3599:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1147,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1150,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3628:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "3621:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3621:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1152,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3650:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "3643:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3643:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3508:158:3"
            },
            "src": "3484:183:3"
          },
          {
            "anonymous": false,
            "eventSelector": "bcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d",
            "id": 1164,
            "name": "TaskCompleted",
            "nameLocation": "3678:13:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3700:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "3692:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3692:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3718:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "3710:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "3733:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "3726:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3726:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3751:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "3743:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3691:65:3"
            },
            "src": "3672:85:3"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "4548:275:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4811:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1168,
                  "id": 1170,
                  "nodeType": "Return",
                  "src": "4804:12:3"
                }
              ]
            },
            "functionSelector": "3b47fed2",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCallerOnBoard",
            "nameLocation": "4503:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4518:2:3"
            },
            "returnParameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "4542:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4542:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4541:6:3"
            },
            "scope": 2948,
            "src": "4494:329:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1181,
              "nodeType": "Block",
              "src": "5014:214:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5216:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1178,
                  "id": 1180,
                  "nodeType": "Return",
                  "src": "5209:12:3"
                }
              ]
            },
            "functionSelector": "0f61d8bd",
            "id": 1182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMyWizardOnBoard",
            "nameLocation": "4953:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "4979:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "4971:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4971:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4970:16:3"
            },
            "returnParameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "5008:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5008:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5007:6:3"
            },
            "scope": 2948,
            "src": "4944:284:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1194,
              "nodeType": "Block",
              "src": "5484:38:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1190,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "5501:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1192,
                    "indexExpression": {
                      "id": 1191,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1184,
                      "src": "5507:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5501:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$1052_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 1189,
                  "id": 1193,
                  "nodeType": "Return",
                  "src": "5494:21:3"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 1195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "5419:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1184,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "5439:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "5431:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5431:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5430:17:3"
            },
            "returnParameters": {
              "id": 1189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "5471:11:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 1187,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1186,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1052,
                      "src": "5471:4:3"
                    },
                    "referencedDeclaration": 1052,
                    "src": "5471:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5470:13:3"
            },
            "scope": 2948,
            "src": "5410:112:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1250,
              "nodeType": "Block",
              "src": "5606:311:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1204,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "5624:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1205,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "5637:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5624:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 1207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5653:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 1203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5616:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5616:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "5616:56:3"
                },
                {
                  "assignments": [
                    1214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1214,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "5698:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1250,
                      "src": "5682:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1212,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5682:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1213,
                        "nodeType": "ArrayTypeName",
                        "src": "5682:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1223,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1218,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "5723:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 1220,
                          "indexExpression": {
                            "id": 1219,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1197,
                            "src": "5733:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5723:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1056,
                        "src": "5723:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5710:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1215,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5714:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1216,
                        "nodeType": "ArrayTypeName",
                        "src": "5714:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5710:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5682:79:3"
                },
                {
                  "body": {
                    "id": 1246,
                    "nodeType": "Block",
                    "src": "5815:70:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1235,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1214,
                              "src": "5829:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 1237,
                            "indexExpression": {
                              "id": 1236,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "5839:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5829:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1238,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1079,
                                  "src": "5844:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 1240,
                                "indexExpression": {
                                  "id": 1239,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1197,
                                  "src": "5854:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5844:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1060,
                              "src": "5844:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 1243,
                            "indexExpression": {
                              "id": 1242,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "5872:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5844:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "5829:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1245,
                        "nodeType": "ExpressionStatement",
                        "src": "5829:45:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1228,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "5790:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1229,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "5793:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 1230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5793:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5790:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1247,
                  "initializationExpression": {
                    "assignments": [
                      1225
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1225,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5783:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1247,
                        "src": "5775:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5775:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1227,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5787:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5775:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5811:3:3",
                      "subExpression": {
                        "id": 1232,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "5811:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1234,
                    "nodeType": "ExpressionStatement",
                    "src": "5811:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "5771:114:3"
                },
                {
                  "expression": {
                    "id": 1248,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1214,
                    "src": "5901:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 1202,
                  "id": 1249,
                  "nodeType": "Return",
                  "src": "5894:16:3"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 1251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "5537:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5554:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1251,
                  "src": "5546:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5546:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5545:20:3"
            },
            "returnParameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1251,
                  "src": "5589:15:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1199,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "5589:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 1200,
                    "nodeType": "ArrayTypeName",
                    "src": "5589:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5588:17:3"
            },
            "scope": 2948,
            "src": "5528:389:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1356,
              "nodeType": "Block",
              "src": "6000:892:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1259,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1253,
                          "src": "6018:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1260,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "6031:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6018:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6047:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 1258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6010:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6010:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "6010:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1266,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6085:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6085:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1268,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "6103:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 1270,
                            "indexExpression": {
                              "id": 1269,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1253,
                              "src": "6113:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6103:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1066,
                          "src": "6103:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "6085:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6139:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 1265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6076:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6076:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1275,
                  "nodeType": "ExpressionStatement",
                  "src": "6076:85:3"
                },
                {
                  "assignments": [
                    1277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1277,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "6289:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "6281:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6281:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1278,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6281:19:3"
                },
                {
                  "assignments": [
                    1280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1280,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "6318:17:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "6310:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6310:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1281,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6310:25:3"
                },
                {
                  "assignments": [
                    1283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1283,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "6353:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "6345:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1282,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6345:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1285,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6357:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6345:13:3"
                },
                {
                  "body": {
                    "id": 1345,
                    "nodeType": "Block",
                    "src": "6431:382:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1299,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1079,
                                  "src": "6484:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 1301,
                                "indexExpression": {
                                  "id": 1300,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1253,
                                  "src": "6494:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6484:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 1302,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1060,
                              "src": "6484:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 1304,
                            "indexExpression": {
                              "id": 1303,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1287,
                              "src": "6512:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6484:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1305,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "6517:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6484:50:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1330,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1079,
                                    "src": "6713:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 1332,
                                  "indexExpression": {
                                    "id": 1331,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1253,
                                    "src": "6723:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6713:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 1333,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1060,
                                "src": "6713:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 1335,
                              "indexExpression": {
                                "id": 1334,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1287,
                                "src": "6741:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6713:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1336,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "6747:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6713:51:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1343,
                          "nodeType": "IfStatement",
                          "src": "6710:93:3",
                          "trueBody": {
                            "id": 1342,
                            "nodeType": "Block",
                            "src": "6765:38:3",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1338,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1283,
                                    "src": "6783:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 1339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6787:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "6783:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1341,
                                "nodeType": "ExpressionStatement",
                                "src": "6783:5:3"
                              }
                            ]
                          }
                        },
                        "id": 1344,
                        "nodeType": "IfStatement",
                        "src": "6481:322:3",
                        "trueBody": {
                          "id": 1329,
                          "nodeType": "Block",
                          "src": "6536:156:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 1314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1307,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1280,
                                  "src": "6554:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1308,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1079,
                                        "src": "6574:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 1310,
                                      "indexExpression": {
                                        "id": 1309,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1253,
                                        "src": "6584:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6574:21:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 1311,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1060,
                                    "src": "6574:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 1313,
                                  "indexExpression": {
                                    "id": 1312,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1287,
                                    "src": "6602:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6574:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "6554:50:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1315,
                              "nodeType": "ExpressionStatement",
                              "src": "6554:50:3"
                            },
                            {
                              "expression": {
                                "id": 1318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1316,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1277,
                                  "src": "6622:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1317,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1287,
                                  "src": "6636:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6622:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1319,
                              "nodeType": "ExpressionStatement",
                              "src": "6622:15:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1320,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "6659:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6664:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "6659:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1328,
                              "nodeType": "IfStatement",
                              "src": "6655:23:3",
                              "trueBody": {
                                "id": 1327,
                                "nodeType": "Block",
                                "src": "6667:11:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1325,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1323,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1283,
                                        "src": "6669:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 1324,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6675:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "6669:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1326,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6669:7:3"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1290,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1287,
                      "src": "6385:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1291,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1079,
                          "src": "6388:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 1293,
                        "indexExpression": {
                          "id": 1292,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1253,
                          "src": "6398:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6388:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 1294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1056,
                      "src": "6388:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "6385:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1346,
                  "initializationExpression": {
                    "assignments": [
                      1287
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1287,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6380:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "6372:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1286,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6372:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1289,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6382:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6372:11:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6427:3:3",
                      "subExpression": {
                        "id": 1296,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1287,
                        "src": "6427:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1298,
                    "nodeType": "ExpressionStatement",
                    "src": "6427:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "6368:445:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1348,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1283,
                          "src": "6830:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6835:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6830:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6838:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 1347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6822:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6822:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "6822:35:3"
                },
                {
                  "expression": {
                    "id": 1354,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1277,
                    "src": "6874:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1257,
                  "id": 1355,
                  "nodeType": "Return",
                  "src": "6867:18:3"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 1357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "5932:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5955:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "5947:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5947:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5946:20:3"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "5990:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5990:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5989:10:3"
            },
            "scope": 2948,
            "src": "5923:969:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1422,
              "nodeType": "Block",
              "src": "7020:607:3",
              "statements": [
                {
                  "assignments": [
                    1365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1365,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "7038:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1422,
                      "src": "7030:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1364,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7030:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1370,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1368,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "7084:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1366,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6744,
                        "src": "7060:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 1367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6727,
                      "src": "7060:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$6422_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7060:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7030:79:3"
                },
                {
                  "assignments": [
                    1373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1373,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "7131:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1422,
                      "src": "7119:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1372,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1371,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1052,
                          "src": "7119:4:3"
                        },
                        "referencedDeclaration": 1052,
                        "src": "7119:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1374,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7119:18:3"
                },
                {
                  "body": {
                    "id": 1418,
                    "nodeType": "Block",
                    "src": "7303:296:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1382,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "7317:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1383,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "7326:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1392,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1388,
                                      "name": "tasksWaitingConfirmation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1074,
                                      "src": "7360:24:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      }
                                    },
                                    {
                                      "id": 1389,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1376,
                                      "src": "7385:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1386,
                                      "name": "DoubleEndedQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6744,
                                      "src": "7340:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                                        "typeString": "type(library DoubleEndedQueue)"
                                      }
                                    },
                                    "id": 1387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "at",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6681,
                                    "src": "7340:19:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$6422_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 1390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7340:47:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 1385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7332:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1384,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7332:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7332:56:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7326:63:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$1052_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7317:72:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1394,
                        "nodeType": "ExpressionStatement",
                        "src": "7317:72:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1395,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1373,
                                  "src": "7407:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1396,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1051,
                                "src": "7407:36:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1397,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7446:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7446:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7407:54:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1400,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1373,
                                  "src": "7465:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1401,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1035,
                                "src": "7465:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1402,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1359,
                                "src": "7481:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7465:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7407:80:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1405,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1373,
                                "src": "7491:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1406,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1049,
                              "src": "7491:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1407,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "7510:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7491:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7407:109:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1413,
                        "nodeType": "IfStatement",
                        "src": "7403:158:3",
                        "trueBody": {
                          "id": 1412,
                          "nodeType": "Block",
                          "src": "7517:44:3",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 1410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7542:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1363,
                              "id": 1411,
                              "nodeType": "Return",
                              "src": "7535:11:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1417,
                        "nodeType": "UncheckedBlock",
                        "src": "7574:15:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 1415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7584:3:3",
                              "subExpression": {
                                "id": 1414,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1376,
                                "src": "7586:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1416,
                            "nodeType": "ExpressionStatement",
                            "src": "7584:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1379,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1376,
                      "src": "7277:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1380,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1365,
                      "src": "7281:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7277:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1419,
                  "initializationExpression": {
                    "assignments": [
                      1376
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1376,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7271:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1419,
                        "src": "7263:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1375,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7263:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1378,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7274:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7263:12:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "7259:340:3"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7615:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1363,
                  "id": 1421,
                  "nodeType": "Return",
                  "src": "7608:12:3"
                }
              ]
            },
            "functionSelector": "f4739bd9",
            "id": 1423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areTasksAvailableToConfirm",
            "nameLocation": "6948:26:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6983:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "6975:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6975:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6974:16:3"
            },
            "returnParameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "7014:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7014:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7013:6:3"
            },
            "scope": 2948,
            "src": "6939:688:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1626,
              "nodeType": "Block",
              "src": "7736:1507:3",
              "statements": [
                {
                  "assignments": [
                    1436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1436,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "7754:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "7746:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7746:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1441,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1439,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "7800:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1437,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6744,
                        "src": "7776:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 1438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6727,
                      "src": "7776:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$6422_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7776:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7746:79:3"
                },
                {
                  "assignments": [
                    1444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1444,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "7847:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "7835:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1443,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1442,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1052,
                          "src": "7835:4:3"
                        },
                        "referencedDeclaration": 1052,
                        "src": "7835:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1445,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7835:18:3"
                },
                {
                  "assignments": [
                    1447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1447,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "7871:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "7863:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1446,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7863:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1448,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7863:14:3"
                },
                {
                  "assignments": [
                    1450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1450,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "7895:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "7887:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1449,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7887:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1452,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7901:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7887:15:3"
                },
                {
                  "body": {
                    "id": 1497,
                    "nodeType": "Block",
                    "src": "7957:308:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1460,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1447,
                            "src": "7971:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1465,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "8008:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 1466,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1454,
                                    "src": "8034:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1463,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6744,
                                    "src": "7988:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6681,
                                  "src": "7988:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$6422_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 1467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7988:48:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7980:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1461,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7980:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7980:57:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7971:66:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1470,
                        "nodeType": "ExpressionStatement",
                        "src": "7971:66:3"
                      },
                      {
                        "expression": {
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1471,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1444,
                            "src": "8051:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1472,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "8060:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1474,
                            "indexExpression": {
                              "id": 1473,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1447,
                              "src": "8066:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8060:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$1052_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "8051:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1476,
                        "nodeType": "ExpressionStatement",
                        "src": "8051:22:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1477,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1444,
                                "src": "8091:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1478,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1051,
                              "src": "8091:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 1479,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8130:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8130:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8091:54:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1482,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1444,
                                "src": "8149:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1483,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1047,
                              "src": "8149:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1484,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "8169:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "8149:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8091:84:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1492,
                        "nodeType": "IfStatement",
                        "src": "8087:140:3",
                        "trueBody": {
                          "id": 1491,
                          "nodeType": "Block",
                          "src": "8176:51:3",
                          "statements": [
                            {
                              "id": 1490,
                              "nodeType": "UncheckedBlock",
                              "src": "8194:19:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "8204:7:3",
                                    "subExpression": {
                                      "id": 1487,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1450,
                                      "src": "8206:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1489,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8204:7:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 1496,
                        "nodeType": "UncheckedBlock",
                        "src": "8240:15:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 1494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8250:3:3",
                              "subExpression": {
                                "id": 1493,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1454,
                                "src": "8252:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1495,
                            "nodeType": "ExpressionStatement",
                            "src": "8250:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1457,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1454,
                      "src": "7931:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1458,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1436,
                      "src": "7935:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7931:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1498,
                  "initializationExpression": {
                    "assignments": [
                      1454
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1454,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7925:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1498,
                        "src": "7917:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1453,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7917:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1456,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7928:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7917:12:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "7913:352:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1499,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1450,
                      "src": "8322:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8329:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8322:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1530,
                  "nodeType": "IfStatement",
                  "src": "8318:249:3",
                  "trueBody": {
                    "id": 1529,
                    "nodeType": "Block",
                    "src": "8332:235:3",
                    "statements": [
                      {
                        "assignments": [
                          1506
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1506,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "8360:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1529,
                            "src": "8346:22:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Governance.Task[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1504,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1503,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1052,
                                  "src": "8346:4:3"
                                },
                                "referencedDeclaration": 1052,
                                "src": "8346:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 1505,
                              "nodeType": "ArrayTypeName",
                              "src": "8346:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$1052_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1513,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 1511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8381:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8370:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1508,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1507,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1052,
                                  "src": "8374:4:3"
                                },
                                "referencedDeclaration": 1052,
                                "src": "8374:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 1509,
                              "nodeType": "ArrayTypeName",
                              "src": "8374:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$1052_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            }
                          },
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8370:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Governance.Task memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8346:37:3"
                      },
                      {
                        "assignments": [
                          1518
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1518,
                            "mutability": "mutable",
                            "name": "myReturnUint",
                            "nameLocation": "8414:12:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1529,
                            "src": "8397:29:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1516,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8397:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1517,
                              "nodeType": "ArrayTypeName",
                              "src": "8397:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1524,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 1522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8442:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8428:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1519,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8432:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1520,
                              "nodeType": "ArrayTypeName",
                              "src": "8432:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8428:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8397:47:3"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1525,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1506,
                              "src": "8533:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Governance.Task memory[] memory"
                              }
                            },
                            {
                              "id": 1526,
                              "name": "myReturnUint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1518,
                              "src": "8543:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "id": 1527,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8532:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                          }
                        },
                        "functionReturnParameters": 1434,
                        "id": 1528,
                        "nodeType": "Return",
                        "src": "8525:31:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1532,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "8585:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "8577:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1531,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8577:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1534,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8595:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8577:19:3"
                },
                {
                  "assignments": [
                    1539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1539,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "8620:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "8606:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Governance.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1537,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1536,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1052,
                            "src": "8606:4:3"
                          },
                          "referencedDeclaration": 1052,
                          "src": "8606:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 1538,
                        "nodeType": "ArrayTypeName",
                        "src": "8606:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$1052_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1546,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1544,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1450,
                        "src": "8641:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8630:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1541,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1540,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1052,
                            "src": "8634:4:3"
                          },
                          "referencedDeclaration": 1052,
                          "src": "8634:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 1542,
                        "nodeType": "ArrayTypeName",
                        "src": "8634:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$1052_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8630:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Governance.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8606:41:3"
                },
                {
                  "assignments": [
                    1551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1551,
                      "mutability": "mutable",
                      "name": "myTaskIds",
                      "nameLocation": "8674:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "8657:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8657:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1550,
                        "nodeType": "ArrayTypeName",
                        "src": "8657:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1557,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1555,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1450,
                        "src": "8700:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8686:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8690:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1553,
                        "nodeType": "ArrayTypeName",
                        "src": "8690:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8686:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8657:49:3"
                },
                {
                  "body": {
                    "id": 1620,
                    "nodeType": "Block",
                    "src": "8760:440:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1565,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1447,
                            "src": "8774:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1570,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "8811:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 1571,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1559,
                                    "src": "8837:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1568,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6744,
                                    "src": "8791:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6681,
                                  "src": "8791:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$6422_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 1572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8791:48:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8783:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1566,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8783:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8783:57:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8774:66:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1575,
                        "nodeType": "ExpressionStatement",
                        "src": "8774:66:3"
                      },
                      {
                        "expression": {
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1576,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1444,
                            "src": "8854:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1577,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "8863:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1579,
                            "indexExpression": {
                              "id": 1578,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1447,
                              "src": "8869:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8863:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$1052_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "8854:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1581,
                        "nodeType": "ExpressionStatement",
                        "src": "8854:22:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1582,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1444,
                                "src": "8894:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1583,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1051,
                              "src": "8894:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 1584,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8933:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8933:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8894:54:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 1590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1587,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1444,
                                "src": "8952:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1588,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1047,
                              "src": "8952:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1589,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "8972:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "8952:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8894:84:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1615,
                        "nodeType": "IfStatement",
                        "src": "8890:272:3",
                        "trueBody": {
                          "id": 1614,
                          "nodeType": "Block",
                          "src": "8979:183:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 1596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1592,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1539,
                                    "src": "8997:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Governance.Task memory[] memory"
                                    }
                                  },
                                  "id": 1594,
                                  "indexExpression": {
                                    "id": 1593,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1532,
                                    "src": "9005:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8997:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1595,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1444,
                                  "src": "9016:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "8997:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1597,
                              "nodeType": "ExpressionStatement",
                              "src": "8997:25:3"
                            },
                            {
                              "expression": {
                                "id": 1602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1598,
                                    "name": "myTaskIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1551,
                                    "src": "9040:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1600,
                                  "indexExpression": {
                                    "id": 1599,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1532,
                                    "src": "9050:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9040:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1601,
                                  "name": "taskId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1447,
                                  "src": "9061:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9040:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1603,
                              "nodeType": "ExpressionStatement",
                              "src": "9040:27:3"
                            },
                            {
                              "id": 1607,
                              "nodeType": "UncheckedBlock",
                              "src": "9085:21:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "9095:9:3",
                                    "subExpression": {
                                      "id": 1604,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1532,
                                      "src": "9097:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1606,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9095:9:3"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1608,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1532,
                                  "src": "9126:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 1609,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1450,
                                  "src": "9134:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9126:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1613,
                              "nodeType": "IfStatement",
                              "src": "9123:25:3",
                              "trueBody": {
                                "id": 1612,
                                "nodeType": "Block",
                                "src": "9140:8:3",
                                "statements": [
                                  {
                                    "id": 1611,
                                    "nodeType": "Break",
                                    "src": "9141:5:3"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 1619,
                        "nodeType": "UncheckedBlock",
                        "src": "9175:15:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 1617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9185:3:3",
                              "subExpression": {
                                "id": 1616,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1559,
                                "src": "9187:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1618,
                            "nodeType": "ExpressionStatement",
                            "src": "9185:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1562,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1559,
                      "src": "8734:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1563,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1436,
                      "src": "8738:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8734:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1621,
                  "initializationExpression": {
                    "assignments": [
                      1559
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1559,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8728:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1621,
                        "src": "8720:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1558,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8720:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1561,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8731:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8720:12:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "8716:484:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1622,
                        "name": "myTasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "9217:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Governance.Task memory[] memory"
                        }
                      },
                      {
                        "id": 1623,
                        "name": "myTaskIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1551,
                        "src": "9226:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 1624,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9216:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 1434,
                  "id": 1625,
                  "nodeType": "Return",
                  "src": "9209:27:3"
                }
              ]
            },
            "functionSelector": "4b50f16a",
            "id": 1627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksAssignedToWiz",
            "nameLocation": "7643:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "7672:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1627,
                  "src": "7665:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "7665:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7664:15:3"
            },
            "returnParameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1627,
                  "src": "7703:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$1052_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Governance.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1428,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1427,
                        "name": "Task",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1052,
                        "src": "7703:4:3"
                      },
                      "referencedDeclaration": 1052,
                      "src": "7703:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                        "typeString": "struct Governance.Task"
                      }
                    },
                    "id": 1429,
                    "nodeType": "ArrayTypeName",
                    "src": "7703:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$1052_storage_$dyn_storage_ptr",
                      "typeString": "struct Governance.Task[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1627,
                  "src": "7718:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1431,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7718:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1432,
                    "nodeType": "ArrayTypeName",
                    "src": "7718:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7702:33:3"
            },
            "scope": 2948,
            "src": "7634:1609:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1798,
              "nodeType": "Block",
              "src": "9407:1412:3",
              "statements": [
                {
                  "assignments": [
                    1636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1636,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "9425:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1798,
                      "src": "9417:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1635,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9417:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1637,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9417:13:3"
                },
                {
                  "body": {
                    "id": 1688,
                    "nodeType": "Block",
                    "src": "9478:506:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1646,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "9495:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1648,
                                      "indexExpression": {
                                        "id": 1647,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1639,
                                        "src": "9505:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9495:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1649,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1014,
                                    "src": "9495:36:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1651,
                                  "indexExpression": {
                                    "id": 1650,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1629,
                                    "src": "9532:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9495:44:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1652,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9542:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9542:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9495:62:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1655,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "9573:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1657,
                                    "indexExpression": {
                                      "id": 1656,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1639,
                                      "src": "9583:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9573:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 1658,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1026,
                                  "src": "9573:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1659,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9602:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1660,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9602:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9573:44:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9495:122:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1663,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1071,
                                    "src": "9621:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1665,
                                  "indexExpression": {
                                    "id": 1664,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1639,
                                    "src": "9631:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9621:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 1666,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1028,
                                "src": "9621:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 1667,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9649:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9649:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9621:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9495:169:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 1676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1671,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "9680:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 1673,
                                "indexExpression": {
                                  "id": 1672,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1639,
                                  "src": "9690:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9680:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 1674,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1030,
                              "src": "9680:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9710:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9680:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9495:216:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1683,
                        "nodeType": "IfStatement",
                        "src": "9492:285:3",
                        "trueBody": {
                          "id": 1682,
                          "nodeType": "Block",
                          "src": "9726:51:3",
                          "statements": [
                            {
                              "id": 1681,
                              "nodeType": "UncheckedBlock",
                              "src": "9744:19:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1679,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "9754:7:3",
                                    "subExpression": {
                                      "id": 1678,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1636,
                                      "src": "9756:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1680,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9754:7:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 1687,
                        "nodeType": "UncheckedBlock",
                        "src": "9959:15:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 1685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9969:3:3",
                              "subExpression": {
                                "id": 1684,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "9971:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1686,
                            "nodeType": "ExpressionStatement",
                            "src": "9969:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1642,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "9457:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1643,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "9460:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9460:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9457:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1689,
                  "initializationExpression": {
                    "assignments": [
                      1639
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1639,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9452:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "9444:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1638,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9444:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1641,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9454:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9444:11:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "9440:544:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1690,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1636,
                      "src": "10041:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10048:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10041:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1713,
                  "nodeType": "IfStatement",
                  "src": "10037:139:3",
                  "trueBody": {
                    "id": 1712,
                    "nodeType": "Block",
                    "src": "10051:125:3",
                    "statements": [
                      {
                        "assignments": [
                          1697
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1697,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "10081:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1712,
                            "src": "10065:24:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1695,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "10065:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 1696,
                              "nodeType": "ArrayTypeName",
                              "src": "10065:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1703,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 1701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10104:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "10091:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1698,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "10095:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 1699,
                              "nodeType": "ArrayTypeName",
                              "src": "10095:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 1702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10091:15:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10065:41:3"
                      },
                      {
                        "expression": {
                          "id": 1708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1704,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1697,
                              "src": "10120:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 1706,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10129:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10120:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 1707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10134:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "10120:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1709,
                        "nodeType": "ExpressionStatement",
                        "src": "10120:16:3"
                      },
                      {
                        "expression": {
                          "id": 1710,
                          "name": "myReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1697,
                          "src": "10157:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "functionReturnParameters": 1634,
                        "id": 1711,
                        "nodeType": "Return",
                        "src": "10150:15:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1718,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "10202:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1798,
                      "src": "10186:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1716,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10186:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1717,
                        "nodeType": "ArrayTypeName",
                        "src": "10186:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1724,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1722,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "10225:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10212:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1719,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10216:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1720,
                        "nodeType": "ArrayTypeName",
                        "src": "10216:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 1723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10212:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10186:45:3"
                },
                {
                  "assignments": [
                    1726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1726,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "10249:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1798,
                      "src": "10241:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1725,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10241:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1728,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10259:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10241:19:3"
                },
                {
                  "body": {
                    "id": 1794,
                    "nodeType": "Block",
                    "src": "10308:481:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1737,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "10325:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1739,
                                      "indexExpression": {
                                        "id": 1738,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1730,
                                        "src": "10335:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10325:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1740,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1014,
                                    "src": "10325:36:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1742,
                                  "indexExpression": {
                                    "id": 1741,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1629,
                                    "src": "10362:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10325:44:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1743,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10372:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1744,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10372:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10325:62:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1746,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "10403:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1748,
                                    "indexExpression": {
                                      "id": 1747,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1730,
                                      "src": "10413:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10403:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 1749,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1026,
                                  "src": "10403:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1750,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10432:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10432:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10403:44:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10325:122:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1754,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1071,
                                    "src": "10451:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1756,
                                  "indexExpression": {
                                    "id": 1755,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1730,
                                    "src": "10461:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10451:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 1757,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1028,
                                "src": "10451:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 1758,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10479:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10479:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10451:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10325:169:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1762,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "10510:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 1764,
                                "indexExpression": {
                                  "id": 1763,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1730,
                                  "src": "10520:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10510:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 1765,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1030,
                              "src": "10510:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10540:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10510:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10325:216:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1789,
                        "nodeType": "IfStatement",
                        "src": "10322:429:3",
                        "trueBody": {
                          "id": 1788,
                          "nodeType": "Block",
                          "src": "10556:195:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 1776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1769,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1718,
                                    "src": "10574:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 1771,
                                  "indexExpression": {
                                    "id": 1770,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1726,
                                    "src": "10582:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10574:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1772,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "10593:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1774,
                                    "indexExpression": {
                                      "id": 1773,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1730,
                                      "src": "10603:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10593:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 1775,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1016,
                                  "src": "10593:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "10574:40:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 1777,
                              "nodeType": "ExpressionStatement",
                              "src": "10574:40:3"
                            },
                            {
                              "id": 1781,
                              "nodeType": "UncheckedBlock",
                              "src": "10632:21:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "10642:9:3",
                                    "subExpression": {
                                      "id": 1778,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1726,
                                      "src": "10644:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1780,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10642:9:3"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1782,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1726,
                                  "src": "10673:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1783,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1636,
                                  "src": "10684:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10673:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1787,
                              "nodeType": "IfStatement",
                              "src": "10670:67:3",
                              "trueBody": {
                                "id": 1786,
                                "nodeType": "Block",
                                "src": "10691:46:3",
                                "statements": [
                                  {
                                    "id": 1785,
                                    "nodeType": "Break",
                                    "src": "10713:5:3"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 1793,
                        "nodeType": "UncheckedBlock",
                        "src": "10764:15:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 1791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "10774:3:3",
                              "subExpression": {
                                "id": 1790,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1730,
                                "src": "10776:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1792,
                            "nodeType": "ExpressionStatement",
                            "src": "10774:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1733,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1730,
                      "src": "10287:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1734,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "10290:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10290:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10287:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1795,
                  "initializationExpression": {
                    "assignments": [
                      1730
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1730,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10282:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "10274:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1729,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10274:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1732,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10284:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10274:11:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "10270:519:3"
                },
                {
                  "expression": {
                    "id": 1796,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1718,
                    "src": "10805:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1634,
                  "id": 1797,
                  "nodeType": "Return",
                  "src": "10798:14:3"
                }
              ]
            },
            "functionSelector": "b2bad544",
            "id": 1799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "9328:23:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1629,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "9359:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1799,
                  "src": "9352:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1628,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "9352:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9351:15:3"
            },
            "returnParameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1799,
                  "src": "9390:15:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1631,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "9390:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1632,
                    "nodeType": "ArrayTypeName",
                    "src": "9390:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9389:17:3"
            },
            "scope": 2948,
            "src": "9319:1500:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1812,
              "nodeType": "Block",
              "src": "10986:44:3",
              "statements": [
                {
                  "expression": {
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1806,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "10996:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$10668",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1808,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1801,
                          "src": "11017:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1807,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10668,
                        "src": "11009:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$10668_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 1809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11009:14:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$10668",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "10996:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$10668",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 1811,
                  "nodeType": "ExpressionStatement",
                  "src": "10996:27:3"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 1813,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1804,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1803,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6306,
                  "src": "10976:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "10976:9:3"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "10938:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1801,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "10960:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1813,
                  "src": "10952:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10952:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10951:15:3"
            },
            "returnParameters": {
              "id": 1805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10986:0:3"
            },
            "scope": 2948,
            "src": "10929:101:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1888,
              "nodeType": "Block",
              "src": "11224:1153:3",
              "statements": [
                {
                  "body": {
                    "id": 1886,
                    "nodeType": "Block",
                    "src": "11271:1100:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1829,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "11315:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1831,
                                      "indexExpression": {
                                        "id": 1830,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1819,
                                        "src": "11325:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11315:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1832,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1016,
                                    "src": "11315:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1827,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11298:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11298:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11298:39:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1826,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11288:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11288:50:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1838,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1815,
                                    "src": "11369:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1836,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11352:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1837,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11352:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11352:27:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1835,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11342:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11342:38:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "11288:92:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1881,
                        "nodeType": "IfStatement",
                        "src": "11285:1048:3",
                        "trueBody": {
                          "id": 1880,
                          "nodeType": "Block",
                          "src": "11381:952:3",
                          "statements": [
                            {
                              "assignments": [
                                1844
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1844,
                                  "mutability": "mutable",
                                  "name": "myTaskType",
                                  "nameLocation": "11480:10:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1880,
                                  "src": "11463:27:3",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 1843,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1842,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1031,
                                      "src": "11463:8:3"
                                    },
                                    "referencedDeclaration": 1031,
                                    "src": "11463:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1848,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1845,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "11493:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 1847,
                                "indexExpression": {
                                  "id": 1846,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1819,
                                  "src": "11503:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11493:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11463:42:3"
                            },
                            {
                              "assignments": [
                                1851
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1851,
                                  "mutability": "mutable",
                                  "name": "displacedTaskType",
                                  "nameLocation": "11540:17:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1880,
                                  "src": "11523:34:3",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 1850,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1849,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1031,
                                      "src": "11523:8:3"
                                    },
                                    "referencedDeclaration": 1031,
                                    "src": "11523:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1858,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1852,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "11560:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 1857,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1853,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "11570:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "11570:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11587:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "11570:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11560:29:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11523:66:3"
                            },
                            {
                              "expression": {
                                "id": 1861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1859,
                                  "name": "myTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1844,
                                  "src": "11705:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1860,
                                  "name": "displacedTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1851,
                                  "src": "11718:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "src": "11705:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                                  "typeString": "struct Governance.TaskType storage pointer"
                                }
                              },
                              "id": 1862,
                              "nodeType": "ExpressionStatement",
                              "src": "11705:30:3"
                            },
                            {
                              "expression": {
                                "id": 1869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11753:36:3",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1863,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1071,
                                    "src": "11760:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1868,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1867,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1864,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "11770:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1865,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11770:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1866,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11787:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11770:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11760:29:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1870,
                              "nodeType": "ExpressionStatement",
                              "src": "11753:36:3"
                            },
                            {
                              "expression": {
                                "id": 1877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "12259:36:3",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1871,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1071,
                                    "src": "12266:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1876,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1875,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1872,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "12276:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1873,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12276:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1874,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12293:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "12276:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12266:29:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1878,
                              "nodeType": "ExpressionStatement",
                              "src": "12259:36:3"
                            },
                            {
                              "id": 1879,
                              "nodeType": "Break",
                              "src": "12313:5:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1885,
                        "nodeType": "UncheckedBlock",
                        "src": "12346:15:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 1883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "12356:3:3",
                              "subExpression": {
                                "id": 1882,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1819,
                                "src": "12358:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1884,
                            "nodeType": "ExpressionStatement",
                            "src": "12356:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1822,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1819,
                      "src": "11251:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1823,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "11253:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11253:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11251:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1887,
                  "initializationExpression": {
                    "assignments": [
                      1819
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1819,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11246:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "11238:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1818,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11238:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1821,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11248:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11238:11:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "11234:1137:3"
                }
              ]
            },
            "functionSelector": "f713b7ed",
            "id": 1889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteTaskTypeByIPFSHash",
            "nameLocation": "11165:24:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1815,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "11204:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1889,
                  "src": "11190:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11190:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11189:25:3"
            },
            "returnParameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11224:0:3"
            },
            "scope": 2948,
            "src": "11156:1221:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1909,
              "nodeType": "Block",
              "src": "12632:200:3",
              "statements": [
                {
                  "expression": {
                    "id": 1901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1897,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "12686:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$10668",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1899,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1892,
                          "src": "12707:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1898,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10668,
                        "src": "12699:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$10668_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 1900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12699:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$10668",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "12686:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$10668",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 1902,
                  "nodeType": "ExpressionStatement",
                  "src": "12686:26:3"
                },
                {
                  "expression": {
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1903,
                      "name": "wizardTower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1004,
                      "src": "12722:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WizardTower_$3631",
                        "typeString": "contract WizardTower"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1905,
                          "name": "_wizardTower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1894,
                          "src": "12748:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1904,
                        "name": "WizardTower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3631,
                        "src": "12736:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WizardTower_$3631_$",
                          "typeString": "type(contract WizardTower)"
                        }
                      },
                      "id": 1906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12736:25:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WizardTower_$3631",
                        "typeString": "contract WizardTower"
                      }
                    },
                    "src": "12722:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WizardTower_$3631",
                      "typeString": "contract WizardTower"
                    }
                  },
                  "id": 1908,
                  "nodeType": "ExpressionStatement",
                  "src": "12722:39:3"
                }
              ]
            },
            "documentation": {
              "id": 1890,
              "nodeType": "StructuredDocumentation",
              "src": "12491:89:3",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 1910,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1892,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "12605:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "12597:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12597:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1894,
                  "mutability": "mutable",
                  "name": "_wizardTower",
                  "nameLocation": "12619:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "12611:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12611:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12596:36:3"
            },
            "returnParameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12632:0:3"
            },
            "scope": 2948,
            "src": "12585:247:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1913,
              "nodeType": "Block",
              "src": "12896:7:3",
              "statements": []
            },
            "id": 1914,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12876:2:3"
            },
            "returnParameters": {
              "id": 1912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12896:0:3"
            },
            "scope": 2948,
            "src": "12869:34:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2003,
              "nodeType": "Block",
              "src": "12993:580:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1926,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1916,
                          "src": "13011:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1927,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "13024:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13011:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 1929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13040:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 1925,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13003:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13003:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1931,
                  "nodeType": "ExpressionStatement",
                  "src": "13003:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1935,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1918,
                              "src": "13096:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1933,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "13077:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$10668",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7020,
                            "src": "13077:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13077:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1937,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13104:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13104:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13077:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13116:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 1932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13069:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13069:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1942,
                  "nodeType": "ExpressionStatement",
                  "src": "13069:66:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1944,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1010,
                              "src": "13153:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 1946,
                            "indexExpression": {
                              "id": 1945,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1916,
                              "src": "13172:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13153:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1948,
                          "indexExpression": {
                            "id": 1947,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "13184:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13153:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13192:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13153:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 1951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13195:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 1943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13145:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13145:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1953,
                  "nodeType": "ExpressionStatement",
                  "src": "13145:66:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1955,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "13229:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13236:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13229:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1958,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "13241:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1959,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1079,
                                "src": "13250:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 1961,
                              "indexExpression": {
                                "id": 1960,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1916,
                                "src": "13260:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13250:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 1962,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1056,
                            "src": "13250:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "13241:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13229:58:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13221:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13221:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1966,
                  "nodeType": "ExpressionStatement",
                  "src": "13221:67:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1968,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13306:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13306:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1970,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "13324:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 1972,
                            "indexExpression": {
                              "id": 1971,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1916,
                              "src": "13334:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13324:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1066,
                          "src": "13324:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "13306:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13298:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13298:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1976,
                  "nodeType": "ExpressionStatement",
                  "src": "13298:61:3"
                },
                {
                  "expression": {
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1977,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "13369:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1980,
                        "indexExpression": {
                          "id": 1978,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1916,
                          "src": "13388:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13369:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1981,
                      "indexExpression": {
                        "id": 1979,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1918,
                        "src": "13400:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13369:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1982,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1920,
                        "src": "13409:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13417:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "13409:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13369:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1986,
                  "nodeType": "ExpressionStatement",
                  "src": "13369:49:3"
                },
                {
                  "expression": {
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1987,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "13461:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 1989,
                          "indexExpression": {
                            "id": 1988,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1916,
                            "src": "13471:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13461:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 1990,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1060,
                        "src": "13461:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 1992,
                      "indexExpression": {
                        "id": 1991,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1920,
                        "src": "13489:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13461:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13499:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13461:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1995,
                  "nodeType": "ExpressionStatement",
                  "src": "13461:39:3"
                },
                {
                  "expression": {
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1996,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1079,
                          "src": "13529:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 1998,
                        "indexExpression": {
                          "id": 1997,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1916,
                          "src": "13539:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13529:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 1999,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1062,
                      "src": "13529:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13565:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13529:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "13529:37:3"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 2004,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1923,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1922,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2937,
                  "src": "12982:10:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "12982:10:3"
              }
            ],
            "name": "vote",
            "nameLocation": "12918:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1916,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "12931:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2004,
                  "src": "12923:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12923:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1918,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "12951:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2004,
                  "src": "12943:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12943:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1920,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "12966:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2004,
                  "src": "12958:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12958:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12922:50:3"
            },
            "returnParameters": {
              "id": 1924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12993:0:3"
            },
            "scope": 2948,
            "src": "12909:664:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2080,
              "nodeType": "Block",
              "src": "13801:580:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2022,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2008,
                            "src": "13819:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13838:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13819:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 2027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2025,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2008,
                            "src": "13843:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 2026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13862:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "13843:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13819:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 2029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13867:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 2021,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13811:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13811:84:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "13811:84:3"
                },
                {
                  "expression": {
                    "id": 2034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2032,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "13905:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13923:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13905:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2035,
                  "nodeType": "ExpressionStatement",
                  "src": "13905:19:3"
                },
                {
                  "assignments": [
                    2038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2038,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "13972:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2080,
                      "src": "13955:27:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$1067_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 2037,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2036,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1067,
                          "src": "13955:8:3"
                        },
                        "referencedDeclaration": 1067,
                        "src": "13955:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$1067_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2042,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2039,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "13985:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1067_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 2041,
                    "indexExpression": {
                      "id": 2040,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "13995:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13985:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$1067_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13955:55:3"
                },
                {
                  "expression": {
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2043,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "14024:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$1067_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 2045,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1064,
                      "src": "14024:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2046,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2012,
                      "src": "14050:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14024:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "14024:39:3"
                },
                {
                  "expression": {
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2049,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "14077:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$1067_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 2051,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1066,
                      "src": "14077:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2052,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2014,
                      "src": "14103:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14077:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "14077:39:3"
                },
                {
                  "expression": {
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2055,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "14130:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$1067_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 2057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1056,
                      "src": "14130:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2058,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2008,
                      "src": "14159:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "14130:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 2060,
                  "nodeType": "ExpressionStatement",
                  "src": "14130:45:3"
                },
                {
                  "expression": {
                    "id": 2065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2061,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "14189:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$1067_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 2063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1054,
                      "src": "14189:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2064,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2006,
                      "src": "14211:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "14189:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2066,
                  "nodeType": "ExpressionStatement",
                  "src": "14189:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2068,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2006,
                        "src": "14247:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2071,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "14265:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14258:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 2069,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "14258:6:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14258:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14282:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2074,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "14285:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 2075,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2012,
                        "src": "14297:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 2076,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "14312:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 2077,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2016,
                        "src": "14327:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 2067,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "14231:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14231:112:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "14231:112:3"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 2081,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2019,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2018,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2947,
                  "src": "13791:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "13791:9:3"
              }
            ],
            "name": "createProposal",
            "nameLocation": "13628:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13659:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "13643:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13643:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2008,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "13677:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "13670:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13670:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2010,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13702:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "13695:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2009,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13695:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2012,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13721:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "13714:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2011,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13714:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13743:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "13736:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13736:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2016,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13765:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "13758:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2015,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13758:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13642:139:3"
            },
            "returnParameters": {
              "id": 2020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13801:0:3"
            },
            "scope": 2948,
            "src": "13619:762:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2108,
              "nodeType": "Block",
              "src": "14585:123:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2099,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2083,
                        "src": "14611:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14622:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2101,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2085,
                        "src": "14625:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2102,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2087,
                        "src": "14643:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 2103,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2089,
                        "src": "14655:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 2104,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2091,
                        "src": "14670:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 2105,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2093,
                        "src": "14685:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 2098,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "14595:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 2106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14595:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2107,
                  "nodeType": "ExpressionStatement",
                  "src": "14595:106:3"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 2109,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2096,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2095,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2947,
                  "src": "14575:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "14575:9:3"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "14397:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2083,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "14428:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "14412:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2082,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14412:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2085,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "14445:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "14439:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14439:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2087,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "14470:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "14463:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14463:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2089,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "14489:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "14482:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14482:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2091,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "14527:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "14520:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2090,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14520:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2093,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "14549:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "14542:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2092,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14542:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14411:154:3"
            },
            "returnParameters": {
              "id": 2097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14585:0:3"
            },
            "scope": 2948,
            "src": "14388:320:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2201,
              "nodeType": "Block",
              "src": "14919:726:3",
              "statements": [
                {
                  "assignments": [
                    2127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2127,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "14937:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2201,
                      "src": "14929:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14929:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2130,
                  "initialValue": {
                    "expression": {
                      "id": 2128,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "14955:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "14955:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14929:42:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2131,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "14981:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 2133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "14981:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$1031_storage_$bound_to$_t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14981:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 2135,
                  "nodeType": "ExpressionStatement",
                  "src": "14981:16:3"
                },
                {
                  "assignments": [
                    2138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2138,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "15024:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2201,
                      "src": "15007:28:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 2137,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2136,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1031,
                          "src": "15007:8:3"
                        },
                        "referencedDeclaration": 1031,
                        "src": "15007:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2142,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2139,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "15038:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 2141,
                    "indexExpression": {
                      "id": 2140,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2127,
                      "src": "15048:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15038:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15007:57:3"
                },
                {
                  "expression": {
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2143,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "15078:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 2145,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1016,
                      "src": "15078:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2146,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2111,
                      "src": "15100:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "15078:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2148,
                  "nodeType": "ExpressionStatement",
                  "src": "15078:31:3"
                },
                {
                  "expression": {
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2149,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "15123:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 2151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1018,
                      "src": "15123:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15144:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "15123:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "15123:26:3"
                },
                {
                  "expression": {
                    "id": 2159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2155,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "15163:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 2157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1020,
                      "src": "15163:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2158,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2113,
                      "src": "15188:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "15163:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 2160,
                  "nodeType": "ExpressionStatement",
                  "src": "15163:36:3"
                },
                {
                  "expression": {
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2161,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "15213:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1022,
                      "src": "15213:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2164,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2115,
                      "src": "15243:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "15213:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "15213:46:3"
                },
                {
                  "expression": {
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2167,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "15273:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 2169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1024,
                      "src": "15273:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2170,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2117,
                      "src": "15297:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "15273:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
                  "src": "15273:34:3"
                },
                {
                  "expression": {
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2173,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "15321:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 2175,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1026,
                      "src": "15321:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2176,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2119,
                      "src": "15348:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "15321:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 2178,
                  "nodeType": "ExpressionStatement",
                  "src": "15321:40:3"
                },
                {
                  "expression": {
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2179,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "15375:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 2181,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1028,
                      "src": "15375:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2182,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2121,
                      "src": "15402:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "15375:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 2184,
                  "nodeType": "ExpressionStatement",
                  "src": "15375:40:3"
                },
                {
                  "expression": {
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2185,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "15429:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$1031_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 2187,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1030,
                      "src": "15429:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2188,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2123,
                      "src": "15458:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "15429:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "15429:44:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2192,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2111,
                        "src": "15538:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 2193,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "15549:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 2194,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "15562:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2195,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "15580:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 2196,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2119,
                        "src": "15592:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 2197,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2121,
                        "src": "15607:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 2198,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2123,
                        "src": "15622:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 2191,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "15519:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15519:119:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2200,
                  "nodeType": "EmitStatement",
                  "src": "15514:124:3"
                }
              ]
            },
            "id": 2202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "14723:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2111,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "14755:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2202,
                  "src": "14739:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14739:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2113,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "14773:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2202,
                  "src": "14766:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2112,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14766:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "14792:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2202,
                  "src": "14786:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14786:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "14817:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2202,
                  "src": "14810:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14810:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "14849:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2202,
                  "src": "14842:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14842:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "14871:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2202,
                  "src": "14864:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2120,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14864:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2123,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "14893:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2202,
                  "src": "14886:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14886:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14738:171:3"
            },
            "returnParameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14919:0:3"
            },
            "scope": 2948,
            "src": "14714:931:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2303,
              "nodeType": "Block",
              "src": "15717:1063:3",
              "statements": [
                {
                  "assignments": [
                    2208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2208,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "15735:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2303,
                      "src": "15727:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2207,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15727:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2213,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2211,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "15781:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 2209,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6744,
                        "src": "15757:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 2210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6727,
                      "src": "15757:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$6422_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15757:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15727:79:3"
                },
                {
                  "assignments": [
                    2216
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2216,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "15828:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2303,
                      "src": "15816:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 2215,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2214,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1052,
                          "src": "15816:4:3"
                        },
                        "referencedDeclaration": 1052,
                        "src": "15816:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2217,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15816:18:3"
                },
                {
                  "assignments": [
                    2219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2219,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "15852:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2303,
                      "src": "15844:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2218,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15844:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2220,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15844:14:3"
                },
                {
                  "body": {
                    "id": 2301,
                    "nodeType": "Block",
                    "src": "15999:722:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2228,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2219,
                            "src": "16013:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2233,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "16050:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 2234,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2222,
                                    "src": "16076:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2231,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6744,
                                    "src": "16030:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 2232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6681,
                                  "src": "16030:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$6422_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 2235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16030:48:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 2230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16022:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2229,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16022:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16022:57:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16013:66:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2238,
                        "nodeType": "ExpressionStatement",
                        "src": "16013:66:3"
                      },
                      {
                        "expression": {
                          "id": 2243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2239,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2216,
                            "src": "16093:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2240,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "16102:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 2242,
                            "indexExpression": {
                              "id": 2241,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2219,
                              "src": "16108:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16102:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$1052_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "16093:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 2244,
                        "nodeType": "ExpressionStatement",
                        "src": "16093:22:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2245,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2216,
                                  "src": "16133:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 2246,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1051,
                                "src": "16133:36:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 2247,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "16172:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "16172:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16133:54:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2250,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2216,
                                  "src": "16191:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 2251,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1035,
                                "src": "16191:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 2252,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2204,
                                "src": "16207:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16191:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "16133:80:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2255,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2216,
                                "src": "16217:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 2256,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1049,
                              "src": "16217:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 2257,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2204,
                              "src": "16236:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16217:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "16133:109:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2296,
                        "nodeType": "IfStatement",
                        "src": "16129:554:3",
                        "trueBody": {
                          "id": 2295,
                          "nodeType": "Block",
                          "src": "16243:440:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2260,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2216,
                                    "src": "16421:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 2262,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1047,
                                  "src": "16421:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2265,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2204,
                                      "src": "16448:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16441:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 2263,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16441:6:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16441:14:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16421:34:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 2268,
                              "nodeType": "ExpressionStatement",
                              "src": "16421:34:3"
                            },
                            {
                              "expression": {
                                "id": 2279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2269,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2216,
                                    "src": "16473:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 2271,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1051,
                                  "src": "16473:36:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2277,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 2274,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16519:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 2275,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16519:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 2276,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1093,
                                        "src": "16537:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16519:34:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2273,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16512:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 2272,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16512:6:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16512:42:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "16473:81:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 2280,
                              "nodeType": "ExpressionStatement",
                              "src": "16473:81:3"
                            },
                            {
                              "expression": {
                                "id": 2285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2281,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1086,
                                    "src": "16572:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 2283,
                                  "indexExpression": {
                                    "id": 2282,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2219,
                                    "src": "16578:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16572:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2284,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2216,
                                  "src": "16588:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "16572:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 2286,
                              "nodeType": "ExpressionStatement",
                              "src": "16572:22:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2288,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2204,
                                    "src": "16638:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2289,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2219,
                                    "src": "16646:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 2290,
                                      "name": "tasks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1086,
                                      "src": "16654:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                      }
                                    },
                                    "id": 2292,
                                    "indexExpression": {
                                      "id": 2291,
                                      "name": "taskId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2219,
                                      "src": "16660:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16654:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$1052_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Task_$1052_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  ],
                                  "id": 2287,
                                  "name": "VerificationAssigned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1108,
                                  "src": "16617:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Task_$1052_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,struct Governance.Task memory)"
                                  }
                                },
                                "id": 2293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16617:51:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2294,
                              "nodeType": "EmitStatement",
                              "src": "16612:56:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2300,
                        "nodeType": "UncheckedBlock",
                        "src": "16696:15:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 2298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16706:3:3",
                              "subExpression": {
                                "id": 2297,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2222,
                                "src": "16708:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2299,
                            "nodeType": "ExpressionStatement",
                            "src": "16706:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2225,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2222,
                      "src": "15973:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2226,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2208,
                      "src": "15977:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15973:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2302,
                  "initializationExpression": {
                    "assignments": [
                      2222
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2222,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15967:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2302,
                        "src": "15959:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15959:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2224,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15970:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15959:12:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "15955:766:3"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 2304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "15661:30:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2204,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "15700:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2304,
                  "src": "15692:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15692:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15691:16:3"
            },
            "returnParameters": {
              "id": 2206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15717:0:3"
            },
            "scope": 2948,
            "src": "15652:1128:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2441,
              "nodeType": "Block",
              "src": "16872:1200:3",
              "statements": [
                {
                  "body": {
                    "id": 2439,
                    "nodeType": "Block",
                    "src": "17005:1041:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 2336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2324,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "17043:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2326,
                                      "indexExpression": {
                                        "id": 2325,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2314,
                                        "src": "17053:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17043:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 2327,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1016,
                                    "src": "17043:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2322,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "17032:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "17032:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17032:33:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2321,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "17022:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17022:44:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2333,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2306,
                                    "src": "17091:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2331,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "17080:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "17080:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17080:21:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2330,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "17070:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17070:32:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "17022:80:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2434,
                        "nodeType": "IfStatement",
                        "src": "17019:989:3",
                        "trueBody": {
                          "id": 2433,
                          "nodeType": "Block",
                          "src": "17103:905:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2344,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2338,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1071,
                                            "src": "17189:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 2340,
                                          "indexExpression": {
                                            "id": 2339,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2314,
                                            "src": "17199:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17189:12:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 2341,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1026,
                                        "src": "17189:25:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 2342,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "17218:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 2343,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "17218:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "17189:44:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2351,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 2345,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "17237:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 2346,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "17237:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2347,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1071,
                                            "src": "17256:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 2349,
                                          "indexExpression": {
                                            "id": 2348,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2314,
                                            "src": "17266:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17256:12:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 2350,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1028,
                                        "src": "17256:25:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "17237:44:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "17189:92:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 2353,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17283:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 2337,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "17181:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17181:124:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2355,
                              "nodeType": "ExpressionStatement",
                              "src": "17181:124:3"
                            },
                            {
                              "assignments": [
                                2358
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2358,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "17370:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2433,
                                  "src": "17358:18:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 2357,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2356,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1052,
                                      "src": "17358:4:3"
                                    },
                                    "referencedDeclaration": 1052,
                                    "src": "17358:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2377,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2360,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2306,
                                    "src": "17384:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 2361,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2310,
                                    "src": "17394:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 2362,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2308,
                                    "src": "17402:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17409:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2364,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "17412:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2366,
                                      "indexExpression": {
                                        "id": 2365,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2314,
                                        "src": "17422:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17412:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 2367,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1022,
                                    "src": "17412:28:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2368,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "17442:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2370,
                                      "indexExpression": {
                                        "id": 2369,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2314,
                                        "src": "17452:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17442:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 2371,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1024,
                                    "src": "17442:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17466:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2373,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17469:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2374,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17472:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17475:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2359,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1052,
                                  "src": "17379:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$1052_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 2376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17379:98:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "17358:119:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2381,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "17521:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2384,
                                        "name": "totalTasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1088,
                                        "src": "17555:19:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 2383,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "17547:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 2382,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "17547:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17547:28:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2378,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6744,
                                    "src": "17495:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 2380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6454,
                                  "src": "17495:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$6422_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 2386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17495:81:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2387,
                              "nodeType": "ExpressionStatement",
                              "src": "17495:81:3"
                            },
                            {
                              "expression": {
                                "id": 2392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2388,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1086,
                                    "src": "17594:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 2390,
                                  "indexExpression": {
                                    "id": 2389,
                                    "name": "totalTasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1088,
                                    "src": "17600:19:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17594:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2391,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2358,
                                  "src": "17623:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "17594:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 2393,
                              "nodeType": "ExpressionStatement",
                              "src": "17594:35:3"
                            },
                            {
                              "expression": {
                                "id": 2396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2394,
                                  "name": "totalTasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1088,
                                  "src": "17647:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 2395,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17668:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "17647:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2397,
                              "nodeType": "ExpressionStatement",
                              "src": "17647:22:3"
                            },
                            {
                              "expression": {
                                "id": 2408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2398,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "17724:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2400,
                                      "indexExpression": {
                                        "id": 2399,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2314,
                                        "src": "17734:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17724:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 2401,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1014,
                                    "src": "17724:36:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 2403,
                                  "indexExpression": {
                                    "id": 2402,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2310,
                                    "src": "17761:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17724:44:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2404,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "17771:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "17771:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17789:6:3",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "17771:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17724:71:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2409,
                              "nodeType": "ExpressionStatement",
                              "src": "17724:71:3"
                            },
                            {
                              "expression": {
                                "id": 2420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2410,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "17813:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 2412,
                                    "indexExpression": {
                                      "id": 2411,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2314,
                                      "src": "17823:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17813:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 2413,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "availableSlots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1030,
                                  "src": "17813:27:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 2419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2414,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1071,
                                        "src": "17843:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2416,
                                      "indexExpression": {
                                        "id": 2415,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2314,
                                        "src": "17853:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17843:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$1031_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 2417,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "availableSlots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1030,
                                    "src": "17843:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17873:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "17843:31:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "17813:61:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 2421,
                              "nodeType": "ExpressionStatement",
                              "src": "17813:61:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2423,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2310,
                                    "src": "17912:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2426,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2424,
                                      "name": "totalTasksAttempted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1088,
                                      "src": "17919:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 2425,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17940:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "17919:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2427,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2306,
                                    "src": "17943:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2428,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "17954:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2429,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "17954:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2422,
                                  "name": "TaskCompleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1164,
                                  "src": "17898:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,string memory,uint256)"
                                  }
                                },
                                "id": 2430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17898:72:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2431,
                              "nodeType": "EmitStatement",
                              "src": "17893:77:3"
                            },
                            {
                              "id": 2432,
                              "nodeType": "Break",
                              "src": "17988:5:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2438,
                        "nodeType": "UncheckedBlock",
                        "src": "18021:15:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 2436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "18031:3:3",
                              "subExpression": {
                                "id": 2435,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2314,
                                "src": "18033:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2437,
                            "nodeType": "ExpressionStatement",
                            "src": "18031:3:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2317,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2314,
                      "src": "16985:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2318,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "16987:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$1031_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 2319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "16987:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16985:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2440,
                  "initializationExpression": {
                    "assignments": [
                      2314
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2314,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16978:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2440,
                        "src": "16970:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2313,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16970:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2316,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16982:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16970:13:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "16966:1080:3"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 2442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "16795:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2306,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "16822:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2442,
                  "src": "16808:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16808:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "16841:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2442,
                  "src": "16833:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16833:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2310,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "16855:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2442,
                  "src": "16848:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2309,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "16848:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16807:55:3"
            },
            "returnParameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16872:0:3"
            },
            "scope": 2948,
            "src": "16786:1286:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2511,
              "nodeType": "Block",
              "src": "18169:412:3",
              "statements": [
                {
                  "assignments": [
                    2453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2453,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "18192:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2511,
                      "src": "18179:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2452,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18179:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2460,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 2456,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2447,
                          "src": "18221:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 2458,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 2457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18229:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18221:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2454,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "18204:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "18204:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 2459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18204:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18179:53:3"
                },
                {
                  "condition": {
                    "id": 2461,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2449,
                    "src": "18245:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2490,
                  "nodeType": "IfStatement",
                  "src": "18242:193:3",
                  "trueBody": {
                    "id": 2489,
                    "nodeType": "Block",
                    "src": "18255:180:3",
                    "statements": [
                      {
                        "body": {
                          "id": 2487,
                          "nodeType": "Block",
                          "src": "18308:117:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2470,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2447,
                                    "src": "18326:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 2472,
                                  "indexExpression": {
                                    "id": 2471,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2463,
                                    "src": "18334:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18326:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2476,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2447,
                                            "src": "18366:7:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 2478,
                                          "indexExpression": {
                                            "id": 2477,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2463,
                                            "src": "18374:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "18366:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2474,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "18349:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 2475,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "18349:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 2479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18349:28:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 2473,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "18339:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 2480,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18339:39:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "18326:52:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 2482,
                              "nodeType": "ExpressionStatement",
                              "src": "18326:52:3"
                            },
                            {
                              "id": 2486,
                              "nodeType": "UncheckedBlock",
                              "src": "18396:15:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "18406:3:3",
                                    "subExpression": {
                                      "id": 2483,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2463,
                                      "src": "18408:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2485,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18406:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2466,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2463,
                            "src": "18288:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2467,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2447,
                              "src": "18292:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 2468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "18292:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18288:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2488,
                        "initializationExpression": {
                          "assignments": [
                            2463
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2463,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18281:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 2488,
                              "src": "18273:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2462,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18273:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2465,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18285:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18273:13:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "18269:156:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2492,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "18452:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2511,
                      "src": "18444:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2491,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18444:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2499,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2496,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2447,
                            "src": "18488:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 2494,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18471:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "18471:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18471:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2493,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "18461:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18461:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18444:53:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2501,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2492,
                        "src": "18524:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2502,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2492,
                          "src": "18532:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2503,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2444,
                          "src": "18540:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "18532:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2505,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2447,
                          "src": "18552:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 2507,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 2506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18560:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18552:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2508,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2453,
                        "src": "18564:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2500,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1138,
                      "src": "18512:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18512:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2510,
                  "nodeType": "EmitStatement",
                  "src": "18507:67:3"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 2512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "18087:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2444,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "18107:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2512,
                  "src": "18099:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2443,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18099:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2447,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "18136:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2512,
                  "src": "18119:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2445,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "18119:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2446,
                    "nodeType": "ArrayTypeName",
                    "src": "18119:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2449,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "18150:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2512,
                  "src": "18145:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2448,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18145:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18098:61:3"
            },
            "returnParameters": {
              "id": 2451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18169:0:3"
            },
            "scope": 2948,
            "src": "18078:503:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2900,
              "nodeType": "Block",
              "src": "19383:4198:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2525,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2514,
                                "src": "19470:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2523,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1001,
                                "src": "19451:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$10668",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 2524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7020,
                              "src": "19451:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 2526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19451:26:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2527,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "19481:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "19481:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19451:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2530,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1086,
                                "src": "19495:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 2532,
                              "indexExpression": {
                                "id": 2531,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2516,
                                "src": "19501:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19495:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$1052_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 2533,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1047,
                            "src": "19495:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2534,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2514,
                            "src": "19522:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19495:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "19451:77:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 2537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19530:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 2522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19443:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19443:122:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2539,
                  "nodeType": "ExpressionStatement",
                  "src": "19443:122:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2541,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2519,
                            "src": "19583:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 2542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "19583:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19600:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19583:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19575:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19575:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2546,
                  "nodeType": "ExpressionStatement",
                  "src": "19575:27:3"
                },
                {
                  "assignments": [
                    2549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2549,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "19625:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2900,
                      "src": "19613:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 2548,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2547,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1052,
                          "src": "19613:4:3"
                        },
                        "referencedDeclaration": 1052,
                        "src": "19613:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$1052_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2553,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2550,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "19634:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 2552,
                    "indexExpression": {
                      "id": 2551,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2516,
                      "src": "19640:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19634:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$1052_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19613:35:3"
                },
                {
                  "assignments": [
                    2555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2555,
                      "mutability": "mutable",
                      "name": "deleteTaskFlag",
                      "nameLocation": "19692:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2900,
                      "src": "19687:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2554,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19687:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2557,
                  "initialValue": {
                    "hexValue": "74727565",
                    "id": 2556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19709:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19687:26:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2558,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2549,
                        "src": "19772:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                          "typeString": "struct Governance.Task memory"
                        }
                      },
                      "id": 2559,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "19772:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19791:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19772:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2590,
                  "nodeType": "IfStatement",
                  "src": "19769:205:3",
                  "trueBody": {
                    "id": 2589,
                    "nodeType": "Block",
                    "src": "19794:180:3",
                    "statements": [
                      {
                        "body": {
                          "id": 2587,
                          "nodeType": "Block",
                          "src": "19847:117:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2570,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2519,
                                    "src": "19865:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 2572,
                                  "indexExpression": {
                                    "id": 2571,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2563,
                                    "src": "19873:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19865:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2576,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2519,
                                            "src": "19905:7:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 2578,
                                          "indexExpression": {
                                            "id": 2577,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2563,
                                            "src": "19913:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19905:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2574,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "19888:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 2575,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "19888:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 2579,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19888:28:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 2573,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "19878:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 2580,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19878:39:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "19865:52:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 2582,
                              "nodeType": "ExpressionStatement",
                              "src": "19865:52:3"
                            },
                            {
                              "id": 2586,
                              "nodeType": "UncheckedBlock",
                              "src": "19935:15:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2584,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "19945:3:3",
                                    "subExpression": {
                                      "id": 2583,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2563,
                                      "src": "19947:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2585,
                                  "nodeType": "ExpressionStatement",
                                  "src": "19945:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2566,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2563,
                            "src": "19827:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2567,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2519,
                              "src": "19831:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 2568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19831:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19827:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2588,
                        "initializationExpression": {
                          "assignments": [
                            2563
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2563,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19820:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 2588,
                              "src": "19812:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2562,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19812:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2565,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19824:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19812:13:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "19808:156:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2592,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "19991:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2900,
                      "src": "19983:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2591,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19983:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2599,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2596,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2519,
                            "src": "20027:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 2594,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20010:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "20010:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20010:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2593,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "20000:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20000:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19983:53:3"
                },
                {
                  "assignments": [
                    2601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2601,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "20055:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2900,
                      "src": "20047:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2600,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20047:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2609,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 2605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2602,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2549,
                          "src": "20069:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 2603,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1037,
                        "src": "20069:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 2604,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2592,
                        "src": "20084:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "20069:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 2607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20097:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 2608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "20069:29:3",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 2606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20093:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20047:51:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2611,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "20136:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2612,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2549,
                          "src": "20144:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 2613,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1035,
                        "src": "20144:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 2614,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2516,
                        "src": "20158:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2615,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2592,
                        "src": "20167:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2616,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2601,
                          "src": "20175:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 2617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20188:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "20175:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2610,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "20114:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 2619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20114:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2620,
                  "nodeType": "EmitStatement",
                  "src": "20109:81:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2621,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2601,
                      "src": "20205:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20219:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "20205:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2834,
                    "nodeType": "Block",
                    "src": "21110:1672:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 2701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2698,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2549,
                              "src": "21200:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 2699,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1049,
                            "src": "21200:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21218:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "21200:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2728,
                        "nodeType": "IfStatement",
                        "src": "21197:211:3",
                        "trueBody": {
                          "id": 2727,
                          "nodeType": "Block",
                          "src": "21220:188:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2702,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2549,
                                    "src": "21238:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 2704,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "refuterID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1049,
                                  "src": "21238:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2707,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "21262:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "21255:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 2705,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "21255:6:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21255:14:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "21238:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 2710,
                              "nodeType": "ExpressionStatement",
                              "src": "21238:31:3"
                            },
                            {
                              "expression": {
                                "id": 2715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2711,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2549,
                                    "src": "21287:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 2713,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "refuterHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1039,
                                  "src": "21287:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2714,
                                  "name": "myHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2592,
                                  "src": "21306:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "21287:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 2716,
                              "nodeType": "ExpressionStatement",
                              "src": "21287:25:3"
                            },
                            {
                              "expression": {
                                "id": 2721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2717,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1086,
                                    "src": "21330:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 2719,
                                  "indexExpression": {
                                    "id": 2718,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2516,
                                    "src": "21336:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21330:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2720,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2549,
                                  "src": "21347:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "21330:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 2722,
                              "nodeType": "ExpressionStatement",
                              "src": "21330:23:3"
                            },
                            {
                              "expression": {
                                "id": 2725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2723,
                                  "name": "deleteTaskFlag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2555,
                                  "src": "21371:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 2724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21388:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "21371:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2726,
                              "nodeType": "ExpressionStatement",
                              "src": "21371:22:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 2732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2729,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2549,
                              "src": "21484:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 2730,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1039,
                            "src": "21484:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2731,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2592,
                            "src": "21504:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "21484:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2832,
                          "nodeType": "Block",
                          "src": "22365:407:3",
                          "statements": [
                            {
                              "assignments": [
                                2806
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2806,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "22479:5:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2832,
                                  "src": "22471:13:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2805,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22471:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2809,
                              "initialValue": {
                                "expression": {
                                  "id": 2807,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2549,
                                  "src": "22487:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 2808,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1045,
                                "src": "22487:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22471:30:3"
                            },
                            {
                              "expression": {
                                "id": 2813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "22519:21:3",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 2810,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1086,
                                    "src": "22526:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 2812,
                                  "indexExpression": {
                                    "id": 2811,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2516,
                                    "src": "22532:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22526:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2814,
                              "nodeType": "ExpressionStatement",
                              "src": "22519:21:3"
                            },
                            {
                              "assignments": [
                                2816,
                                2818
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2816,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "22564:4:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2832,
                                  "src": "22559:9:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 2815,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22559:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 2818,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "22583:4:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2832,
                                  "src": "22570:17:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 2817,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22570:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2826,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 2824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22618:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 2819,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6292,
                                        "src": "22591:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 2820,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22591:7:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "22591:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 2823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 2822,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2806,
                                      "src": "22611:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "22591:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 2825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22591:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22558:63:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2828,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2816,
                                    "src": "22697:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 2829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22703:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 2827,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "22689:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22689:37:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2831,
                              "nodeType": "ExpressionStatement",
                              "src": "22689:37:3"
                            }
                          ]
                        },
                        "id": 2833,
                        "nodeType": "IfStatement",
                        "src": "21481:1291:3",
                        "trueBody": {
                          "id": 2804,
                          "nodeType": "Block",
                          "src": "21511:837:3",
                          "statements": [
                            {
                              "assignments": [
                                2734
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2734,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "21537:5:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2804,
                                  "src": "21529:13:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2733,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21529:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2739,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 2738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2735,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2549,
                                    "src": "21545:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 2736,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1045,
                                  "src": "21545:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 2737,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21560:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "21545:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21529:32:3"
                            },
                            {
                              "assignments": [
                                2741
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2741,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "21595:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2804,
                                  "src": "21579:27:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 2740,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21579:15:3",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2750,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 2746,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2549,
                                          "src": "21636:6:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                            "typeString": "struct Governance.Task memory"
                                          }
                                        },
                                        "id": 2747,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1049,
                                        "src": "21636:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2744,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1001,
                                        "src": "21617:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$10668",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 2745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7020,
                                      "src": "21617:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 2748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21617:36:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21609:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 2742,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21609:8:3",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21609:45:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21579:75:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2754,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2549,
                                      "src": "21716:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                        "typeString": "struct Governance.Task memory"
                                      }
                                    },
                                    "id": 2755,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1049,
                                    "src": "21716:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 2756,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1096,
                                    "src": "21734:25:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2751,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1001,
                                    "src": "21673:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$10668",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 2753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "increaseProtectedUntilTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10439,
                                  "src": "21673:42:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint40_$returns$__$",
                                    "typeString": "function (uint256,uint40) external"
                                  }
                                },
                                "id": 2757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21673:87:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2758,
                              "nodeType": "ExpressionStatement",
                              "src": "21673:87:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2762,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2514,
                                    "src": "21821:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2763,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1096,
                                    "src": "21829:25:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2759,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1001,
                                    "src": "21778:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$10668",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 2761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "increaseProtectedUntilTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10439,
                                  "src": "21778:42:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint40_$returns$__$",
                                    "typeString": "function (uint256,uint40) external"
                                  }
                                },
                                "id": 2764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21778:77:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2765,
                              "nodeType": "ExpressionStatement",
                              "src": "21778:77:3"
                            },
                            {
                              "expression": {
                                "id": 2769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "21940:21:3",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 2766,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1086,
                                    "src": "21947:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 2768,
                                  "indexExpression": {
                                    "id": 2767,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2516,
                                    "src": "21953:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21947:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$1052_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2770,
                              "nodeType": "ExpressionStatement",
                              "src": "21940:21:3"
                            },
                            {
                              "assignments": [
                                2772,
                                2774
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2772,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "22028:4:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2804,
                                  "src": "22023:9:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 2771,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22023:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 2774,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "22047:4:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2804,
                                  "src": "22034:17:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 2773,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22034:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2781,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 2779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22086:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 2775,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2741,
                                      "src": "22055:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 2776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "22055:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 2778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 2777,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2734,
                                      "src": "22079:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "22055:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 2780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22055:34:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22022:67:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2783,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2772,
                                    "src": "22115:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 2784,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22121:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 2782,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "22107:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22107:37:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2786,
                              "nodeType": "ExpressionStatement",
                              "src": "22107:37:3"
                            },
                            {
                              "expression": {
                                "id": 2797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 2787,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2772,
                                      "src": "22200:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 2788,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2774,
                                      "src": "22206:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 2789,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "22199:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 2795,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22244:2:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 2790,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "22214:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "22214:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 2792,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "22214:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 2794,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 2793,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2734,
                                        "src": "22237:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "22214:29:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 2796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22214:33:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "22199:48:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2798,
                              "nodeType": "ExpressionStatement",
                              "src": "22199:48:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2800,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2772,
                                    "src": "22273:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 2801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22279:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 2799,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "22265:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22265:37:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2803,
                              "nodeType": "ExpressionStatement",
                              "src": "22265:37:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 2835,
                  "nodeType": "IfStatement",
                  "src": "20201:2581:3",
                  "trueBody": {
                    "id": 2697,
                    "nodeType": "Block",
                    "src": "20221:875:3",
                    "statements": [
                      {
                        "assignments": [
                          2625
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2625,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "20307:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2697,
                            "src": "20299:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2624,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20299:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2630,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 2629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2626,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2549,
                              "src": "20315:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 2627,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1045,
                            "src": "20315:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 2628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20330:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "20315:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20299:32:3"
                      },
                      {
                        "assignments": [
                          2632
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2632,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "20361:13:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2697,
                            "src": "20345:29:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 2631,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20345:15:3",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2641,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2637,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2549,
                                    "src": "20404:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 2638,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1047,
                                  "src": "20404:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 2635,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1001,
                                  "src": "20385:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$10668",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 2636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7020,
                                "src": "20385:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 2639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20385:37:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "20377:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 2633,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20377:8:3",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20377:46:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20345:78:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2645,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2549,
                                "src": "20534:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 2646,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1035,
                              "src": "20534:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 2647,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2549,
                                "src": "20548:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 2648,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1043,
                              "src": "20548:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 2642,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "20491:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$10668",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 2644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increaseProtectedUntilTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10439,
                            "src": "20491:42:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint40_$returns$__$",
                              "typeString": "function (uint256,uint40) external"
                            }
                          },
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20491:74:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2650,
                        "nodeType": "ExpressionStatement",
                        "src": "20491:74:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2654,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2549,
                                "src": "20622:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$1052_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 2655,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1047,
                              "src": "20622:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 2656,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1096,
                              "src": "20641:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            ],
                            "expression": {
                              "id": 2651,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "20579:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$10668",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 2653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increaseProtectedUntilTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10439,
                            "src": "20579:42:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint40_$returns$__$",
                              "typeString": "function (uint256,uint40) external"
                            }
                          },
                          "id": 2657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20579:88:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2658,
                        "nodeType": "ExpressionStatement",
                        "src": "20579:88:3"
                      },
                      {
                        "expression": {
                          "id": 2662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "20744:21:3",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2659,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "20751:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$1052_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 2661,
                            "indexExpression": {
                              "id": 2660,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2516,
                              "src": "20757:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20751:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$1052_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2663,
                        "nodeType": "ExpressionStatement",
                        "src": "20744:21:3"
                      },
                      {
                        "assignments": [
                          2665,
                          2667
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2665,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "20824:4:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2697,
                            "src": "20819:9:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2664,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "20819:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2667,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "20843:4:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2697,
                            "src": "20830:17:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2666,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "20830:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2674,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 2672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20884:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 2668,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2632,
                                "src": "20851:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 2669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "20851:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2670,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2625,
                                "src": "20877:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "20851:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20851:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20818:69:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2676,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2665,
                              "src": "20909:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 2677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20915:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 2675,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20901:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20901:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2679,
                        "nodeType": "ExpressionStatement",
                        "src": "20901:37:3"
                      },
                      {
                        "expression": {
                          "id": 2690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2680,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2665,
                                "src": "20986:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 2681,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2667,
                                "src": "20992:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 2682,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20985:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 2688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21030:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 2683,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "21000:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2684,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "21000:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 2685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "21000:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 2687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 2686,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2625,
                                  "src": "21023:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "21000:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21000:33:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "20985:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2691,
                        "nodeType": "ExpressionStatement",
                        "src": "20985:48:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2693,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2665,
                              "src": "21055:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 2694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21061:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 2692,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21047:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21047:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2696,
                        "nodeType": "ExpressionStatement",
                        "src": "21047:37:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 2836,
                    "name": "deleteTaskFlag",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2555,
                    "src": "22846:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2899,
                  "nodeType": "IfStatement",
                  "src": "22843:731:3",
                  "trueBody": {
                    "id": 2898,
                    "nodeType": "Block",
                    "src": "22861:713:3",
                    "statements": [
                      {
                        "assignments": [
                          2838
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2838,
                            "mutability": "mutable",
                            "name": "totalTasksSubmitted",
                            "nameLocation": "22883:19:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2898,
                            "src": "22875:27:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2837,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22875:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2843,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2841,
                              "name": "tasksWaitingConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "22929:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                              }
                            ],
                            "expression": {
                              "id": 2839,
                              "name": "DoubleEndedQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6744,
                              "src": "22905:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                                "typeString": "type(library DoubleEndedQueue)"
                              }
                            },
                            "id": 2840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6727,
                            "src": "22905:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$6422_storage_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 2842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22905:49:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22875:79:3"
                      },
                      {
                        "body": {
                          "id": 2896,
                          "nodeType": "Block",
                          "src": "23096:468:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 2855,
                                          "name": "tasksWaitingConfirmation",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1074,
                                          "src": "23146:24:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        },
                                        {
                                          "id": 2856,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2845,
                                          "src": "23172:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2853,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6744,
                                          "src": "23126:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 2854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "at",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 6681,
                                        "src": "23126:19:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$6422_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 2857,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "23126:48:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 2852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23118:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 2851,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23118:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23118:57:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2859,
                                  "name": "_taskID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2516,
                                  "src": "23177:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23118:66:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2891,
                              "nodeType": "IfStatement",
                              "src": "23114:404:3",
                              "trueBody": {
                                "id": 2890,
                                "nodeType": "Block",
                                "src": "23185:333:3",
                                "statements": [
                                  {
                                    "assignments": [
                                      2862
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2862,
                                        "mutability": "mutable",
                                        "name": "prevFront",
                                        "nameLocation": "23215:9:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2890,
                                        "src": "23207:17:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        "typeName": {
                                          "id": 2861,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "23207:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2867,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 2865,
                                          "name": "tasksWaitingConfirmation",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1074,
                                          "src": "23253:24:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2863,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6744,
                                          "src": "23227:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$6744_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 2864,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "popFront",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 6580,
                                        "src": "23227:25:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$6422_storage_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) returns (bytes32)"
                                        }
                                      },
                                      "id": 2866,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "23227:51:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "23207:71:3"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2870,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2868,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2845,
                                        "src": "23303:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 2869,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "23306:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "23303:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2889,
                                    "nodeType": "IfStatement",
                                    "src": "23300:200:3",
                                    "trueBody": {
                                      "id": 2888,
                                      "nodeType": "Block",
                                      "src": "23308:192:3",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2886,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "expression": {
                                                  "id": 2871,
                                                  "name": "tasksWaitingConfirmation",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1074,
                                                  "src": "23385:24:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                                    "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                                  }
                                                },
                                                "id": 2883,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "_data",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 6421,
                                                "src": "23385:30:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_int128_$_t_bytes32_$",
                                                  "typeString": "mapping(int128 => bytes32)"
                                                }
                                              },
                                              "id": 2884,
                                              "indexExpression": {
                                                "arguments": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    },
                                                    "id": 2881,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "id": 2875,
                                                        "name": "tasksWaitingConfirmation",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1074,
                                                        "src": "23423:24:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Bytes32Deque_$6422_storage",
                                                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                                        }
                                                      },
                                                      "id": 2876,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "_begin",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 6415,
                                                      "src": "23423:31:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_int128",
                                                        "typeString": "int128"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                      "arguments": [
                                                        {
                                                          "id": 2879,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2845,
                                                          "src": "23461:1:3",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        ],
                                                        "id": 2878,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "23457:3:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_int256_$",
                                                          "typeString": "type(int256)"
                                                        },
                                                        "typeName": {
                                                          "id": 2877,
                                                          "name": "int",
                                                          "nodeType": "ElementaryTypeName",
                                                          "src": "23457:3:3",
                                                          "typeDescriptions": {}
                                                        }
                                                      },
                                                      "id": 2880,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "typeConversion",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "23457:6:3",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                      }
                                                    },
                                                    "src": "23423:40:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    }
                                                  ],
                                                  "id": 2874,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "23416:6:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_int128_$",
                                                    "typeString": "type(int128)"
                                                  },
                                                  "typeName": {
                                                    "id": 2873,
                                                    "name": "int128",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "23416:6:3",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 2882,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "23416:48:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_int128",
                                                  "typeString": "int128"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "23385:80:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 2885,
                                              "name": "prevFront",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2862,
                                              "src": "23468:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "src": "23385:92:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "id": 2887,
                                          "nodeType": "ExpressionStatement",
                                          "src": "23385:92:3"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": 2895,
                              "nodeType": "UncheckedBlock",
                              "src": "23535:15:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2893,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "23545:3:3",
                                    "subExpression": {
                                      "id": 2892,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2845,
                                      "src": "23547:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2894,
                                  "nodeType": "ExpressionStatement",
                                  "src": "23545:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2848,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2845,
                            "src": "23070:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2849,
                            "name": "totalTasksSubmitted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2838,
                            "src": "23074:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23070:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2897,
                        "initializationExpression": {
                          "assignments": [
                            2845
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2845,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "23064:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 2897,
                              "src": "23056:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2844,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "23056:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2847,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23067:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "23056:12:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "23052:512:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 2901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "19296:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2514,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "19323:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "19315:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19315:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2516,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "19339:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "19331:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19331:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2519,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "19365:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "19348:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2517,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "19348:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2518,
                    "nodeType": "ArrayTypeName",
                    "src": "19348:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19314:59:3"
            },
            "returnParameters": {
              "id": 2521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19383:0:3"
            },
            "scope": 2948,
            "src": "19287:4294:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2909,
              "nodeType": "Block",
              "src": "23690:58:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23708:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 2905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23714:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 2903,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23700:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23700:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2907,
                  "nodeType": "ExpressionStatement",
                  "src": "23700:30:3"
                },
                {
                  "id": 2908,
                  "nodeType": "PlaceholderStatement",
                  "src": "23740:1:3"
                }
              ]
            },
            "id": 2910,
            "name": "onlyAdmin",
            "nameLocation": "23678:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23687:2:3"
            },
            "src": "23669:79:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2918,
              "nodeType": "Block",
              "src": "23778:58:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23796:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 2914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23802:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 2912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23788:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23788:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2916,
                  "nodeType": "ExpressionStatement",
                  "src": "23788:30:3"
                },
                {
                  "id": 2917,
                  "nodeType": "PlaceholderStatement",
                  "src": "23828:1:3"
                }
              ]
            },
            "id": 2919,
            "name": "onlyNFTOwner",
            "nameLocation": "23763:12:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23775:2:3"
            },
            "src": "23754:82:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2927,
              "nodeType": "Block",
              "src": "23864:59:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23882:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 2923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23888:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 2921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23874:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23874:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2925,
                  "nodeType": "ExpressionStatement",
                  "src": "23874:31:3"
                },
                {
                  "id": 2926,
                  "nodeType": "PlaceholderStatement",
                  "src": "23915:1:3"
                }
              ]
            },
            "id": 2928,
            "name": "onlyLessee",
            "nameLocation": "23851:10:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23861:2:3"
            },
            "src": "23842:81:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2936,
              "nodeType": "Block",
              "src": "23951:81:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23991:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 2932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23997:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 2930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23983:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23983:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2934,
                  "nodeType": "ExpressionStatement",
                  "src": "23983:31:3"
                },
                {
                  "id": 2935,
                  "nodeType": "PlaceholderStatement",
                  "src": "24024:1:3"
                }
              ]
            },
            "id": 2937,
            "name": "onlyMember",
            "nameLocation": "23938:10:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23948:2:3"
            },
            "src": "23929:103:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2946,
              "nodeType": "Block",
              "src": "24082:202:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2940,
                          "name": "isCallerOnBoard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "24155:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24155:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 2942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24174:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 2939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24147:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24147:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2944,
                  "nodeType": "ExpressionStatement",
                  "src": "24147:50:3"
                },
                {
                  "id": 2945,
                  "nodeType": "PlaceholderStatement",
                  "src": "24276:1:3"
                }
              ]
            },
            "id": 2947,
            "name": "onlyBoard",
            "nameLocation": "24070:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24079:2:3"
            },
            "src": "24061:223:3",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2949,
        "src": "771:23520:3",
        "usedErrors": [
          6410,
          6413
        ]
      }
    ],
    "src": "0:24291:3"
  },
  "bytecode": "",
  "bytecodeSha1": "6870f84613895ebff4fe68d0f2d9c655231ef4e9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "157": [
            26367,
            26392,
            false
          ],
          "158": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "156": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "153": [
            4843,
            4860,
            false
          ]
        },
        "DoubleEndedQueue.popFront": {
          "154": [
            3380,
            3392,
            false
          ]
        }
      },
      "13": {
        "Ownable.transferOwnership": {
          "155": [
            1990,
            2012,
            true
          ]
        }
      },
      "14": {},
      "18": {},
      "26": {},
      "28": {},
      "3": {
        "Governance.areTasksAvailableToConfirm": {
          "148": [
            7407,
            7461,
            false
          ],
          "149": [
            7465,
            7487,
            false
          ],
          "150": [
            7491,
            7516,
            false
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "132": [
            16133,
            16187,
            false
          ],
          "133": [
            16191,
            16213,
            false
          ],
          "134": [
            16217,
            16242,
            false
          ]
        },
        "Governance.completeTask": {
          "113": [
            17022,
            17102,
            false
          ],
          "114": [
            17189,
            17233,
            false
          ],
          "115": [
            17237,
            17281,
            true
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "151": [
            11288,
            11380,
            false
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "122": [
            9495,
            9557,
            false
          ],
          "123": [
            9573,
            9617,
            false
          ],
          "124": [
            9621,
            9664,
            false
          ],
          "125": [
            9680,
            9711,
            false
          ],
          "126": [
            10041,
            10049,
            false
          ],
          "127": [
            10325,
            10387,
            false
          ],
          "128": [
            10403,
            10447,
            false
          ],
          "129": [
            10451,
            10494,
            false
          ],
          "130": [
            10510,
            10541,
            false
          ],
          "131": [
            10673,
            10689,
            false
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "107": [
            8091,
            8145,
            false
          ],
          "108": [
            8149,
            8175,
            false
          ],
          "109": [
            8322,
            8330,
            false
          ],
          "110": [
            8894,
            8948,
            false
          ],
          "111": [
            8952,
            8978,
            false
          ],
          "112": [
            9126,
            9139,
            false
          ]
        },
        "Governance.getVotes": {
          "152": [
            5624,
            5651,
            true
          ]
        },
        "Governance.getWinningVote": {
          "116": [
            6018,
            6045,
            true
          ],
          "117": [
            6085,
            6137,
            true
          ],
          "118": [
            6484,
            6534,
            false
          ],
          "119": [
            6659,
            6665,
            false
          ],
          "120": [
            6713,
            6764,
            false
          ],
          "121": [
            6830,
            6836,
            true
          ]
        },
        "Governance.submitVerification": {
          "135": [
            19451,
            19491,
            false
          ],
          "136": [
            19495,
            19528,
            true
          ],
          "137": [
            19583,
            19601,
            true
          ],
          "138": [
            19772,
            19792,
            false
          ],
          "139": [
            20069,
            20090,
            true
          ],
          "140": [
            20205,
            20220,
            false
          ],
          "141": [
            20909,
            20913,
            true
          ],
          "142": [
            21200,
            21219,
            false
          ],
          "143": [
            21484,
            21510,
            false
          ],
          "144": [
            22697,
            22701,
            true
          ],
          "145": [
            22846,
            22860,
            false
          ],
          "146": [
            23118,
            23184,
            false
          ],
          "147": [
            23303,
            23307,
            false
          ]
        },
        "Governance.testHashing": {
          "106": [
            18245,
            18253,
            false
          ]
        }
      },
      "5": {},
      "7": {}
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "105": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "103": [
            35401,
            35488
          ],
          "104": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "94": [
            4839,
            4882
          ],
          "95": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.empty": {
          "99": [
            5859,
            5892
          ]
        },
        "DoubleEndedQueue.length": {
          "4": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.popFront": {
          "98": [
            3376,
            3408
          ],
          "100": [
            3460,
            3491
          ],
          "101": [
            3501,
            3531
          ],
          "102": [
            3565,
            3594
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "24": [
            2207,
            2237
          ],
          "25": [
            2271,
            2297
          ]
        }
      },
      "13": {
        "Ownable._setOwner": {
          "96": [
            2193,
            2210
          ],
          "97": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "21": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "79": [
            1982,
            2055
          ],
          "80": [
            2066,
            2085
          ]
        }
      },
      "14": {},
      "18": {},
      "26": {},
      "28": {},
      "3": {
        "Governance.areTasksAvailableToConfirm": {
          "81": [
            7317,
            7389
          ],
          "82": [
            7535,
            7546
          ],
          "83": [
            7584,
            7587
          ],
          "84": [
            7608,
            7620
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "52": [
            16013,
            16079
          ],
          "53": [
            16093,
            16115
          ],
          "54": [
            16421,
            16455
          ],
          "55": [
            16473,
            16554
          ],
          "56": [
            16572,
            16594
          ],
          "57": [
            16612,
            16668
          ],
          "58": [
            16706,
            16709
          ]
        },
        "Governance.completeTask": {
          "22": [
            17181,
            17305
          ],
          "23": [
            17495,
            17576
          ],
          "26": [
            17594,
            17629
          ],
          "27": [
            17647,
            17669
          ],
          "28": [
            17724,
            17795
          ],
          "29": [
            17813,
            17874
          ],
          "30": [
            17893,
            17970
          ],
          "31": [
            17988,
            17993
          ],
          "32": [
            18031,
            18034
          ]
        },
        "Governance.createTaskType": {
          "18": [
            14595,
            14701
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "85": [
            11705,
            11735
          ],
          "86": [
            11753,
            11789
          ],
          "87": [
            12259,
            12295
          ],
          "88": [
            12313,
            12318
          ],
          "89": [
            12356,
            12359
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "43": [
            9754,
            9761
          ],
          "44": [
            9969,
            9972
          ],
          "45": [
            10120,
            10136
          ],
          "46": [
            10150,
            10165
          ],
          "47": [
            10574,
            10614
          ],
          "48": [
            10642,
            10651
          ],
          "49": [
            10713,
            10718
          ],
          "50": [
            10774,
            10777
          ],
          "51": [
            10798,
            10812
          ]
        },
        "Governance.getTaskById": {
          "42": [
            5494,
            5515
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "5": [
            7971,
            8037
          ],
          "6": [
            8051,
            8073
          ],
          "7": [
            8204,
            8211
          ],
          "8": [
            8250,
            8253
          ],
          "9": [
            8525,
            8556
          ],
          "10": [
            8774,
            8840
          ],
          "11": [
            8854,
            8876
          ],
          "12": [
            8997,
            9022
          ],
          "13": [
            9040,
            9067
          ],
          "14": [
            9095,
            9104
          ],
          "15": [
            9141,
            9146
          ],
          "16": [
            9185,
            9188
          ],
          "17": [
            9209,
            9236
          ]
        },
        "Governance.getVotes": {
          "90": [
            5616,
            5672
          ],
          "91": [
            5829,
            5874
          ],
          "92": [
            5811,
            5814
          ],
          "93": [
            5894,
            5910
          ]
        },
        "Governance.getWinningVote": {
          "33": [
            6010,
            6066
          ],
          "34": [
            6076,
            6161
          ],
          "35": [
            6554,
            6604
          ],
          "36": [
            6622,
            6637
          ],
          "37": [
            6669,
            6676
          ],
          "38": [
            6783,
            6788
          ],
          "39": [
            6427,
            6430
          ],
          "40": [
            6822,
            6857
          ],
          "41": [
            6867,
            6885
          ]
        },
        "Governance.setNFTAddress": {
          "20": [
            10996,
            11023
          ]
        },
        "Governance.submitVerification": {
          "59": [
            19443,
            19565
          ],
          "60": [
            19575,
            19602
          ],
          "61": [
            19865,
            19917
          ],
          "62": [
            19945,
            19948
          ],
          "63": [
            20109,
            20190
          ],
          "64": [
            20491,
            20565
          ],
          "65": [
            20579,
            20667
          ],
          "66": [
            20744,
            20765
          ],
          "67": [
            20901,
            20938
          ],
          "68": [
            20985,
            21033
          ],
          "69": [
            21047,
            21084
          ],
          "70": [
            21238,
            21269
          ],
          "71": [
            21287,
            21312
          ],
          "72": [
            21330,
            21353
          ],
          "73": [
            21673,
            21760
          ],
          "74": [
            21778,
            21855
          ],
          "75": [
            22519,
            22540
          ],
          "76": [
            22689,
            22726
          ],
          "77": [
            23385,
            23477
          ],
          "78": [
            23545,
            23548
          ]
        },
        "Governance.testHashing": {
          "1": [
            18326,
            18378
          ],
          "2": [
            18406,
            18409
          ],
          "3": [
            18507,
            18574
          ]
        }
      },
      "5": {},
      "7": {
        "Context._msgSender": {
          "19": [
            672,
            689
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "IERC20",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "WizardTower",
    "Wizards"
  ],
  "deployedBytecode": "6080604052600436106101855760003560e01c80638d977672116100d1578063d374a2171161008a578063f2fde38b11610064578063f2fde38b146104fd578063f4739bd91461051d578063f713b7ed1461053d578063ff9810991461055d57600080fd5b8063d374a2171461047d578063e95d23471461049d578063f18c51d3146104dd57600080fd5b80638d9776721461038f5780638da5cb5b146103c557806390b293d8146103ed578063976217cd14610403578063b2bad54414610430578063beca3a161461045d57600080fd5b806361f9e9a81161013e578063715018a611610118578063715018a61461031a57806372e185ce1461032f578063826b8ebd1461034f5780638a6655d61461036f57600080fd5b806361f9e9a8146102945780636215597b146102b457806369d03738146102fa57600080fd5b8063013cf08b1461019157806309265ce6146101cb5780630f61d8bd146101ed57806310190ef11461021e5780633b47fed2146102525780634b50f16a1461026657600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101b16101ac366004613099565b61058a565b6040516101c295949392919061310a565b60405180910390f35b3480156101d757600080fd5b506101eb6101e6366004613213565b610656565b005b3480156101f957600080fd5b5061020e610208366004613099565b50600090565b60405190151581526020016101c2565b34801561022a57600080fd5b5061023e610239366004613099565b61079c565b6040516101c2989796959493929190613272565b34801561025e57600080fd5b50600061020e565b34801561027257600080fd5b506102866102813660046132f1565b6108a6565b6040516101c29291906133dd565b3480156102a057600080fd5b506101eb6102af3660046134e5565b610d3a565b3480156102c057600080fd5b506102ec6102cf366004613582565b600460209081526000928352604080842090915290825290205481565b6040519081526020016101c2565b34801561030657600080fd5b506101eb6103153660046135b9565b610d87565b34801561032657600080fd5b506101eb610dd3565b34801561033b57600080fd5b506101eb61034a366004613645565b610e09565b34801561035b57600080fd5b506102ec61036a366004613099565b61127f565b34801561037b57600080fd5b506101eb61038a36600461369b565b6114a2565b34801561039b57600080fd5b506103af6103aa366004613099565b6114db565b6040516101c29a999897969594939291906136c7565b3480156103d157600080fd5b506001546040516001600160a01b0390911681526020016101c2565b3480156103f957600080fd5b506102ec600b5481565b34801561040f57600080fd5b5061042361041e366004613099565b6115dd565b6040516101c29190613748565b34801561043c57600080fd5b5061045061044b3660046132f1565b61171f565b6040516101c2919061375b565b34801561046957600080fd5b506101eb6104783660046137bd565b611ae5565b34801561048957600080fd5b506101eb610498366004613099565b611b24565b3480156104a957600080fd5b506006546104c390600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b6020820152016101c2565b3480156104e957600080fd5b506101eb6104f836600461380d565b611e5b565b34801561050957600080fd5b506101eb6105183660046135b9565b61288a565b34801561052957600080fd5b5061020e610538366004613099565b612925565b34801561054957600080fd5b506101eb61055836600461385c565b612af5565b34801561056957600080fd5b5061057d610578366004613099565b612c92565b6040516101c29190613898565b6008602052600090815260409020805481906105a5906138e0565b80601f01602080910402602001604051908101604052809291908181526020018280546105d1906138e0565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b60008260008151811061066b5761066b61391a565b602002602001015160405160200161068591815260200190565b604051602081830303815290604052905081156107115760005b835181101561070f578381815181106106ba576106ba61391a565b60200260200101516040516020016106d491815260200190565b604051602081830303815290604052805190602001208482815181106106fc576106fc61391a565b602090810291909101015260010161069f565b505b6000836040516020016107249190613930565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea81868314866000815181106107745761077461391a565b60200260200101518560405161078d9493929190613966565b60405180910390a15050505050565b600581815481106107ac57600080fd5b90600052602060002090600302016000915090508060010180546107cf906138e0565b80601f01602080910402602001604051908101604052809291908181526020018280546107fb906138e0565b80156108485780601f1061081d57610100808354040283529160200191610848565b820191906000526020600020905b81548152906001019060200180831161082b57829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b60608060006108c4600654600f81810b600160801b909204900b0390565b90506108ce612ffb565b600080805b84811015610a56576108e6600682612dbc565b6000818152600a602052604090819020815161014081019092528054929550909182908290610914906138e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610940906138e0565b801561098d5780601f106109625761010080835404028352916020019161098d565b820191906000526020600020905b81548152906001019060200180831161097057829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919550429116118015610a4257508764ffffffffff168460e0015161ffff16145b15610a4e578160010191505b6001016108d3565b5080600003610ac357604080516001808252818301909252600091816020015b610a7e612ffb565b815260200190600190039081610a76575050604080516001808252818301909252919250600091906020808301908036833750939b919a509098505050505050505050565b600080826001600160401b03811115610ade57610ade61314e565b604051908082528060200260200182016040528015610b1757816020015b610b04612ffb565b815260200190600190039081610afc5790505b5090506000836001600160401b03811115610b3457610b3461314e565b604051908082528060200260200182016040528015610b5d578160200160208202803683370190505b50905060005b87811015610d2a57610b76600682612dbc565b6000818152600a602052604090819020815161014081019092528054929850909182908290610ba4906138e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd0906138e0565b8015610c1d5780601f10610bf257610100808354040283529160200191610c1d565b820191906000526020600020905b815481529060010190602001808311610c0057829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919850429116118015610cd257508a64ffffffffff168760e0015161ffff16145b15610d225786838581518110610cea57610cea61391a565b602002602001018190525085828581518110610d0857610d0861391a565b602002602001018181525050836001019350848411610d2a575b600101610b63565b5090999098509650505050505050565b60405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b60448201526064015b60405180910390fd5b50505050505050565b6001546001600160a01b03163314610db15760405162461bcd60e51b8152600401610d7590613997565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610dfd5760405162461bcd60e51b8152600401610d7590613997565b610e076000612e2d565b565b60005b6005548110156112795783604051602001610e2791906139cc565b6040516020818303038152906040528051906020012060058281548110610e5057610e5061391a565b9060005260206000209060030201600101604051602001610e719190613a5c565b6040516020818303038152906040528051906020012003611271574260058281548110610ea057610ea061391a565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611801590610f04575060058181548110610ede57610ede61391a565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b610f465760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610d75565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160058481548110610f8957610f8961391a565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160058481548110610fc357610fc361391a565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600b5460068054600160801b90819004600f0b8086526007855286862084905582546001600160801b039081166001909201169091021790558252600a9052208151919250829181906110589082613abe565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600b8054600090611157908490613b93565b9091555061116a90504262015180613b93565b6005838154811061117d5761117d61391a565b6000918252602080832064ffffffffff881684526003909202909101905260409020556005805460019190849081106111b8576111b861391a565b906000526020600020906003020160020160149054906101000a900461ffff166111e29190613bab565b600583815481106111f5576111f561391a565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600b546112519190613bce565b87426040516112639493929190613be5565b60405180910390a150611279565b600101610e0c565b50505050565b600060095482106112c55760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610d75565b600082815260086020526040902060030154600160501b900464ffffffffff1642116113295760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610d75565b6000806000805b60008681526008602052604090206001015461ffff1681101561145757826008600088815260200190815260200160002060020182600881106113755761137561391a565b601091828204019190066002029054906101000a900461ffff1661ffff1611156113f5576008600087815260200190815260200160002060020181600881106113c0576113c061391a565b601091828204019190066002029054906101000a900461ffff1661ffff169250809350816001036113f057600091505b611445565b8260086000888152602001908152602001600020600201826008811061141d5761141d61391a565b601091828204019190066002029054906101000a900461ffff1661ffff160361144557600191505b8061144f81613c1c565b915050611330565b5080156114995760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610d75565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610d75565b600a602052600090815260409020805481906114f6906138e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611522906138e0565b801561156f5780601f106115445761010080835404028352916020019161156f565b820191906000526020600020905b81548152906001019060200180831161155257829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6115e5612ffb565b6000828152600a6020526040908190208151610140810190925280548290829061160e906138e0565b80601f016020809104026020016040519081016040528092919081815260200182805461163a906138e0565b80156116875780601f1061165c57610100808354040283529160200191611687565b820191906000526020600020905b81548152906001019060200180831161166a57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b6005548110156118375742600582815481106117435761174361391a565b6000918252602080832064ffffffffff891684526003909202909101905260409020541080156117a7575042600582815481106117825761178261391a565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156117e6575042600582815481106117c2576117c261391a565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b801561182357506001600582815481106118025761180261391a565b6000918252602090912060039091020160020154600160a01b900461ffff16115b1561182f578160010191505b600101611725565b50806000036118a357604080516001808252818301909252600091816020015b606081526020019060019003908161185757905050905060405180602001604052806000815250816000815181106118915761189161391a565b60209081029190910101529392505050565b6000816001600160401b038111156118bd576118bd61314e565b6040519080825280602002602001820160405280156118f057816020015b60608152602001906001900390816118db5790505b5090506000805b600554811015611adb5742600582815481106119155761191561391a565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611979575042600582815481106119545761195461391a565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156119b8575042600582815481106119945761199461391a565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156119f557506001600582815481106119d4576119d461391a565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611ad35760058181548110611a0d57611a0d61391a565b90600052602060002090600302016001018054611a29906138e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611a55906138e0565b8015611aa25780601f10611a7757610100808354040283529160200191611aa2565b820191906000526020600020905b815481529060010190602001808311611a8557829003601f168201915b5050505050838381518110611ab957611ab961391a565b602002602001018190525081600101915083821015611adb575b6001016118f7565b5090949350505050565b60405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b6044820152606401610d75565b6000611b3f600654600f81810b600160801b909204900b0390565b9050611b49612ffb565b6000805b83811015611e5457611b60600682612dbc565b6000818152600a602052604090819020815161014081019092528054929450909182908290611b8e906138e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611bba906138e0565b8015611c075780601f10611bdc57610100808354040283529160200191611c07565b820191906000526020600020905b815481529060010190602001808311611bea57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015611cb9575084836020015164ffffffffff1614155b8015611cce57508483610100015161ffff1614155b15611e4c5761ffff851660e0840152600c54611cea9042613b93565b64ffffffffff166101208401526000828152600a6020526040902083518491908190611d169082613abe565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b9490921693909302179092556000848152600a9092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df26891611e439188918691613ca1565b60405180910390a15b600101611b4d565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec89190613c35565b6001600160a01b0316148015611ef957506000828152600a6020526040902060040154600160701b900461ffff1683145b611f455760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610d75565b6000815111611f5357600080fd5b6000828152600a602052604080822081516101408101909252805482908290611f7b906138e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611fa7906138e0565b8015611ff45780601f10611fc957610100808354040283529160200191611ff4565b820191906000526020600020905b815481529060010190602001808311611fd757829003601f168201915b505050918352505060018281015464ffffffffff9081166020840152600284015460408401526003840154606084015260049093015460ff8116608084015261010080820462ffffff1660a0850152600160201b82046001600160501b031660c0850152600160701b820461ffff90811660e0860152600160801b8304811682860152600160901b9092049094166101209093019290925291830151929350909116156121105760005b835181101561210e578381815181106120b9576120b961391a565b60200260200101516040516020016120d391815260200190565b604051602081830303815290604052805190602001208482815181106120fb576120fb61391a565b602090810291909101015260010161209e565b505b6000836040516020016121239190613930565b60405160208183030381529060405280519060200120905060008184604001511461214f576000612152565b60015b602085810151604080518b815264ffffffffff909216928201929092529081018890526060810184905260ff9190911660018114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a18060010361247c57600060028560c001516121d59190613d6c565b60025460e08701516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225c9190613c35565b600254602088015160a089015160405163434aa62f60e11b815264ffffffffff909216600483015262ffffff1660248201529192506001600160a01b0316906386954c5e90604401600060405180830381600087803b1580156122be57600080fd5b505af11580156122d2573d6000803e3d6000fd5b505060025460e0890151600d5460405163434aa62f60e11b815261ffff909216600483015264ffffffffff1660248201526001600160a01b0390911692506386954c5e91506044015b600060405180830381600087803b15801561233557600080fd5b505af1158015612349573d6000803e3d6000fd5b5050506000898152600a602052604081209150612366828261304f565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d80600081146123e4576040519150601f19603f3d011682016040523d82523d6000602084013e6123e9565b606091505b50915091508161240b5760405162461bcd60e51b8152600401610d7590613da0565b60405133908590600081818185875af1925050503d806000811461244b576040519150601f19603f3d011682016040523d82523d6000602084013e612450565b606091505b509092509050816124735760405162461bcd60e51b8152600401610d7590613da0565b505050506127f4565b83610100015161ffff166000036125ae5761ffff8716610100850152606084018290526000868152600a60205260409020845185919081906124be9082613abe565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b9290911691909102179055600092505b8184606001510361270e57600060028560c001516125cc9190613d6c565b6002546101008701516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126549190613c35565b600254610100880151600d5460405163434aa62f60e11b815261ffff909216600483015264ffffffffff1660248201529192506001600160a01b0316906386954c5e90604401600060405180830381600087803b1580156126b457600080fd5b505af11580156126c8573d6000803e3d6000fd5b5050600254600d5460405163434aa62f60e11b8152600481018e905264ffffffffff90911660248201526001600160a01b0390911692506386954c5e915060440161231b565b60c08401516000878152600a602052604081206001600160501b039092169190612738828261304f565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b03191690558061277f6001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d80600081146127c9576040519150601f19603f3d011682016040523d82523d6000602084013e6127ce565b606091505b5091509150816127f05760405162461bcd60e51b8152600401610d7590613da0565b5050505b8215610d7e576000612815600654600f81810b600160801b909204900b0390565b905060005b8181101561287f578761282e600683612dbc565b0361287757600061283f6006612e7f565b90508115612875576006548190600790600090612860908690600f0b613dce565b600f0b81526020810191909152604001600020555b505b60010161281a565b505050505050505050565b6001546001600160a01b031633146128b45760405162461bcd60e51b8152600401610d7590613997565b6001600160a01b0381166129195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d75565b61292281612e2d565b50565b600080612941600654600f81810b600160801b909204900b0390565b905061294b612ffb565b60005b82811015612aea57600a6000612965600684612dbc565b60001c815260200190815260200160002060405180610140016040529081600082018054612992906138e0565b80601f01602080910402602001604051908101604052809291908181526020018280546129be906138e0565b8015612a0b5780601f106129e057610100808354040283529160200191612a0b565b820191906000526020600020905b8154815290600101906020018083116129ee57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919350429116108015612abd575084826020015164ffffffffff1614155b8015612ad257508482610100015161ffff1614155b15612ae257506001949350505050565b60010161294e565b506000949350505050565b60005b600554811015612c8e5781604051602001612b139190613e0f565b6040516020818303038152906040528051906020012060058281548110612b3c57612b3c61391a565b9060005260206000209060030201600101604051602001612b5d9190613e2b565b6040516020818303038152906040528051906020012003612c8657600060058281548110612b8d57612b8d61391a565b90600052602060002090600302019050600060056001600580549050612bb39190613bce565b81548110612bc357612bc361391a565b9060005260206000209060030201905080915060056001600580549050612bea9190613bce565b81548110612bfa57612bfa61391a565b90600052602060002090600302016000600182016000612c1a919061304f565b5060020180546001600160b01b031916905560058054612c3c90600190613bce565b81548110612c4c57612c4c61391a565b90600052602060002090600302016000600182016000612c6c919061304f565b5060020180546001600160b01b031916905550612c8e9050565b600101612af8565b5050565b60606009548210612cd85760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610d75565b60008281526008602052604081206001015461ffff166001600160401b03811115612d0557612d0561314e565b604051908082528060200260200182016040528015612d2e578160200160208202803683370190505b50905060005b8151811015612db557600860008581526020019081526020016000206002018160088110612d6457612d6461391a565b601091828204019190066002029054906101000a900461ffff16828281518110612d9057612d9061391a565b61ffff9092166020928302919091019091015280612dad81613c1c565b915050612d34565b5092915050565b600080612ddf612dcb84612efe565b8554612dda9190600f0b613dce565b612f6c565b8454909150600160801b9004600f90810b9082900b12612e1257604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000612e9a8254600f81810b600160801b909204900b131590565b15612eb857604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60006001600160ff1b03821115612f685760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610d75565b5090565b60006f7fffffffffffffffffffffffffffffff198212801590612f9f57506f7fffffffffffffffffffffffffffffff8213155b612f685760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610d75565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b50805461305b906138e0565b6000825580601f1061306b575050565b601f01602090049060005260206000209081019061292291905b80821115612f685760008155600101613085565b6000602082840312156130ab57600080fd5b5035919050565b60005b838110156130cd5781810151838201526020016130b5565b838111156112795750506000910152565b600081518084526130f68160208601602086016130b2565b601f01601f19169290920160200192915050565b60a08152600061311d60a08301886130de565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561318c5761318c61314e565b604052919050565b600082601f8301126131a557600080fd5b813560206001600160401b038211156131c0576131c061314e565b8160051b6131cf828201613164565b92835284810182019282810190878511156131e957600080fd5b83870192505b84831015613208578235825291830191908301906131ef565b979650505050505050565b60008060006060848603121561322857600080fd5b8335925060208401356001600160401b0381111561324557600080fd5b61325186828701613194565b9250506040840135801515811461326757600080fd5b809150509250925092565b60006101008083526132868184018c6130de565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff811681146132ec57600080fd5b919050565b60006020828403121561330357600080fd5b61330c826132d7565b9392505050565b60006101408251818552613329828601826130de565b9150506020830151613344602086018264ffffffffff169052565b506040830151604085015260608301516060850152608083015161336d608086018260ff169052565b5060a083015161338460a086018262ffffff169052565b5060c083015161339f60c08601826001600160501b03169052565b5060e08301516133b560e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff811682870152611adb565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561343457605f19888703018552613422868351613313565b95509382019390820190600101613406565b50508584038187015286518085528782019482019350915060005b8281101561346b5784518452938101939281019260010161344f565b5091979650505050505050565b60008083601f84011261348a57600080fd5b5081356001600160401b038111156134a157600080fd5b6020830191508360208285010111156134b957600080fd5b9250929050565b803562ffffff811681146132ec57600080fd5b803561ffff811681146132ec57600080fd5b600080600080600080600060c0888a03121561350057600080fd5b87356001600160401b0381111561351657600080fd5b6135228a828b01613478565b909850965050602088013560ff8116811461353c57600080fd5b945061354a604089016134c0565b9350613558606089016132d7565b9250613566608089016132d7565b915061357460a089016134d3565b905092959891949750929550565b6000806040838503121561359557600080fd5b50508035926020909101359150565b6001600160a01b038116811461292257600080fd5b6000602082840312156135cb57600080fd5b813561330c816135a4565b600082601f8301126135e757600080fd5b81356001600160401b038111156136005761360061314e565b613613601f8201601f1916602001613164565b81815284602083860101111561362857600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561365a57600080fd5b83356001600160401b0381111561367057600080fd5b61367c868287016135d6565b93505060208401359150613692604085016132d7565b90509250925092565b6000806000606084860312156136b057600080fd5b505081359360208301359350604090920135919050565b60006101408083526136db8184018e6130de565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b60208152600061330c6020830184613313565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156137b057603f1988860301845261379e8583516130de565b94509285019290850190600101613782565b5092979650505050505050565b600080600080600080600060c0888a0312156137d857600080fd5b87356001600160401b038111156137ee57600080fd5b6137fa8a828b01613478565b909850965061353c9050602089016134d3565b60008060006060848603121561382257600080fd5b833592506020840135915060408401356001600160401b0381111561384657600080fd5b61385286828701613194565b9150509250925092565b60006020828403121561386e57600080fd5b81356001600160401b0381111561388457600080fd5b613890848285016135d6565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156138d457835161ffff16835292840192918401916001016138b4565b50909695505050505050565b600181811c908216806138f457607f821691505b60208210810361391457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b8381101561395a5781518552938201939082019060010161393e565b50929695505050505050565b848152831515602082015282604082015260806060820152600061398d60808301846130de565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208152600061330c60208301846130de565b600081546139ec816138e0565b808552602060018381168015613a095760018114613a2357613a51565b60ff1985168884015283151560051b880183019550613a51565b866000528260002060005b85811015613a495781548a8201860152908301908401613a2e565b890184019650505b505050505092915050565b60208152600061330c60208301846139df565b601f821115613ab957600081815260208120601f850160051c81016020861015613a965750805b601f850160051c820191505b81811015613ab557828155600101613aa2565b5050505b505050565b81516001600160401b03811115613ad757613ad761314e565b613aeb81613ae584546138e0565b84613a6f565b602080601f831160018114613b205760008415613b085750858301515b600019600386901b1c1916600185901b178555613ab5565b600085815260208120601f198616915b82811015613b4f57888601518255948401946001909101908401613b30565b5085821015613b6d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60008219821115613ba657613ba6613b7d565b500190565b600061ffff83811690831681811015613bc657613bc6613b7d565b039392505050565b600082821015613be057613be0613b7d565b500390565b64ffffffffff85168152836020820152608060408201526000613c0b60808301856130de565b905082606083015295945050505050565b600060018201613c2e57613c2e613b7d565b5060010190565b600060208284031215613c4757600080fd5b815161330c816135a4565b82811015613c725786850135825560209485019460019092019101613c52565b5086821015613c8f5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b838152826020820152606060408201526000610140806060840152613cca6101a08401856139df565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c811684870152613d4e6101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b0380841680613d9457634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b600080821280156001600160ff1b0384900385131615613df057613df0613b7d565b600160ff1b8390038412811615613e0957613e09613b7d565b50500190565b60008251613e218184602087016130b2565b9190910192915050565b6000808354613e39816138e0565b60018281168015613e515760018114613e665761395a565b60ff198416875282151583028701945061395a565b8760005260208060002060005b85811015613e8c5781548a820152908401908201613e73565b50505095909101969550505050505056fea26469706673582212204f2bbf6e8a35d946932a3dbfe61f9fdf42a008a8d78f2b4b3d400afe3215842664736f6c634300080f0033",
  "deployedSourceMap": "771:23520:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2759:46;;;;;;;;;;-1:-1:-1;2759:46:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;18078:503;;;;;;;;;;-1:-1:-1;18078:503:3;;;;;:::i;:::-;;:::i;:::-;;4944:284;;;;;;;;;;-1:-1:-1;4944:284:3;;;;;:::i;:::-;-1:-1:-1;5008:4:3;;4944:284;;;;3372:14:29;;3365:22;3347:41;;3335:2;3320:18;4944:284:3;3207:187:29;2445:27:3;;;;;;;;;;-1:-1:-1;2445:27:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;4494:329::-;;;;;;;;;;-1:-1:-1;4542:4:3;4494:329;;7634:1609;;;;;;;;;;-1:-1:-1;7634:1609:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;14388:320::-;;;;;;;;;;-1:-1:-1;14388:320:3;;;;;:::i;:::-;;:::i;1014:75::-;;;;;;;;;;-1:-1:-1;1014:75:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9379:25:29;;;9367:2;9352:18;1014:75:3;9233:177:29;10929:101:3;;;;;;;;;;-1:-1:-1;10929:101:3;;;;;:::i;:::-;;:::i;1652:94:13:-;;;;;;;;;;;;;:::i;16786:1286:3:-;;;;;;;;;;-1:-1:-1;16786:1286:3;;;;;:::i;:::-;;:::i;5923:969::-;;;;;;;;;;-1:-1:-1;5923:969:3;;;;;:::i;:::-;;:::i;12909:664::-;;;;;;;;;;-1:-1:-1;12909:664:3;;;;;:::i;:::-;;:::i;2840:38::-;;;;;;;;;;-1:-1:-1;2840:38:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:13:-;;;;;;;;;;-1:-1:-1;1074:6:13;;1001:87;;-1:-1:-1;;;;;1074:6:13;;;12296:51:29;;12284:2;12269:18;1001:87:13;12150:203:29;2884:34:3;;;;;;;;;;;;;;;;5410:112;;;;;;;;;;-1:-1:-1;5410:112:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9319:1500::-;;;;;;;;;;-1:-1:-1;9319:1500:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13619:762::-;;;;;;;;;;-1:-1:-1;13619:762:3;;;;;:::i;:::-;;:::i;15652:1128::-;;;;;;;;;;-1:-1:-1;15652:1128:3;;;;;:::i;:::-;;:::i;2582:61::-;;;;;;;;;;-1:-1:-1;2582:61:3;;;;;;;;;-1:-1:-1;;;2582:61:3;;;;;;;;;;14398:2:29;14387:22;;;14369:41;;14446:22;;;;14441:2;14426:18;;14419:50;14342:18;2582:61:3;14199:276:29;19287:4294:3;;;;;;;;;;-1:-1:-1;19287:4294:3;;;;;:::i;:::-;;:::i;1901:192:13:-;;;;;;;;;;-1:-1:-1;1901:192:13;;;;;:::i;:::-;;:::i;6939:688:3:-;;;;;;;;;;-1:-1:-1;6939:688:3;;;;;:::i;:::-;;:::i;11156:1221::-;;;;;;;;;;-1:-1:-1;11156:1221:3;;;;;:::i;:::-;;:::i;5528:389::-;;;;;;;;;;-1:-1:-1;5528:389:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2759:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2759:46:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;2759:46:3;;;;;;-1:-1:-1;;;2759:46:3;;;;:::o;18078:503::-;18179:22;18221:7;18229:1;18221:10;;;;;;;;:::i;:::-;;;;;;;18204:28;;;;;;16590:19:29;;16634:2;16625:12;;16461:182;18204:28:3;;;;;;;;;;;;;18179:53;;18245:8;18242:193;;;18273:9;18269:156;18292:7;:14;18288:1;:18;18269:156;;;18366:7;18374:1;18366:10;;;;;;;;:::i;:::-;;;;;;;18349:28;;;;;;16590:19:29;;16634:2;16625:12;;16461:182;18349:28:3;;;;;;;;;;;;;18339:39;;;;;;18326:7;18334:1;18326:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;18406:3;;18269:156;;;;18242:193;18444:14;18488:7;18471:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;18461:36;;;;;;18444:53;;18512:62;18524:6;18540:10;18532:6;:18;18552:7;18560:1;18552:10;;;;;;;;:::i;:::-;;;;;;;18564:9;18512:62;;;;;;;;;:::i;:::-;;;;;;;;18169:412;;18078:503;;;:::o;2445:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2445:27:3;;;;;;;-1:-1:-1;;2445:27:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2445:27:3;;;;-1:-1:-1;;;2445:27:3;;;;;-1:-1:-1;;;2445:27:3;;;;;;;-1:-1:-1;;;2445:27:3;;;;;:::o;7634:1609::-;7703:13;7718:16;7746:27;7776:49;7800:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;7776:49:3;7746:79;;7835:18;;:::i;:::-;7863:14;;;7913:352;7935:19;7931:1;:23;7913:352;;;7988:48;8008:24;8034:1;7988:19;:48::i;:::-;7980:57;8060:13;;;:5;:13;;;;;;;8051:22;;;;;;;;;;7980:57;;-1:-1:-1;8051:22:3;;;;8060:13;;8051:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8051:22:3;;;-1:-1:-1;;8051:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8051:22:3;;-1:-1:-1;;;;;8051:22:3;;;;;-1:-1:-1;;;8051:22:3;;;;;;;;;;-1:-1:-1;;;8051:22:3;;;;;;;-1:-1:-1;;;8051:22:3;;;;;;;;;8091:36;;;;;-1:-1:-1;8130:15:3;8091:54;;;:84;;;;;8169:6;8149:26;;:6;:17;;;:26;;;8091:84;8087:140;;;8204:7;;;;;8087:140;8250:3;;7913:352;;;;8322:5;8329:1;8322:8;8318:249;;8370:13;;;8381:1;8370:13;;;;;;;;;8346:22;;8370:13;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;8428:16:3;;;8442:1;8428:16;;;;;;;;;8346:37;;-1:-1:-1;8397:29:3;;8428:16;;;;;;;;;;-1:-1:-1;8533:8:3;;;;-1:-1:-1;8533:8:3;;-1:-1:-1;;;;;;;;;7634:1609:3:o;8318:249::-;8577:15;8606:21;8641:5;-1:-1:-1;;;;;8630:17:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8606:41;;8657:26;8700:5;-1:-1:-1;;;;;8686:20:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8686:20:3;;8657:49;;8720:9;8716:484;8738:19;8734:1;:23;8716:484;;;8791:48;8811:24;8837:1;8791:19;:48::i;:::-;8783:57;8863:13;;;:5;:13;;;;;;;8854:22;;;;;;;;;;8783:57;;-1:-1:-1;8854:22:3;;;;8863:13;;8854:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8854:22:3;;;-1:-1:-1;;8854:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8854:22:3;;-1:-1:-1;;;;;8854:22:3;;;;;-1:-1:-1;;;8854:22:3;;;;;;;;;;-1:-1:-1;;;8854:22:3;;;;;;;-1:-1:-1;;;8854:22:3;;;;;;;;;8894:36;;;;;-1:-1:-1;8933:15:3;8894:54;;;:84;;;;;8972:6;8952:26;;:6;:17;;;:26;;;8894:84;8890:272;;;9016:6;8997:7;9005;8997:16;;;;;;;;:::i;:::-;;;;;;:25;;;;9061:6;9040:9;9050:7;9040:18;;;;;;;;:::i;:::-;;;;;;:27;;;;;9095:9;;;;;9134:5;9126:7;:13;9141:5;9123:25;;9185:3;;8716:484;;;-1:-1:-1;9217:7:3;;9226:9;;-1:-1:-1;7634:1609:3;-1:-1:-1;;;;;;;7634:1609:3:o;14388:320::-;24147:50;;-1:-1:-1;;;24147:50:3;;17846:2:29;24147:50:3;;;17828:21:29;17885:2;17865:18;;;17858:30;-1:-1:-1;;;17904:18:29;;;17897:50;17964:18;;24147:50:3;;;;;;;;14595:106:::1;14388:320:::0;;;;;;;:::o;10929:101::-;1074:6:13;;-1:-1:-1;;;;;1074:6:13;679:10:7;1221:23:13;1213:68;;;;-1:-1:-1;;;1213:68:13;;;;;;;:::i;:::-;10996:10:3::1;:27:::0;;-1:-1:-1;;;;;;10996:27:3::1;-1:-1:-1::0;;;;;10996:27:3;;;::::1;::::0;;;::::1;::::0;;10929:101::o;1652:94:13:-;1074:6;;-1:-1:-1;;;;;1074:6:13;679:10:7;1221:23:13;1213:68;;;;-1:-1:-1;;;1213:68:13;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;16786:1286:3:-;16970:9;16966:1080;16987:9;:16;16985:18;;16966:1080;;;17091:9;17080:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;17070:32;;;;;;17043:9;17053:1;17043:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;17032:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;17022:44;;;;;;:80;17019:989;;17218:15;17189:9;17199:1;17189:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;17189:25:3;;;;:44;;;;:92;;;17256:9;17266:1;17256:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;17256:25:3;;;;17237:15;:44;;17189:92;17181:124;;;;-1:-1:-1;;;17181:124:3;;19914:2:29;17181:124:3;;;19896:21:29;19953:2;19933:18;;;19926:30;-1:-1:-1;;;19972:18:29;;;19965:49;20031:18;;17181:124:3;19712:343:29;17181:124:3;17358:18;17379:98;;;;;;;;17384:9;17379:98;;;;17394:6;17379:98;;;;;;17402:5;17379:98;;;;17409:1;17379:98;;;;;;17412:9;17422:1;17412:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;17379:98;;;;;;17442:9;17452:1;17442:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;17442:22:3;;;;17379:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;17555:19;;17521:24;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;-1:-1:-1;;;;;2271:26:1;;;2207:11;2284:13;;;2271:26;;;;;;;17594::3;;:5;:26;;;:35;;;;-1:-1:-1;17594:35:3;;:26;;:35;;:26;:35;:::i;:::-;-1:-1:-1;17594:35:3;;;;;;;;;;-1:-1:-1;;17594:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17594:35:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17594:35:3;-1:-1:-1;;;;;;;;17594:35:3;;;;;;;-1:-1:-1;;;;17594:35:3;;-1:-1:-1;;;17594:35:3;;;;;;-1:-1:-1;;;;17594:35:3;-1:-1:-1;;;17594:35:3;;;;;-1:-1:-1;;;;17594:35:3;;;;;-1:-1:-1;;;17594:35:3;;;;;;;;;;;;17647:19;:22;;-1:-1:-1;;17647:22:3;;17594:35;;17647:22;:::i;:::-;;;;-1:-1:-1;17771:24:3;;-1:-1:-1;17771:15:3;17789:6;17771:24;:::i;:::-;17724:9;17734:1;17724:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;:71;17843:9;:12;;17873:1;;17843:9;17853:1;;17843:12;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;;;;;;;;;:31;;;;:::i;:::-;17813:9;17823:1;17813:12;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:61;;;;;;;;;;;;;;;;;;17898:72;17912:6;17940:1;17919:19;;:22;;;;:::i;:::-;17943:9;17954:15;17898:72;;;;;;;;;:::i;:::-;;;;;;;;17988:5;;;17019:989;18031:3;;16966:1080;;;;16786:1286;;;:::o;5923:969::-;5990:7;6031:14;;6018:10;:27;6010:56;;;;-1:-1:-1;;;6010:56:3;;23415:2:29;6010:56:3;;;23397:21:29;23454:2;23434:18;;;23427:30;-1:-1:-1;;;23473:18:29;;;23466:46;23529:18;;6010:56:3;23213:340:29;6010:56:3;6103:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;6103:34:3;;;;6085:15;:52;6076:85;;;;-1:-1:-1;;;6076:85:3;;23760:2:29;6076:85:3;;;23742:21:29;23799:2;23779:18;;;23772:30;-1:-1:-1;;;23818:18:29;;;23811:49;23877:18;;6076:85:3;23558:343:29;6076:85:3;6281:19;6310:25;6345:11;6372:9;6368:445;6388:21;;;;:9;:21;;;;;:37;;;;;6385:40;;6368:445;;;6517:17;6484:9;:21;6494:10;6484:21;;;;;;;;;;;:27;;6512:1;6484:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;6481:322;;;6574:9;:21;6584:10;6574:21;;;;;;;;;;;:27;;6602:1;6574:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6554:50;;;;6636:1;6622:15;;6659:3;6664:1;6659:6;6655:23;;6675:1;6669:7;;6655:23;6481:322;;;6747:17;6713:9;:21;6723:10;6713:21;;;;;;;;;;;:27;;6741:1;6713:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;6710:93;;6787:1;6783:5;;6710:93;6427:3;;;;:::i;:::-;;;;6368:445;;;-1:-1:-1;6830:6:3;;6822:35;;;;-1:-1:-1;;;6822:35:3;;24248:2:29;6822:35:3;;;24230:21:29;24287:2;24267:18;;;24260:30;-1:-1:-1;;;24306:18:29;;;24299:46;24362:18;;6822:35:3;24046:340:29;6822:35:3;-1:-1:-1;6874:11:3;;5923:969;-1:-1:-1;;;5923:969:3:o;12909:664::-;23983:31;;-1:-1:-1;;;23983:31:3;;24593:2:29;23983:31:3;;;24575:21:29;24632:2;24612:18;;;24605:30;-1:-1:-1;;;24651:18:29;;;24644:44;24705:18;;23983:31:3;24391:338:29;2840:38:3;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2840:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2840:38:3;-1:-1:-1;2840:38:3;;;;;;;;;;-1:-1:-1;;;;;;;;2840:38:3;;;;;-1:-1:-1;;;2840:38:3;;;;;-1:-1:-1;;;2840:38:3;;;;;;-1:-1:-1;;;2840:38:3;;;;;:::o;5410:112::-;5471:11;;:::i;:::-;5501:14;;;;:5;:14;;;;;;;5494:21;;;;;;;;;;;;5501:14;;5494:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5494:21:3;;;-1:-1:-1;;5494:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5494:21:3;;-1:-1:-1;;;;;5494:21:3;;;;;-1:-1:-1;;;5494:21:3;;;;;;;;;;-1:-1:-1;;;5494:21:3;;;;;;;-1:-1:-1;;;5494:21:3;;;;;;;;;;;;-1:-1:-1;;5410:112:3:o;9319:1500::-;9390:15;9417:13;;9440:544;9460:9;:16;9457:19;;9440:544;;;9542:15;9495:9;9505:1;9495:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;9602:15;9573:9;9583:1;9573:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9573:25:3;;;;:44;;9495:122;:169;;;;;9649:15;9621:9;9631:1;9621:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9621:25:3;;;;:43;9495:169;:216;;;;;9710:1;9680:9;9690:1;9680:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;9680:27:3;;;;:31;9495:216;9492:285;;;9754:7;;;;;9492:285;9969:3;;9440:544;;;;10041:5;10048:1;10041:8;10037:139;;10091:15;;;10104:1;10091:15;;;;;;;;;10065:24;;10091:15;;;;;;;;;;;;;;;;;;;;10065:41;;10120:16;;;;;;;;;;;;:8;10129:1;10120:11;;;;;;;;:::i;:::-;;;;;;;;;;:16;10157:8;9319:1500;-1:-1:-1;;;9319:1500:3:o;10037:139::-;10186:23;10225:5;-1:-1:-1;;;;;10212:19:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10186:45;;10241:15;10274:9;10270:519;10290:9;:16;10287:19;;10270:519;;;10372:15;10325:9;10335:1;10325:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;10432:15;10403:9;10413:1;10403:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;10403:25:3;;;;:44;;10325:122;:169;;;;;10479:15;10451:9;10461:1;10451:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;10451:25:3;;;;:43;10325:169;:216;;;;;10540:1;10510:9;10520:1;10510:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;10510:27:3;;;;:31;10325:216;10322:429;;;10593:9;10603:1;10593:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;10574:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;10582;10574:16;;;;;;;;:::i;:::-;;;;;;:40;;;;10642:9;;;;;10684:5;10673:7;:16;10670:67;10713:5;10670:67;;10774:3;;10270:519;;;-1:-1:-1;10805:7:3;;9319:1500;-1:-1:-1;;;;9319:1500:3:o;13619:762::-;24147:50;;-1:-1:-1;;;24147:50:3;;17846:2:29;24147:50:3;;;17828:21:29;17885:2;17865:18;;;17858:30;-1:-1:-1;;;17904:18:29;;;17897:50;17964:18;;24147:50:3;17644:344:29;15652:1128:3;15727:27;15757:49;15781:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;15757:49:3;15727:79;;15816:18;;:::i;:::-;15844:14;;15955:766;15977:19;15973:1;:23;15955:766;;;16030:48;16050:24;16076:1;16030:19;:48::i;:::-;16022:57;16102:13;;;:5;:13;;;;;;;16093:22;;;;;;;;;;16022:57;;-1:-1:-1;16093:22:3;;;;16102:13;;16093:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16093:22:3;;;-1:-1:-1;;16093:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16093:22:3;;-1:-1:-1;;;;;16093:22:3;;;;;-1:-1:-1;;;16093:22:3;;;;;;;;;;-1:-1:-1;;;16093:22:3;;;;;;;-1:-1:-1;;;16093:22:3;;;;;;;;;16133:36;;;;;-1:-1:-1;16172:15:3;16133:54;;;:80;;;;;16207:6;16191;:12;;;:22;;;;16133:80;:109;;;;;16236:6;16217;:16;;;:25;;;;16133:109;16129:554;;;16421:34;;;:17;;;:34;16537:16;;16519:34;;:15;:34;:::i;:::-;16473:81;;:36;;;:81;16572:13;;;;:5;:13;;;;;:22;;16473:6;;16572:13;;;:22;;:13;:22;:::i;:::-;-1:-1:-1;16572:22:3;;;;;;;;;;-1:-1:-1;;16572:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16572:22:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16572:22:3;-1:-1:-1;;;;;;;;16572:22:3;;;;;;;-1:-1:-1;;;;16572:22:3;;-1:-1:-1;;;16572:22:3;;;;;;-1:-1:-1;;;;16572:22:3;-1:-1:-1;;;16572:22:3;;;;;-1:-1:-1;;;;16572:22:3;;;;;-1:-1:-1;;;16572:22:3;;;;;;;;;;;;-1:-1:-1;16654:13:3;;;:5;:13;;;;;;;16617:51;;;;;;16638:6;;16654:13;;16617:51;:::i;:::-;;;;;;;;16129:554;16706:3;;15955:766;;;;15717:1063;;;15652:1128;:::o;19287:4294::-;19451:10;;:26;;-1:-1:-1;;;19451:26:3;;;;;9379:25:29;;;19481:10:3;;-1:-1:-1;;;;;19451:10:3;;:18;;9352::29;;19451:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19451:40:3;;:77;;;;-1:-1:-1;19495:14:3;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;19495:25:3;;;;:33;;19451:77;19443:122;;;;-1:-1:-1;;;19443:122:3;;29374:2:29;19443:122:3;;;29356:21:29;;;29393:18;;;29386:30;29452:34;29432:18;;;29425:62;29504:18;;19443:122:3;29172:356:29;19443:122:3;19600:1;19583:7;:14;:18;19575:27;;;;;;19613:18;19634:14;;;:5;:14;;;;;;19613:35;;;;;;;;;;;;19634:14;;19613:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19613:35:3;;;-1:-1:-1;;19613:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19613:35:3;;-1:-1:-1;;;;;19613:35:3;;;;;-1:-1:-1;;;19613:35:3;;;;;;;;;;-1:-1:-1;;;19613:35:3;;;;;;;;-1:-1:-1;;;19613:35:3;;;;;;;;;;;;;;19772:16;;;;;;-1:-1:-1;19613:35:3;;19772:20;;19769:205;;19812:9;19808:156;19831:7;:14;19827:1;:18;19808:156;;;19905:7;19913:1;19905:10;;;;;;;;:::i;:::-;;;;;;;19888:28;;;;;;16590:19:29;;16634:2;16625:12;;16461:182;19888:28:3;;;;;;;;;;;;;19878:39;;;;;;19865:7;19873:1;19865:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;19945:3;;19808:156;;;;19769:205;19983:14;20027:7;20010:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;20000:36;;;;;;19983:53;;20047:19;20084:6;20069;:11;;;:21;:29;;20097:1;20069:29;;;20093:1;20069:29;20144:12;;;;;20114:76;;;29785:25:29;;;29858:12;29846:25;;;29826:18;;;29819:53;;;;29888:18;;;29881:34;;;29946:2;29931:18;;29924:34;;;20047:51:3;;;;;20188:1;20175:14;;29989:3:29;29974:19;;29967:51;20047::3;-1:-1:-1;20114:76:3;;29772:3:29;29757:19;20114:76:3;;;;;;;20205:11;20219:1;20205:15;20201:2581;;20299:13;20330:1;20315:6;:14;;;:16;;;;:::i;:::-;20385:10;;20404:17;;;;20385:37;;-1:-1:-1;;;20385:37:3;;30509:6:29;30497:19;;;20385:37:3;;;30479:38:29;-1:-1:-1;;;;;20299:32:3;;;;;-1:-1:-1;20345:29:3;;-1:-1:-1;;;;;20385:10:3;;;;:18;;30452::29;;20385:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20491:10;;20534:12;;;;20548:16;;;;20491:74;;-1:-1:-1;;;20491:74:3;;30729:12:29;30717:25;;;20491:74:3;;;30699:44:29;30791:8;30779:21;30759:18;;;30752:49;20345:78:3;;-1:-1:-1;;;;;;20491:10:3;;:42;;30672:18:29;;20491:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20579:10:3;;20622:17;;;;20641:25;;20579:88;;-1:-1:-1;;;20579:88:3;;31013:6:29;31001:19;;;20579:88:3;;;30983:38:29;20641:25:3;;31037:18:29;;;31030:53;-1:-1:-1;;;;;20579:10:3;;;;-1:-1:-1;20579:42:3;;-1:-1:-1;30956:18:29;;20579:88:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20751:14:3;;;;:5;:14;;;;;;-1:-1:-1;20744:21:3;20751:14;;20744:21;:::i;:::-;-1:-1:-1;20744:21:3;;;;;-1:-1:-1;;20744:21:3;;;-1:-1:-1;20744:21:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20744:21:3;;;20851:36;;-1:-1:-1;;;;;;;20851:18:3;;;20877:5;;-1:-1:-1;20851:36:3;-1:-1:-1;20851:36:3;20877:5;20851:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20818:69;;;;20909:4;20901:37;;;;-1:-1:-1;;;20901:37:3;;;;;;;:::i;:::-;21000:33;;:10;;21023:5;;21000:33;;;;21023:5;21000:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20985:48:3;;-1:-1:-1;20985:48:3;-1:-1:-1;20985:48:3;21047:37;;;;-1:-1:-1;;;21047:37:3;;;;;;;:::i;:::-;20221:875;;;;20201:2581;;;21200:6;:16;;;:19;;21218:1;21200:19;21197:211;;21238:31;;;:16;;;:31;21287:18;;;:25;;;-1:-1:-1;21330:14:3;;;:5;:14;;;;;:23;;21238:6;;21330:14;;;:23;;:14;:23;:::i;:::-;-1:-1:-1;21330:23:3;;;;;;;;;-1:-1:-1;;21330:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21330:23:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21330:23:3;-1:-1:-1;;;;;;;;21330:23:3;;;;;;;-1:-1:-1;;;;21330:23:3;;-1:-1:-1;;;21330:23:3;;;;;;-1:-1:-1;;;;21330:23:3;-1:-1:-1;;;21330:23:3;;;;;-1:-1:-1;;;;21330:23:3;;;;;-1:-1:-1;;;21330:23:3;;;;;;;;;;;-1:-1:-1;;;21197:211:3;21504:6;21484;:18;;;:26;21481:1291;;21529:13;21560:1;21545:6;:14;;;:16;;;;:::i;:::-;21617:10;;;21636:16;;;21617:36;;-1:-1:-1;;;21617:36:3;;30509:6:29;30497:19;;;21617:36:3;;;30479:38:29;-1:-1:-1;;;;;21529:32:3;;;;;-1:-1:-1;21579:27:3;;-1:-1:-1;;;;;21617:10:3;;;;:18;;30452::29;;21617:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21673:10;;;21716:16;;;21734:25;;21673:87;;-1:-1:-1;;;21673:87:3;;31013:6:29;31001:19;;;21673:87:3;;;30983:38:29;21734:25:3;;31037:18:29;;;31030:53;21579:75:3;;-1:-1:-1;;;;;;21673:10:3;;:42;;30956:18:29;;21673:87:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21778:10:3;;21829:25;;21778:77;;-1:-1:-1;;;21778:77:3;;;;;31825:25:29;;;21829::3;;;;31866:18:29;;;31859:53;-1:-1:-1;;;;;21778:10:3;;;;-1:-1:-1;21778:42:3;;-1:-1:-1;31798:18:29;;21778:77:3;31653:265:29;21481:1291:3;22487:14;;;;22471:13;22526:14;;;:5;:14;;;;;-1:-1:-1;;;;;22471:30:3;;;;22526:14;22519:21;22526:14;22471:13;22519:21;:::i;:::-;-1:-1:-1;22519:21:3;;;;;-1:-1:-1;;22519:21:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;22519:21:3;;;;22591:7;1074:6:13;;-1:-1:-1;;;;;1074:6:13;;1001:87;22591:7:3;-1:-1:-1;;;;;22591:12:3;22611:5;22591:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22558:63;;;;22697:4;22689:37;;;;-1:-1:-1;;;22689:37:3;;;;;;;:::i;:::-;22365:407;;;21481:1291;22846:14;22843:731;;;22875:27;22905:49;22929:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;22905:49:3;22875:79;;23056:9;23052:512;23074:19;23070:1;:23;23052:512;;;23177:7;23126:48;23146:24;23172:1;23126:19;:48::i;:::-;23118:66;23114:404;;23207:17;23227:51;23253:24;23227:25;:51::i;:::-;23207:71;-1:-1:-1;23303:4:3;;23300:200;;23385:24;23423:31;23468:9;;23385:30;;:80;;23423:40;;23461:1;;23423:31;;:40;:::i;:::-;23385:80;;;;;;;;;;;;;-1:-1:-1;23385:80:3;:92;23300:200;23185:333;23114:404;23545:3;;23052:512;;;;22861:713;19383:4198;;;;19287:4294;;;:::o;1901:192:13:-;1074:6;;-1:-1:-1;;;;;1074:6:13;679:10:7;1221:23:13;1213:68;;;;-1:-1:-1;;;1213:68:13;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:13;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:13;;32395:2:29;1982:73:13::1;::::0;::::1;32377:21:29::0;32434:2;32414:18;;;32407:30;32473:34;32453:18;;;32446:62;-1:-1:-1;;;32524:18:29;;;32517:36;32570:19;;1982:73:13::1;32193:402:29::0;1982:73:13::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;6939:688:3:-;7014:4;7030:27;7060:49;7084:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;7060:49:3;7030:79;;7119:18;;:::i;:::-;7263:9;7259:340;7281:19;7277:1;:23;7259:340;;;7326:5;:63;7340:47;7360:24;7385:1;7340:19;:47::i;:::-;7332:56;;7326:63;;;;;;;;;;;7317:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7317:72:3;;;-1:-1:-1;;7317:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7317:72:3;;-1:-1:-1;;;;;7317:72:3;;;;;-1:-1:-1;;;7317:72:3;;;;;;;;;;-1:-1:-1;;;7317:72:3;;;;;;;-1:-1:-1;;;7317:72:3;;;;;;;;;7407:36;;;;;-1:-1:-1;7446:15:3;7407:54;;;:80;;;;;7481:6;7465;:12;;;:22;;;;7407:80;:109;;;;;7510:6;7491;:16;;;:25;;;;7407:109;7403:158;;;-1:-1:-1;7542:4:3;;6939:688;-1:-1:-1;;;;6939:688:3:o;7403:158::-;7584:3;;7259:340;;;-1:-1:-1;7615:5:3;;6939:688;-1:-1:-1;;;;6939:688:3:o;11156:1221::-;11238:9;11234:1137;11253:9;:16;11251:18;;11234:1137;;;11369:9;11352:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;11342:38;;;;;;11315:9;11325:1;11315:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;11298:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;11288:50;;;;;;:92;11285:1048;;11463:27;11493:9;11503:1;11493:12;;;;;;;;:::i;:::-;;;;;;;;;;;11463:42;;11523:34;11560:9;11587:1;11570:9;:16;;;;:18;;;;:::i;:::-;11560:29;;;;;;;;:::i;:::-;;;;;;;;;;;11523:66;;11718:17;11705:30;;11760:9;11787:1;11770:9;:16;;;;:18;;;;:::i;:::-;11760:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11753:36;;;;;;;;:::i;:::-;-1:-1:-1;11753:36:3;;;;-1:-1:-1;;;;;;11753:36:3;;;12266:9;12276:16;;:18;;11753:36;;12276:18;:::i;:::-;12266:29;;;;;;;;:::i;:::-;;;;;;;;;;;;12259:36;;;;;;;;:::i;:::-;-1:-1:-1;12259:36:3;;;;-1:-1:-1;;;;;;12259:36:3;;;-1:-1:-1;12313:5:3;;-1:-1:-1;12313:5:3;11285:1048;12356:3;;11234:1137;;;;11156:1221;:::o;5528:389::-;5589:15;5637:14;;5624:10;:27;5616:56;;;;-1:-1:-1;;;5616:56:3;;23415:2:29;5616:56:3;;;23397:21:29;23454:2;23434:18;;;23427:30;-1:-1:-1;;;23473:18:29;;;23466:46;23529:18;;5616:56:3;23213:340:29;5616:56:3;5682:25;5723:21;;;:9;:21;;;;;:37;;;;;-1:-1:-1;;;;;5710:51:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5710:51:3;;5682:79;;5775:9;5771:114;5793:9;:16;5790:1;:19;5771:114;;;5844:9;:21;5854:10;5844:21;;;;;;;;;;;:27;;5872:1;5844:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5829:9;5839:1;5829:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;5811:3;;;;:::i;:::-;;;;5771:114;;;-1:-1:-1;5901:9:3;5528:389;-1:-1:-1;;5528:389:3:o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;2101:173:13:-;2176:6;;;-1:-1:-1;;;;;2193:17:13;;;-1:-1:-1;;;;;;2193:17:13;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;3287:324:1:-;3351:13;3380:12;3386:5;5880:12;;;;;-1:-1:-1;;;5866:10:1;;;;;:26;;;5777:122;3380:12;3376:32;;;3401:7;;-1:-1:-1;;;3401:7:1;;;;;;;;;;;3376:32;-1:-1:-1;3438:12:1;;;;3418:17;3468:23;;;3438:12;3468:11;;;:23;;;;;;;3501:30;;;3565:29;;-1:-1:-1;;3565:29:1;3580:14;;-1:-1:-1;;;;;3565:29:1;;;;;;;;3468:23;3287:324::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;34863:2:29;35401:87:0;;;34845:21:29;34902:2;34882:18;;;34875:30;34941:34;34921:18;;;34914:62;-1:-1:-1;;;34992:18:29;;;34985:38;35040:19;;35401:87:0;34661:404:29;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;35272:2:29;26359:106:0;;;35254:21:29;35311:2;35291:18;;;35284:30;35350:34;35330:18;;;35323:62;-1:-1:-1;;;35401:18:29;;;35394:37;35448:19;;26359:106:0;35070:403:29;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:29;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:29;;14:180;-1:-1:-1;14:180:29:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;-1:-1:-1;;447:1:29;429:16;;422:27;199:258::o;462:::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;702:2;681:15;-1:-1:-1;;677:29:29;668:39;;;;709:4;664:50;;462:258;-1:-1:-1;;462:258:29:o;921:570::-;1174:3;1163:9;1156:22;1137:4;1195:46;1236:3;1225:9;1221:19;1213:6;1195:46;:::i;:::-;1289:6;1277:19;;;;1272:2;1257:18;;1250:47;-1:-1:-1;1316:12:29;1364:15;;;1359:2;1344:18;;1337:43;1416:15;;;1411:2;1396:18;;1389:43;1469:15;;;1463:3;1448:19;;;1441:44;1187:54;921:570;-1:-1:-1;921:570:29:o;1496:127::-;1557:10;1552:3;1548:20;1545:1;1538:31;1588:4;1585:1;1578:15;1612:4;1609:1;1602:15;1628:275;1699:2;1693:9;1764:2;1745:13;;-1:-1:-1;;1741:27:29;1729:40;;-1:-1:-1;;;;;1784:34:29;;1820:22;;;1781:62;1778:88;;;1846:18;;:::i;:::-;1882:2;1875:22;1628:275;;-1:-1:-1;1628:275:29:o;1908:712::-;1962:5;2015:3;2008:4;2000:6;1996:17;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2069:6;2056:20;2095:4;-1:-1:-1;;;;;2114:2:29;2111:26;2108:52;;;2140:18;;:::i;:::-;2186:2;2183:1;2179:10;2209:28;2233:2;2229;2225:11;2209:28;:::i;:::-;2271:15;;;2341;;;2337:24;;;2302:12;;;;2373:15;;;2370:35;;;2401:1;2398;2391:12;2370:35;2437:2;2429:6;2425:15;2414:26;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2609:5;1908:712;-1:-1:-1;;;;;;;1908:712:29:o;2625:577::-;2724:6;2732;2740;2793:2;2781:9;2772:7;2768:23;2764:32;2761:52;;;2809:1;2806;2799:12;2761:52;2845:9;2832:23;2822:33;;2906:2;2895:9;2891:18;2878:32;-1:-1:-1;;;;;2925:6:29;2922:30;2919:50;;;2965:1;2962;2955:12;2919:50;2988:61;3041:7;3032:6;3021:9;3017:22;2988:61;:::i;:::-;2978:71;;;3099:2;3088:9;3084:18;3071:32;3146:5;3139:13;3132:21;3125:5;3122:32;3112:60;;3168:1;3165;3158:12;3112:60;3191:5;3181:15;;;2625:577;;;;;:::o;3576:836::-;3864:4;3893:3;3923:2;3912:9;3905:21;3943:45;3984:2;3973:9;3969:18;3961:6;3943:45;:::i;:::-;4031:14;;4024:22;4019:2;4004:18;;3997:50;-1:-1:-1;;4066:12:29;4114:15;;;4109:2;4094:18;;4087:43;4178:4;4166:17;;;;4161:2;4146:18;;4139:45;4233:8;4221:21;;;;4215:3;4200:19;;4193:50;4280:15;;;4274:3;4259:19;;4252:44;4333:15;;;4327:3;4312:19;;4305:44;4398:6;4386:19;;;4380:3;4365:19;;;4358:48;4031:14;3935:53;-1:-1:-1;3576:836:29:o;4417:165::-;4484:20;;4544:12;4533:24;;4523:35;;4513:63;;4572:1;4569;4562:12;4513:63;4417:165;;;:::o;4587:184::-;4645:6;4698:2;4686:9;4677:7;4673:23;4669:32;4666:52;;;4714:1;4711;4704:12;4666:52;4737:28;4755:9;4737:28;:::i;:::-;4727:38;4587:184;-1:-1:-1;;;4587:184:29:o;4887:1175::-;4934:3;4962:6;5003:5;4997:12;5030:2;5025:3;5018:15;5054:45;5095:2;5090:3;5086:12;5072;5054:45;:::i;:::-;5042:57;;;5147:4;5140:5;5136:16;5130:23;5162:49;5205:4;5200:3;5196:14;5180;896:12;885:24;873:37;;820:96;5162:49;;5260:4;5253:5;5249:16;5243:23;5236:4;5231:3;5227:14;5220:47;5316:4;5309:5;5305:16;5299:23;5292:4;5287:3;5283:14;5276:47;5371:4;5364:5;5360:16;5354:23;5386:48;5428:4;5423:3;5419:14;5403;3466:4;3455:16;3443:29;;3399:75;5386:48;;5482:4;5475:5;5471:16;5465:23;5497:49;5540:4;5535:3;5531:14;5515;3555:8;3544:20;3532:33;;3479:92;5497:49;;5594:4;5587:5;5583:16;5577:23;5609:49;5652:4;5647:3;5643:14;5627;-1:-1:-1;;;;;4841:34:29;4829:47;;4776:106;5609:49;;5706:4;5699:5;5695:16;5689:23;5721:49;5764:4;5759:3;5755:14;5739;801:6;790:18;778:31;;725:90;5721:49;-1:-1:-1;5789:6:29;5832:14;;;5826:21;801:6;790:18;5890:12;;;778:31;5922:6;5965:14;;;5959:21;896:12;885:24;;6023:12;;;873:37;5989:47;820:96;6067:1361;6331:4;6379:2;6368:9;6364:18;6409:2;6398:9;6391:21;6432:6;6467;6461:13;6498:6;6490;6483:22;6536:2;6525:9;6521:18;6514:25;;6598:2;6588:6;6585:1;6581:14;6570:9;6566:30;6562:39;6548:53;;6620:4;6659:2;6651:6;6647:15;6680:1;6690:260;6704:6;6701:1;6698:13;6690:260;;;6797:2;6793:7;6781:9;6773:6;6769:22;6765:36;6760:3;6753:49;6825:45;6863:6;6854;6848:13;6825:45;:::i;:::-;6815:55;-1:-1:-1;6928:12:29;;;;6893:15;;;;6726:1;6719:9;6690:260;;;-1:-1:-1;;6986:22:29;;;6966:18;;;6959:50;7062:13;;7084:24;;;7166:15;;;;7126;;;-1:-1:-1;7062:13:29;-1:-1:-1;7201:1:29;7211:189;7227:8;7222:3;7219:17;7211:189;;;7296:15;;7282:30;;7373:17;;;;7334:14;;;;7255:1;7246:11;7211:189;;;-1:-1:-1;7417:5:29;;6067:1361;-1:-1:-1;;;;;;;6067:1361:29:o;7433:348::-;7485:8;7495:6;7549:3;7542:4;7534:6;7530:17;7526:27;7516:55;;7567:1;7564;7557:12;7516:55;-1:-1:-1;7590:20:29;;-1:-1:-1;;;;;7622:30:29;;7619:50;;;7665:1;7662;7655:12;7619:50;7702:4;7694:6;7690:17;7678:29;;7754:3;7747:4;7738:6;7730;7726:19;7722:30;7719:39;7716:59;;;7771:1;7768;7761:12;7716:59;7433:348;;;;;:::o;7786:161::-;7853:20;;7913:8;7902:20;;7892:31;;7882:59;;7937:1;7934;7927:12;7952:159;8019:20;;8079:6;8068:18;;8058:29;;8048:57;;8101:1;8098;8091:12;8116:859;8226:6;8234;8242;8250;8258;8266;8274;8327:3;8315:9;8306:7;8302:23;8298:33;8295:53;;;8344:1;8341;8334:12;8295:53;8384:9;8371:23;-1:-1:-1;;;;;8409:6:29;8406:30;8403:50;;;8449:1;8446;8439:12;8403:50;8488:59;8539:7;8530:6;8519:9;8515:22;8488:59;:::i;:::-;8566:8;;-1:-1:-1;8462:85:29;-1:-1:-1;;8651:2:29;8636:18;;8623:32;8695:4;8684:16;;8674:27;;8664:55;;8715:1;8712;8705:12;8664:55;8738:5;-1:-1:-1;8762:37:29;8795:2;8780:18;;8762:37;:::i;:::-;8752:47;;8818:37;8851:2;8840:9;8836:18;8818:37;:::i;:::-;8808:47;;8874:38;8907:3;8896:9;8892:19;8874:38;:::i;:::-;8864:48;;8931:38;8964:3;8953:9;8949:19;8931:38;:::i;:::-;8921:48;;8116:859;;;;;;;;;;:::o;8980:248::-;9048:6;9056;9109:2;9097:9;9088:7;9084:23;9080:32;9077:52;;;9125:1;9122;9115:12;9077:52;-1:-1:-1;;9148:23:29;;;9218:2;9203:18;;;9190:32;;-1:-1:-1;8980:248:29:o;9415:131::-;-1:-1:-1;;;;;9490:31:29;;9480:42;;9470:70;;9536:1;9533;9526:12;9551:247;9610:6;9663:2;9651:9;9642:7;9638:23;9634:32;9631:52;;;9679:1;9676;9669:12;9631:52;9718:9;9705:23;9737:31;9762:5;9737:31;:::i;9803:531::-;9846:5;9899:3;9892:4;9884:6;9880:17;9876:27;9866:55;;9917:1;9914;9907:12;9866:55;9953:6;9940:20;-1:-1:-1;;;;;9975:2:29;9972:26;9969:52;;;10001:18;;:::i;:::-;10045:55;10088:2;10069:13;;-1:-1:-1;;10065:27:29;10094:4;10061:38;10045:55;:::i;:::-;10125:2;10116:7;10109:19;10171:3;10164:4;10159:2;10151:6;10147:15;10143:26;10140:35;10137:55;;;10188:1;10185;10178:12;10137:55;10253:2;10246:4;10238:6;10234:17;10227:4;10218:7;10214:18;10201:55;10301:1;10276:16;;;10294:4;10272:27;10265:38;;;;10280:7;9803:531;-1:-1:-1;;;9803:531:29:o;10339:462::-;10425:6;10433;10441;10494:2;10482:9;10473:7;10469:23;10465:32;10462:52;;;10510:1;10507;10500:12;10462:52;10550:9;10537:23;-1:-1:-1;;;;;10575:6:29;10572:30;10569:50;;;10615:1;10612;10605:12;10569:50;10638;10680:7;10671:6;10660:9;10656:22;10638:50;:::i;:::-;10628:60;;;10735:2;10724:9;10720:18;10707:32;10697:42;;10758:37;10791:2;10780:9;10776:18;10758:37;:::i;:::-;10748:47;;10339:462;;;;;:::o;10806:316::-;10883:6;10891;10899;10952:2;10940:9;10931:7;10927:23;10923:32;10920:52;;;10968:1;10965;10958:12;10920:52;-1:-1:-1;;10991:23:29;;;11061:2;11046:18;;11033:32;;-1:-1:-1;11112:2:29;11097:18;;;11084:32;;10806:316;-1:-1:-1;10806:316:29:o;11127:1018::-;11475:4;11504:3;11534:2;11523:9;11516:21;11554:45;11595:2;11584:9;11580:18;11572:6;11554:45;:::i;:::-;11618:12;11666:15;;;11661:2;11646:18;;11639:43;11713:2;11698:18;;11691:34;;;;-1:-1:-1;;11756:2:29;11741:18;;11734:34;;;;11817:4;11805:17;;;;11799:3;11784:19;;11777:46;11872:8;11860:21;;;;11854:3;11839:19;;11832:50;-1:-1:-1;;;;;11919:35:29;;;;11913:3;11898:19;;11891:64;11974:6;12017:15;;;12011:3;11996:19;;11989:44;12070:15;12064:3;12049:19;;12042:44;12123:15;;;12117:3;12102:19;;;12095:44;;;;11546:53;11127:1018;-1:-1:-1;11127:1018:29:o;12358:249::-;12531:2;12520:9;12513:21;12494:4;12551:50;12597:2;12586:9;12582:18;12574:6;12551:50;:::i;12612:803::-;12774:4;12803:2;12843;12832:9;12828:18;12873:2;12862:9;12855:21;12896:6;12931;12925:13;12962:6;12954;12947:22;13000:2;12989:9;12985:18;12978:25;;13062:2;13052:6;13049:1;13045:14;13034:9;13030:30;13026:39;13012:53;;13100:2;13092:6;13088:15;13121:1;13131:255;13145:6;13142:1;13139:13;13131:255;;;13238:2;13234:7;13222:9;13214:6;13210:22;13206:36;13201:3;13194:49;13266:40;13299:6;13290;13284:13;13266:40;:::i;:::-;13256:50;-1:-1:-1;13364:12:29;;;;13329:15;;;;13167:1;13160:9;13131:255;;;-1:-1:-1;13403:6:29;;12612:803;-1:-1:-1;;;;;;;12612:803:29:o;13420:774::-;13531:6;13539;13547;13555;13563;13571;13579;13632:3;13620:9;13611:7;13607:23;13603:33;13600:53;;;13649:1;13646;13639:12;13600:53;13689:9;13676:23;-1:-1:-1;;;;;13714:6:29;13711:30;13708:50;;;13754:1;13751;13744:12;13708:50;13793:59;13844:7;13835:6;13824:9;13820:22;13793:59;:::i;:::-;13871:8;;-1:-1:-1;13767:85:29;-1:-1:-1;13925:37:29;;-1:-1:-1;13958:2:29;13943:18;;13925:37;:::i;14480:484::-;14582:6;14590;14598;14651:2;14639:9;14630:7;14626:23;14622:32;14619:52;;;14667:1;14664;14657:12;14619:52;14703:9;14690:23;14680:33;;14760:2;14749:9;14745:18;14732:32;14722:42;;14815:2;14804:9;14800:18;14787:32;-1:-1:-1;;;;;14834:6:29;14831:30;14828:50;;;14874:1;14871;14864:12;14828:50;14897:61;14950:7;14941:6;14930:9;14926:22;14897:61;:::i;:::-;14887:71;;;14480:484;;;;;:::o;14969:322::-;15038:6;15091:2;15079:9;15070:7;15066:23;15062:32;15059:52;;;15107:1;15104;15097:12;15059:52;15147:9;15134:23;-1:-1:-1;;;;;15172:6:29;15169:30;15166:50;;;15212:1;15209;15202:12;15166:50;15235;15277:7;15268:6;15257:9;15253:22;15235:50;:::i;:::-;15225:60;14969:322;-1:-1:-1;;;;14969:322:29:o;15296:643::-;15465:2;15517:21;;;15587:13;;15490:18;;;15609:22;;;15436:4;;15465:2;15688:15;;;;15662:2;15647:18;;;15436:4;15731:182;15745:6;15742:1;15739:13;15731:182;;;15810:13;;15825:6;15806:26;15794:39;;15888:15;;;;15853:12;;;;15767:1;15760:9;15731:182;;;-1:-1:-1;15930:3:29;;15296:643;-1:-1:-1;;;;;;15296:643:29:o;15944:380::-;16023:1;16019:12;;;;16066;;;16087:61;;16141:4;16133:6;16129:17;16119:27;;16087:61;16194:2;16186:6;16183:14;16163:18;16160:38;16157:161;;16240:10;16235:3;16231:20;16228:1;16221:31;16275:4;16272:1;16265:15;16303:4;16300:1;16293:15;16157:161;;15944:380;;;:::o;16329:127::-;16390:10;16385:3;16381:20;16378:1;16371:31;16421:4;16418:1;16411:15;16445:4;16442:1;16435:15;16648:543;16866:13;;16809:3;;16840;;16919:4;16946:15;;;16809:3;16989:175;17003:6;17000:1;16997:13;16989:175;;;17066:13;;17052:28;;17102:14;;;;17139:15;;;;17025:1;17018:9;16989:175;;;-1:-1:-1;17180:5:29;;16648:543;-1:-1:-1;;;;;;16648:543:29:o;17196:443::-;17421:6;17410:9;17403:25;17478:6;17471:14;17464:22;17459:2;17448:9;17444:18;17437:50;17523:6;17518:2;17507:9;17503:18;17496:34;17566:3;17561:2;17550:9;17546:18;17539:31;17384:4;17587:46;17628:3;17617:9;17613:19;17605:6;17587:46;:::i;:::-;17579:54;17196:443;-1:-1:-1;;;;;;17196:443:29:o;17993:356::-;18195:2;18177:21;;;18214:18;;;18207:30;18273:34;18268:2;18253:18;;18246:62;18340:2;18325:18;;17993:356::o;18354:220::-;18503:2;18492:9;18485:21;18466:4;18523:45;18564:2;18553:9;18549:18;18541:6;18523:45;:::i;18705:772::-;18755:3;18796:5;18790:12;18825:36;18851:9;18825:36;:::i;:::-;18870:19;;;18908:4;18931:1;18948:18;;;18975:146;;;;19135:1;19130:341;;;;18941:530;;18975:146;-1:-1:-1;;19017:24:29;;19003:12;;;18996:46;19089:14;;19082:22;19079:1;19075:30;19066:40;;19062:49;;;-1:-1:-1;18975:146:29;;19130:341;19161:5;19158:1;19151:16;19208:2;19205:1;19195:16;19233:1;19247:174;19261:6;19258:1;19255:13;19247:174;;;19348:14;;19330:11;;;19326:20;;19319:44;19391:16;;;;19276:10;;19247:174;;;19445:11;;19441:20;;;-1:-1:-1;;18941:530:29;;;;;;18705:772;;;;:::o;19482:225::-;19628:2;19617:9;19610:21;19591:4;19648:53;19697:2;19686:9;19682:18;19674:6;19648:53;:::i;20060:545::-;20162:2;20157:3;20154:11;20151:448;;;20198:1;20223:5;20219:2;20212:17;20268:4;20264:2;20254:19;20338:2;20326:10;20322:19;20319:1;20315:27;20309:4;20305:38;20374:4;20362:10;20359:20;20356:47;;;-1:-1:-1;20397:4:29;20356:47;20452:2;20447:3;20443:12;20440:1;20436:20;20430:4;20426:31;20416:41;;20507:82;20525:2;20518:5;20515:13;20507:82;;;20570:17;;;20551:1;20540:13;20507:82;;;20511:3;;;20151:448;20060:545;;;:::o;20781:1352::-;20907:3;20901:10;-1:-1:-1;;;;;20926:6:29;20923:30;20920:56;;;20956:18;;:::i;:::-;20985:97;21075:6;21035:38;21067:4;21061:11;21035:38;:::i;:::-;21029:4;20985:97;:::i;:::-;21137:4;;21201:2;21190:14;;21218:1;21213:663;;;;21920:1;21937:6;21934:89;;;-1:-1:-1;21989:19:29;;;21983:26;21934:89;-1:-1:-1;;20738:1:29;20734:11;;;20730:24;20726:29;20716:40;20762:1;20758:11;;;20713:57;22036:81;;21183:944;;21213:663;18652:1;18645:14;;;18689:4;18676:18;;-1:-1:-1;;21249:20:29;;;21367:236;21381:7;21378:1;21375:14;21367:236;;;21470:19;;;21464:26;21449:42;;21562:27;;;;21530:1;21518:14;;;;21397:19;;21367:236;;;21371:3;21631:6;21622:7;21619:19;21616:201;;;21692:19;;;21686:26;-1:-1:-1;;21775:1:29;21771:14;;;21787:3;21767:24;21763:37;21759:42;21744:58;21729:74;;21616:201;-1:-1:-1;;;;;21863:1:29;21847:14;;;21843:22;21830:36;;-1:-1:-1;20781:1352:29:o;22138:127::-;22199:10;22194:3;22190:20;22187:1;22180:31;22230:4;22227:1;22220:15;22254:4;22251:1;22244:15;22270:128;22310:3;22341:1;22337:6;22334:1;22331:13;22328:39;;;22347:18;;:::i;:::-;-1:-1:-1;22383:9:29;;22270:128::o;22403:217::-;22442:4;22471:6;22527:10;;;;22497;;22549:12;;;22546:38;;;22564:18;;:::i;:::-;22601:13;;22403:217;-1:-1:-1;;;22403:217:29:o;22625:125::-;22665:4;22693:1;22690;22687:8;22684:34;;;22698:18;;:::i;:::-;-1:-1:-1;22735:9:29;;22625:125::o;22755:453::-;22999:12;22991:6;22987:25;22976:9;22969:44;23049:6;23044:2;23033:9;23029:18;23022:34;23092:3;23087:2;23076:9;23072:18;23065:31;22950:4;23113:46;23154:3;23143:9;23139:19;23131:6;23113:46;:::i;:::-;23105:54;;23195:6;23190:2;23179:9;23175:18;23168:34;22755:453;;;;;;;:::o;23906:135::-;23945:3;23966:17;;;23963:43;;23986:18;;:::i;:::-;-1:-1:-1;24033:1:29;24022:13;;23906:135::o;24734:251::-;24804:6;24857:2;24845:9;24836:7;24832:23;24828:32;24825:52;;;24873:1;24870;24863:12;24825:52;24905:9;24899:16;24924:31;24949:5;24924:31;:::i;26986:229::-;27000:7;26997:1;26994:14;26986:229;;;27089:19;;;27076:33;27061:49;;27196:4;27181:20;;;;27149:1;27137:14;;;;27016:12;26986:229;;;26990:3;27243;27234:7;27231:16;27228:159;;;27367:1;27363:6;27357:3;27351;27348:1;27344:11;27340:21;27336:34;27332:39;27319:9;27314:3;27310:19;27297:33;27293:79;27285:6;27278:95;27228:159;;;27430:1;27424:3;27421:1;27417:11;27413:19;27407:4;27400:33;26800:895;;26495:1206;;;:::o;27841:1326::-;28067:6;28056:9;28049:25;28110:6;28105:2;28094:9;28090:18;28083:34;28153:2;28148;28137:9;28133:18;28126:30;28030:4;28175:6;28217:2;28212;28201:9;28197:18;28190:30;28243:54;28292:3;28281:9;28277:19;28269:6;28243:54;:::i;:::-;28386:4;28374:17;;28368:24;27817:12;27801:29;896:12;885:24;;28449:3;28434:19;;873:37;-1:-1:-1;28509:4:29;28497:17;;28491:24;28485:3;28470:19;;28463:53;28571:4;28559:17;;28553:24;28547:3;28532:19;;28525:53;28622:4;28610:17;;28604:24;28669:4;28654:20;;28691:3;28676:19;;3443:29;28731:1;28727:17;;;28746:8;28723:32;28772:3;28757:19;;3532:33;28812:2;28808:18;;;-1:-1:-1;;;;;28804:47:29;28868:3;28853:19;;4829:47;28892:6;28933:3;28929:19;;;28925:28;;28955:18;;;778:31;28983:68;29046:3;29035:9;29031:19;29026:2;29014:9;29009:3;29005:19;29001:28;801:6;790:18;778:31;;725:90;28983:68;-1:-1:-1;29086:3:29;29082:19;;;29103:12;29078:38;29133:3;29118:19;;873:37;-1:-1:-1;29155:6:29;27841:1326;-1:-1:-1;;;;;;27841:1326:29:o;30029:300::-;30068:1;-1:-1:-1;;;;;30143:2:29;30140:1;30136:10;30165:3;30155:134;;30211:10;30206:3;30202:20;30199:1;30192:31;30246:4;30243:1;30236:15;30274:4;30271:1;30264:15;30155:134;30307:10;;30303:20;;;;;30029:300;-1:-1:-1;;30029:300:29:o;31304:344::-;31506:2;31488:21;;;31545:2;31525:18;;;31518:30;-1:-1:-1;;;31579:2:29;31564:18;;31557:50;31639:2;31624:18;;31304:344::o;31923:265::-;31962:3;31990:9;;;32015:10;;-1:-1:-1;;;;;32034:27:29;;;32027:35;;32011:52;32008:78;;;32066:18;;:::i;:::-;-1:-1:-1;;;32113:19:29;;;32106:27;;32098:36;;32095:62;;;32137:18;;:::i;:::-;-1:-1:-1;;32173:9:29;;31923:265::o;32600:276::-;32731:3;32769:6;32763:13;32785:53;32831:6;32826:3;32819:4;32811:6;32807:17;32785:53;:::i;:::-;32854:16;;;;;32600:276;-1:-1:-1;;32600:276:29:o;32881:842::-;33009:3;33038:1;33071:6;33065:13;33101:36;33127:9;33101:36;:::i;:::-;33156:1;33173:18;;;33200:133;;;;33347:1;33342:356;;;;33166:532;;33200:133;-1:-1:-1;;33233:24:29;;33221:37;;33306:14;;33299:22;33287:35;;33278:45;;;-1:-1:-1;33200:133:29;;33342:356;33373:6;33370:1;33363:17;33403:4;33448:2;33445:1;33435:16;33473:1;33487:165;33501:6;33498:1;33495:13;33487:165;;;33579:14;;33566:11;;;33559:35;33622:16;;;;33516:10;;33487:165;;;-1:-1:-1;;;33672:16:29;;;;;33714:3;-1:-1:-1;;;;;;32881:842:29:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "Empty()": [
        {
          "details": "An operation (e.g. {front}) couldn't be completed due to the queue being empty."
        }
      ],
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    771,
    24291
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D977672 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD374A217 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xF4739BD9 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xF713B7ED EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD374A217 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xE95D2347 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D977672 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x90B293D8 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xB2BAD544 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61F9E9A8 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xF61D8BD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x3B47FED2 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x4B50F16A EQ PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x18C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x310A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3213 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3272 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x20E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F1 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP3 SWAP2 SWAP1 PUSH2 0x33DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x3582 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0xD87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0xDD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x3645 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x127F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x369B JUMP JUMPDEST PUSH2 0x14A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x3748 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x450 PUSH2 0x44B CALLDATASIZE PUSH1 0x4 PUSH2 0x32F1 JUMP JUMPDEST PUSH2 0x171F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x375B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x37BD JUMP JUMPDEST PUSH2 0x1AE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x1B24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x4C3 SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x380D JUMP JUMPDEST PUSH2 0x1E5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0x288A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x2925 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x385C JUMP JUMPDEST PUSH2 0x2AF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH2 0x578 CALLDATASIZE PUSH1 0x4 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x2C92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x3898 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x5A5 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5D1 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x61E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x601 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x66B JUMPI PUSH2 0x66B PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x685 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x70F JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6BA JUMPI PUSH2 0x6BA PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6D4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6FC JUMPI PUSH2 0x6FC PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x69F JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x774 JUMPI PUSH2 0x774 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x78D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x7CF SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7FB SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x848 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x848 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x82B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x8C4 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x8CE PUSH2 0x2FFB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xA56 JUMPI PUSH2 0x8E6 PUSH1 0x6 DUP3 PUSH2 0x2DBC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x914 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x940 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x962 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x970 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP6 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xA42 JUMPI POP DUP8 PUSH5 0xFFFFFFFFFF AND DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xA4E JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x8D3 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0xAC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA7E PUSH2 0x2FFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA76 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP4 SWAP12 SWAP2 SWAP11 POP SWAP1 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xADE JUMPI PUSH2 0xADE PUSH2 0x314E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB17 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB04 PUSH2 0x2FFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAFC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB34 JUMPI PUSH2 0xB34 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB5D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xD2A JUMPI PUSH2 0xB76 PUSH1 0x6 DUP3 PUSH2 0x2DBC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP9 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xBA4 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBD0 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBF2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP9 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xCD2 JUMPI POP DUP11 PUSH5 0xFFFFFFFFFF AND DUP8 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xD22 JUMPI DUP7 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xCEA JUMPI PUSH2 0xCEA PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP6 DUP3 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xD08 JUMPI PUSH2 0xD08 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 ADD SWAP4 POP DUP5 DUP5 GT PUSH2 0xD2A JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xB63 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135D5CDD081899481BDB881D1A1948189BD85C99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH2 0xE07 PUSH1 0x0 PUSH2 0x2E2D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1279 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x39CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE50 JUMPI PUSH2 0xE50 PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x3A5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x1271 JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEA0 JUMPI PUSH2 0xEA0 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0xF04 JUMPI POP PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEDE JUMPI PUSH2 0xEDE PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF89 JUMPI PUSH2 0xF89 PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFC3 JUMPI PUSH2 0xFC3 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xB SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x7 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0xA SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0x1058 SWAP1 DUP3 PUSH2 0x3ABE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1157 SWAP1 DUP5 SWAP1 PUSH2 0x3B93 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x116A SWAP1 POP TIMESTAMP PUSH3 0x15180 PUSH2 0x3B93 JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x117D JUMPI PUSH2 0x117D PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP9 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x11B8 JUMPI PUSH2 0x11B8 PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x11E2 SWAP2 SWAP1 PUSH2 0x3BAB JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x11F5 JUMPI PUSH2 0x11F5 PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D DUP4 PUSH1 0x1 PUSH1 0xB SLOAD PUSH2 0x1251 SWAP2 SWAP1 PUSH2 0x3BCE JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1263 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xE0C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x12C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x1457 JUMPI DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x1375 JUMPI PUSH2 0x1375 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0x13F5 JUMPI PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x13C0 JUMPI PUSH2 0x13C0 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0x13F0 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x1445 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x141D JUMPI PUSH2 0x141D PUSH2 0x391A JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x1445 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x144F DUP2 PUSH2 0x3C1C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1330 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD75 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x14F6 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1522 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x156F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x156F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0x15E5 PUSH2 0x2FFB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x160E SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x163A SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1687 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x165C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1687 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x166A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1837 JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1743 JUMPI PUSH2 0x1743 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x17A7 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1782 JUMPI PUSH2 0x1782 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17E6 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x17C2 JUMPI PUSH2 0x17C2 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1823 JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1802 JUMPI PUSH2 0x1802 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x182F JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1725 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0x18A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1857 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1891 JUMPI PUSH2 0x1891 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x18BD JUMPI PUSH2 0x18BD PUSH2 0x314E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18F0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x18DB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1ADB JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1915 JUMPI PUSH2 0x1915 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP12 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1979 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1954 JUMPI PUSH2 0x1954 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x19B8 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1994 JUMPI PUSH2 0x1994 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x19F5 JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19D4 JUMPI PUSH2 0x19D4 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1AD3 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A0D JUMPI PUSH2 0x1A0D PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1A29 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A55 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AA2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A77 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A85 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AB9 JUMPI PUSH2 0x1AB9 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x1ADB JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x18F7 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135D5CDD081899481BDB881D1A1948189BD85C99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3F PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B49 PUSH2 0x2FFB JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E54 JUMPI PUSH2 0x1B60 PUSH1 0x6 DUP3 PUSH2 0x2DBC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1B8E SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BBA SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BDC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP5 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x1CB9 JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1CCE JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E4C JUMPI PUSH2 0xFFFF DUP6 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC SLOAD PUSH2 0x1CEA SWAP1 TIMESTAMP PUSH2 0x3B93 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP5 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1D16 SWAP1 DUP3 PUSH2 0x3ABE JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x100 DUP1 DUP12 ADD MLOAD PUSH2 0x120 SWAP1 SWAP12 ADD MLOAD PUSH1 0xFF SWAP1 SWAP11 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP8 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP6 SWAP1 SWAP6 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 MUL OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268 SWAP2 PUSH2 0x1E43 SWAP2 DUP9 SWAP2 DUP7 SWAP2 PUSH2 0x3CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B4D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC8 SWAP2 SWAP1 PUSH2 0x3C35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1EF9 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x1F45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1F53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1F7B SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FA7 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1FF4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FC9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1FF4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FD7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP2 AND DUP3 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP3 DIV SWAP1 SWAP5 AND PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP4 ADD MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 AND ISZERO PUSH2 0x2110 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x210E JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x20B9 JUMPI PUSH2 0x20B9 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20D3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x20FB JUMPI PUSH2 0x20FB PUSH2 0x391A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x209E JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2123 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x214F JUMPI PUSH1 0x0 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x20 DUP6 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x247C JUMPI PUSH1 0x0 PUSH1 0x2 DUP6 PUSH1 0xC0 ADD MLOAD PUSH2 0x21D5 SWAP2 SWAP1 PUSH2 0x3D6C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2238 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x225C SWAP2 SWAP1 PUSH2 0x3C35 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x434AA62F PUSH1 0xE1 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x86954C5E SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x434AA62F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH5 0xFFFFFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x86954C5E SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2349 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 POP PUSH2 0x2366 DUP3 DUP3 PUSH2 0x304F JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x240B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP1 PUSH2 0x3DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x244B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2450 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP1 PUSH2 0x3DA0 JUMP JUMPDEST POP POP POP POP PUSH2 0x27F4 JUMP JUMPDEST DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x0 SUB PUSH2 0x25AE JUMPI PUSH2 0xFFFF DUP8 AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 MLOAD DUP6 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x24BE SWAP1 DUP3 PUSH2 0x3ABE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH2 0x100 DUP1 DUP10 ADD MLOAD PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP6 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x0 SWAP3 POP JUMPDEST DUP2 DUP5 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x270E JUMPI PUSH1 0x0 PUSH1 0x2 DUP6 PUSH1 0xC0 ADD MLOAD PUSH2 0x25CC SWAP2 SWAP1 PUSH2 0x3D6C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2630 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2654 SWAP2 SWAP1 PUSH2 0x3C35 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 DUP9 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x434AA62F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH5 0xFFFFFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x86954C5E SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x434AA62F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x86954C5E SWAP2 POP PUSH1 0x44 ADD PUSH2 0x231B JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x2738 DUP3 DUP3 PUSH2 0x304F JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x277F PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x27F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP1 PUSH2 0x3DA0 JUMP JUMPDEST POP POP POP JUMPDEST DUP3 ISZERO PUSH2 0xD7E JUMPI PUSH1 0x0 PUSH2 0x2815 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x287F JUMPI DUP8 PUSH2 0x282E PUSH1 0x6 DUP4 PUSH2 0x2DBC JUMP JUMPDEST SUB PUSH2 0x2877 JUMPI PUSH1 0x0 PUSH2 0x283F PUSH1 0x6 PUSH2 0x2E7F JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x2875 JUMPI PUSH1 0x6 SLOAD DUP2 SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2860 SWAP1 DUP7 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x3DCE JUMP JUMPDEST PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x281A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x28B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x2922 DUP2 PUSH2 0x2E2D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2941 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x294B PUSH2 0x2FFB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2AEA JUMPI PUSH1 0xA PUSH1 0x0 PUSH2 0x2965 PUSH1 0x6 DUP5 PUSH2 0x2DBC JUMP JUMPDEST PUSH1 0x0 SHR DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2992 SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29BE SWAP1 PUSH2 0x38E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A0B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A0B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP4 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x2ABD JUMPI POP DUP5 DUP3 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2AD2 JUMPI POP DUP5 DUP3 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2AE2 JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x294E JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2C8E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B13 SWAP2 SWAP1 PUSH2 0x3E0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B3C JUMPI PUSH2 0x2B3C PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B5D SWAP2 SWAP1 PUSH2 0x3E2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2C86 JUMPI PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B8D JUMPI PUSH2 0x2B8D PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x2BB3 SWAP2 SWAP1 PUSH2 0x3BCE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2BC3 JUMPI PUSH2 0x2BC3 PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 SWAP2 POP PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x2BEA SWAP2 SWAP1 PUSH2 0x3BCE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2BFA JUMPI PUSH2 0x2BFA PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2C1A SWAP2 SWAP1 PUSH2 0x304F JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH2 0x2C3C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3BCE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2C4C JUMPI PUSH2 0x2C4C PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2C6C SWAP2 SWAP1 PUSH2 0x304F JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH2 0x2C8E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2AF8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x2CD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D05 JUMPI PUSH2 0x2D05 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D2E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2DB5 JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x2D64 JUMPI PUSH2 0x2D64 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D90 JUMPI PUSH2 0x2D90 PUSH2 0x391A JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x2DAD DUP2 PUSH2 0x3C1C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D34 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2DDF PUSH2 0x2DCB DUP5 PUSH2 0x2EFE JUMP JUMPDEST DUP6 SLOAD PUSH2 0x2DDA SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x3DCE JUMP JUMPDEST PUSH2 0x2F6C JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x2E12 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E9A DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2EB8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2F68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD75 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x2F9F JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2F68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x305B SWAP1 PUSH2 0x38E0 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x306B JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2922 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2F68 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3085 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30CD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x30B5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1279 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x30F6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x311D PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x30DE JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x318C JUMPI PUSH2 0x318C PUSH2 0x314E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x31C0 JUMPI PUSH2 0x31C0 PUSH2 0x314E JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x31CF DUP3 DUP3 ADD PUSH2 0x3164 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x31E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x3208 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x31EF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3251 DUP7 DUP3 DUP8 ADD PUSH2 0x3194 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x3286 DUP2 DUP5 ADD DUP13 PUSH2 0x30DE JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x32EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x330C DUP3 PUSH2 0x32D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x3329 DUP3 DUP7 ADD DUP3 PUSH2 0x30DE JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3344 PUSH1 0x20 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x336D PUSH1 0x80 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x3384 PUSH1 0xA0 DUP7 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x339F PUSH1 0xC0 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x33B5 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH2 0xFFFF AND SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 DUP8 ADD MSTORE PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3434 JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP6 MSTORE PUSH2 0x3422 DUP7 DUP4 MLOAD PUSH2 0x3313 JUMP JUMPDEST SWAP6 POP SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3406 JUMP JUMPDEST POP POP DUP6 DUP5 SUB DUP2 DUP8 ADD MSTORE DUP7 MLOAD DUP1 DUP6 MSTORE DUP8 DUP3 ADD SWAP5 DUP3 ADD SWAP4 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x346B JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x344F JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x348A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x34A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x34B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x32EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x32EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3522 DUP11 DUP3 DUP12 ADD PUSH2 0x3478 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x353C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x354A PUSH1 0x40 DUP10 ADD PUSH2 0x34C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x3558 PUSH1 0x60 DUP10 ADD PUSH2 0x32D7 JUMP JUMPDEST SWAP3 POP PUSH2 0x3566 PUSH1 0x80 DUP10 ADD PUSH2 0x32D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3574 PUSH1 0xA0 DUP10 ADD PUSH2 0x34D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x330C DUP2 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3600 JUMPI PUSH2 0x3600 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3613 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3164 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x365A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x367C DUP7 DUP3 DUP8 ADD PUSH2 0x35D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3692 PUSH1 0x40 DUP6 ADD PUSH2 0x32D7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x36B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x36DB DUP2 DUP5 ADD DUP15 PUSH2 0x30DE JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x330C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37B0 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x379E DUP6 DUP4 MLOAD PUSH2 0x30DE JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3782 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x37D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x37EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37FA DUP11 DUP3 DUP12 ADD PUSH2 0x3478 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x353C SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x34D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3852 DUP7 DUP3 DUP8 ADD PUSH2 0x3194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x386E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3890 DUP5 DUP3 DUP6 ADD PUSH2 0x35D6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38D4 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x38B4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x38F4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3914 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x395A JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x393E JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x398D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x30DE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x330C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x30DE JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x39EC DUP2 PUSH2 0x38E0 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x3A09 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3A23 JUMPI PUSH2 0x3A51 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x3A51 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3A49 JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x3A2E JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x330C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39DF JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3AB9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3A96 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AB5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3AA2 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3AD7 JUMPI PUSH2 0x3AD7 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3AEB DUP2 PUSH2 0x3AE5 DUP5 SLOAD PUSH2 0x38E0 JUMP JUMPDEST DUP5 PUSH2 0x3A6F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B20 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3B08 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3AB5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3B4F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3B30 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3B6D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3BA6 JUMPI PUSH2 0x3BA6 PUSH2 0x3B7D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x3BC6 JUMPI PUSH2 0x3BC6 PUSH2 0x3B7D JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3BE0 JUMPI PUSH2 0x3BE0 PUSH2 0x3B7D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3C0B PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x30DE JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3C2E JUMPI PUSH2 0x3C2E PUSH2 0x3B7D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x330C DUP2 PUSH2 0x35A4 JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C72 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3C52 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x3C8F JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x3CCA PUSH2 0x1A0 DUP5 ADD DUP6 PUSH2 0x39DF JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x20 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0xFFFF PUSH1 0x70 DUP3 SWAP1 SHR DUP2 AND DUP5 DUP8 ADD MSTORE PUSH2 0x3D4E PUSH2 0x160 DUP8 ADD DUP3 DUP5 PUSH1 0x80 SHR AND PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x90 DUP2 SWAP1 SHR PUSH5 0xFFFFFFFFFF AND PUSH2 0x180 DUP7 ADD MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x3D94 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x3DF0 JUMPI PUSH2 0x3DF0 PUSH2 0x3B7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x3E09 JUMPI PUSH2 0x3E09 PUSH2 0x3B7D JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3E21 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x30B2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x3E39 DUP2 PUSH2 0x38E0 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x3E51 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3E66 JUMPI PUSH2 0x395A JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x395A JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3E8C JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x3E73 JUMP JUMPDEST POP POP POP SWAP6 SWAP1 SWAP2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0x2B 0xBF PUSH15 0x8A35D946932A3DBFE61F9FDF42A008 0xA8 0xD7 DUP16 0x2B 0x4B RETURNDATASIZE BLOCKHASH EXP INVALID ORIGIN ISZERO DUP5 0x26 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185"
    },
    "12": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8D977672"
    },
    "25": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1"
    },
    "29": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD374A217"
    },
    "36": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "GT",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A"
    },
    "40": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "47": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "GT",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4FD"
    },
    "62": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF4739BD9"
    },
    "69": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51D"
    },
    "73": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF713B7ED"
    },
    "80": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53D"
    },
    "84": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFF981099"
    },
    "91": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x55D"
    },
    "95": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "96": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "REVERT",
      "path": "3"
    },
    "100": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD374A217"
    },
    "107": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47D"
    },
    "111": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE95D2347"
    },
    "118": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x49D"
    },
    "122": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF18C51D3"
    },
    "129": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4DD"
    },
    "133": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "REVERT",
      "path": "3"
    },
    "138": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8D977672"
    },
    "145": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "146": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38F"
    },
    "149": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "150": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "151": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "156": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C5"
    },
    "160": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x90B293D8"
    },
    "167": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "168": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ED"
    },
    "171": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x976217CD"
    },
    "178": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x403"
    },
    "182": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "183": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "184": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB2BAD544"
    },
    "189": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "190": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x430"
    },
    "193": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "195": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBECA3A16"
    },
    "200": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45D"
    },
    "204": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "205": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "REVERT",
      "path": "3"
    },
    "209": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "210": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "211": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x61F9E9A8"
    },
    "216": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "GT",
      "path": "3"
    },
    "217": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E"
    },
    "220": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "222": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "227": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "GT",
      "path": "3"
    },
    "228": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x118"
    },
    "231": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "232": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "233": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "238": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "239": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "242": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "243": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "244": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x72E185CE"
    },
    "249": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "250": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32F"
    },
    "253": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "254": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "255": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x826B8EBD"
    },
    "260": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "261": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34F"
    },
    "264": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "265": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "266": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8A6655D6"
    },
    "271": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "272": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36F"
    },
    "275": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "276": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "278": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "279": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "REVERT",
      "path": "3"
    },
    "280": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "281": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "282": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x61F9E9A8"
    },
    "287": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "288": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x294"
    },
    "291": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "292": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "293": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6215597B"
    },
    "298": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "299": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B4"
    },
    "302": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "303": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "304": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x69D03738"
    },
    "309": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "310": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FA"
    },
    "313": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "314": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "316": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "317": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "REVERT",
      "path": "3"
    },
    "318": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "319": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "320": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x13CF08B"
    },
    "325": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "326": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x191"
    },
    "329": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "330": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "331": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9265CE6"
    },
    "336": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "337": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CB"
    },
    "340": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "341": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "342": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF61D8BD"
    },
    "347": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "348": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ED"
    },
    "351": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "352": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "353": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x10190EF1"
    },
    "358": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "359": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21E"
    },
    "362": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "363": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "364": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3B47FED2"
    },
    "369": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "370": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252"
    },
    "373": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "374": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "375": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4B50F16A"
    },
    "380": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "EQ",
      "path": "3"
    },
    "381": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x266"
    },
    "384": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "385": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "387": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "388": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "REVERT",
      "path": "3"
    },
    "389": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "390": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "391": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18C"
    },
    "394": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "395": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "STOP",
      "path": "3"
    },
    "396": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "397": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "399": {
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "400": {
      "first_revert": true,
      "fn": null,
      "offset": [
        771,
        24291
      ],
      "op": "REVERT",
      "path": "3"
    },
    "401": {
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "402": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "403": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "404": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "405": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19D"
    },
    "408": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "409": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "412": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "REVERT",
      "path": "3"
    },
    "413": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "414": {
      "op": "POP"
    },
    "415": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B1"
    },
    "418": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC"
    },
    "421": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "422": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "424": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3099"
    },
    "427": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "3"
    },
    "428": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "429": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58A"
    },
    "432": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "3"
    },
    "433": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "434": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "436": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "437": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "440": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "441": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "442": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "443": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "444": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "445": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "446": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x310A"
    },
    "449": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "3"
    },
    "450": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "451": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "453": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "454": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "455": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "456": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SUB",
      "path": "3"
    },
    "457": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "458": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "RETURN",
      "path": "3"
    },
    "459": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "460": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "461": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "462": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "463": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D7"
    },
    "466": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "467": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "469": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "470": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "REVERT",
      "path": "3"
    },
    "471": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "472": {
      "op": "POP"
    },
    "473": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "476": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E6"
    },
    "479": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "480": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "482": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3213"
    },
    "485": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18078,
        18581
      ],
      "op": "JUMP",
      "path": "3"
    },
    "486": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "487": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x656"
    },
    "490": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18078,
        18581
      ],
      "op": "JUMP",
      "path": "3"
    },
    "491": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "492": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "STOP",
      "path": "3"
    },
    "493": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "494": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "495": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "DUP1",
      "path": "3"
    },
    "496": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "497": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F9"
    },
    "500": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "501": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "503": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "DUP1",
      "path": "3"
    },
    "504": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "REVERT",
      "path": "3"
    },
    "505": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "506": {
      "op": "POP"
    },
    "507": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20E"
    },
    "510": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "513": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "514": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "516": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3099"
    },
    "519": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4944,
        5228
      ],
      "op": "JUMP",
      "path": "3"
    },
    "520": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "521": {
      "op": "POP"
    },
    "522": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        5008,
        5012
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "524": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        5008,
        5012
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "525": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "JUMP",
      "path": "3"
    },
    "526": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "527": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "529": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "530": {
      "op": "SWAP1"
    },
    "531": {
      "op": "ISZERO"
    },
    "532": {
      "op": "ISZERO"
    },
    "533": {
      "op": "DUP2"
    },
    "534": {
      "op": "MSTORE"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "537": {
      "op": "ADD"
    },
    "538": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4944,
        5228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "541": {
      "op": "JUMP"
    },
    "542": {
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "543": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "544": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "545": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "546": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22A"
    },
    "549": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "550": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "552": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "553": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "REVERT",
      "path": "3"
    },
    "554": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "555": {
      "op": "POP"
    },
    "556": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "559": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x239"
    },
    "562": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "563": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "565": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3099"
    },
    "568": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "3"
    },
    "569": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "570": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79C"
    },
    "573": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "3"
    },
    "574": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "575": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "577": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "578": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "581": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "582": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "583": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "584": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "585": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "586": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "587": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "588": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "589": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "590": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3272"
    },
    "593": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "3"
    },
    "594": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "595": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "596": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "DUP1",
      "path": "3"
    },
    "597": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "598": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25E"
    },
    "601": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "602": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "604": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "DUP1",
      "path": "3"
    },
    "605": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "REVERT",
      "path": "3"
    },
    "606": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4542,
        4546
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "610": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20E"
    },
    "613": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4494,
        4823
      ],
      "op": "JUMP",
      "path": "3"
    },
    "614": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "615": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "616": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "DUP1",
      "path": "3"
    },
    "617": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "618": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x272"
    },
    "621": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "622": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "624": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "DUP1",
      "path": "3"
    },
    "625": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "REVERT",
      "path": "3"
    },
    "626": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x286"
    },
    "631": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x281"
    },
    "634": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "635": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "637": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32F1"
    },
    "640": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "641": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "642": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A6"
    },
    "645": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "646": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "647": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "649": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "650": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "653": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "654": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "655": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "656": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33DD"
    },
    "659": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "660": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "661": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "662": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "DUP1",
      "path": "3"
    },
    "663": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "664": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A0"
    },
    "667": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "668": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "670": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "DUP1",
      "path": "3"
    },
    "671": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "REVERT",
      "path": "3"
    },
    "672": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "677": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF"
    },
    "680": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "681": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "683": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34E5"
    },
    "686": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        14388,
        14708
      ],
      "op": "JUMP",
      "path": "3"
    },
    "687": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "688": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3A"
    },
    "691": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        14388,
        14708
      ],
      "op": "JUMP",
      "path": "3"
    },
    "692": {
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "693": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "694": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "3"
    },
    "695": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "696": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C0"
    },
    "699": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "700": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "702": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "3"
    },
    "703": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "REVERT",
      "path": "3"
    },
    "704": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC"
    },
    "709": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CF"
    },
    "712": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "713": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "715": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3582"
    },
    "718": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMP",
      "path": "3"
    },
    "719": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "720": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "722": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "724": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "725": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP2",
      "path": "3"
    },
    "726": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "727": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "729": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "730": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP4",
      "path": "3"
    },
    "731": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "732": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "734": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "3"
    },
    "735": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP5",
      "path": "3"
    },
    "736": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "737": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "738": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "739": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "740": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "741": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP3",
      "path": "3"
    },
    "742": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "743": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "744": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "745": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "746": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP2",
      "path": "3"
    },
    "747": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMP",
      "path": "3"
    },
    "748": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "749": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "751": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "752": {
      "op": "SWAP1"
    },
    "753": {
      "op": "DUP2"
    },
    "754": {
      "op": "MSTORE"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "761": {
      "op": "JUMP"
    },
    "762": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "763": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "764": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "DUP1",
      "path": "3"
    },
    "765": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "766": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x306"
    },
    "769": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "770": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "772": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "DUP1",
      "path": "3"
    },
    "773": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "REVERT",
      "path": "3"
    },
    "774": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "775": {
      "op": "POP"
    },
    "776": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "779": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x315"
    },
    "782": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "783": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "785": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35B9"
    },
    "788": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        10929,
        11030
      ],
      "op": "JUMP",
      "path": "3"
    },
    "789": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "790": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD87"
    },
    "793": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        10929,
        11030
      ],
      "op": "JUMP",
      "path": "3"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x326"
    },
    "801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "13"
    },
    "806": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "13"
    },
    "808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1EB"
    },
    "811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD3"
    },
    "814": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "13"
    },
    "815": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "816": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "817": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "DUP1",
      "path": "3"
    },
    "818": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "819": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33B"
    },
    "822": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "823": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "825": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "DUP1",
      "path": "3"
    },
    "826": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "REVERT",
      "path": "3"
    },
    "827": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "832": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34A"
    },
    "835": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "836": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "838": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3645"
    },
    "841": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16786,
        18072
      ],
      "op": "JUMP",
      "path": "3"
    },
    "842": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "843": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE09"
    },
    "846": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16786,
        18072
      ],
      "op": "JUMP",
      "path": "3"
    },
    "847": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "848": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "849": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "DUP1",
      "path": "3"
    },
    "850": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "851": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35B"
    },
    "854": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "855": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "857": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "DUP1",
      "path": "3"
    },
    "858": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "REVERT",
      "path": "3"
    },
    "859": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "860": {
      "op": "POP"
    },
    "861": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC"
    },
    "864": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36A"
    },
    "867": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "868": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "870": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3099"
    },
    "873": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5923,
        6892
      ],
      "op": "JUMP",
      "path": "3"
    },
    "874": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "875": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x127F"
    },
    "878": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5923,
        6892
      ],
      "op": "JUMP",
      "path": "3"
    },
    "879": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "880": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "881": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "882": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "883": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37B"
    },
    "886": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "887": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "889": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "890": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "REVERT",
      "path": "3"
    },
    "891": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "896": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38A"
    },
    "899": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "900": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "902": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x369B"
    },
    "905": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        12909,
        13573
      ],
      "op": "JUMP",
      "path": "3"
    },
    "906": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "907": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A2"
    },
    "910": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        12909,
        13573
      ],
      "op": "JUMP",
      "path": "3"
    },
    "911": {
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "912": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "913": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "914": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "915": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39B"
    },
    "918": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "919": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "921": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "922": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "REVERT",
      "path": "3"
    },
    "923": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AF"
    },
    "928": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AA"
    },
    "931": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "932": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "934": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3099"
    },
    "937": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "938": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "939": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14DB"
    },
    "942": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "943": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "944": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "946": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "947": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "950": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP11",
      "path": "3"
    },
    "951": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP10",
      "path": "3"
    },
    "952": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "953": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "954": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "955": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "956": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "957": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "958": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "959": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "960": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "961": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36C7"
    },
    "964": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "965": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "966": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "967": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "13"
    },
    "968": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "969": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3D1"
    },
    "972": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "973": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "975": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "13"
    },
    "976": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "13"
    },
    "977": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 0,
      "value": "0x1"
    },
    "981": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "982": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "984": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "994": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "995": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "996": {
      "op": "DUP2"
    },
    "997": {
      "op": "MSTORE"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C2"
    },
    "1004": {
      "op": "JUMP"
    },
    "1005": {
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1006": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1007": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1008": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1009": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F9"
    },
    "1012": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1013": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1015": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1016": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1017": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1018": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "POP",
      "path": "3"
    },
    "1019": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC"
    },
    "1022": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "1024": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1025": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1026": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1027": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1028": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1029": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1030": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1031": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40F"
    },
    "1034": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1035": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1037": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1038": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1039": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x423"
    },
    "1044": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41E"
    },
    "1047": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1048": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1050": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3099"
    },
    "1053": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1054": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1055": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15DD"
    },
    "1058": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1059": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1060": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1062": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1063": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "1066": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1067": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1068": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3748"
    },
    "1071": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1072": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1075": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1076": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43C"
    },
    "1079": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1082": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x450"
    },
    "1089": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44B"
    },
    "1092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1093": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32F1"
    },
    "1098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171F"
    },
    "1103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1104": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1105": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "1111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1112": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x375B"
    },
    "1116": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1117": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1118": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1119": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1120": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1121": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x469"
    },
    "1124": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1125": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1127": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1128": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1129": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "1134": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "1137": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1138": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1140": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37BD"
    },
    "1143": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13619,
        14381
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1144": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1145": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AE5"
    },
    "1148": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13619,
        14381
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1149": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1152": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1153": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x489"
    },
    "1156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "1166": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x498"
    },
    "1169": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1170": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3099"
    },
    "1175": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15652,
        16780
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1176": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B24"
    },
    "1180": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15652,
        16780
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1181": {
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1182": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1183": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1185": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A9"
    },
    "1188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1189": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1191": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1193": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "1197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C3"
    },
    "1201": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SIGNEXTEND",
      "path": "3"
    },
    "1207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1214": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DIV",
      "path": "3"
    },
    "1215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1216": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SIGNEXTEND",
      "path": "3"
    },
    "1217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1219": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1220": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1222": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1223": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1226": {
      "op": "SWAP4"
    },
    "1227": {
      "op": "DUP5"
    },
    "1228": {
      "op": "SIGNEXTEND"
    },
    "1229": {
      "op": "DUP2"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "op": "SWAP2"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "SWAP3"
    },
    "1234": {
      "op": "SIGNEXTEND"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1237": {
      "op": "DUP3"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "op": "MSTORE"
    },
    "1240": {
      "op": "ADD"
    },
    "1241": {
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "1244": {
      "op": "JUMP"
    },
    "1245": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1246": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1247": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1248": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1249": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E9"
    },
    "1252": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1253": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1255": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1256": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1257": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "1262": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F8"
    },
    "1265": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1266": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1268": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x380D"
    },
    "1271": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19287,
        23581
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1272": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1273": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E5B"
    },
    "1276": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19287,
        23581
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1277": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1281": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x509"
    },
    "1284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1290": {
      "op": "POP"
    },
    "1291": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1EB"
    },
    "1294": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x518"
    },
    "1297": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35B9"
    },
    "1303": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1305": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x288A"
    },
    "1308": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1309": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1310": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1311": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1312": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1313": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x529"
    },
    "1316": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1317": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1319": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1320": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1321": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1322": {
      "op": "POP"
    },
    "1323": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20E"
    },
    "1326": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x538"
    },
    "1329": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1330": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1332": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3099"
    },
    "1335": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6939,
        7627
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1336": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1337": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2925"
    },
    "1340": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6939,
        7627
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1341": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1342": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1343": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1344": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1345": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x549"
    },
    "1348": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1349": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1351": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1352": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1353": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1354": {
      "op": "POP"
    },
    "1355": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "1358": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x558"
    },
    "1361": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1362": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1364": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x385C"
    },
    "1367": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11156,
        12377
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1368": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1369": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF5"
    },
    "1372": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11156,
        12377
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1373": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1374": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1375": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1376": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1377": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x569"
    },
    "1380": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1383": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1384": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1385": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57D"
    },
    "1390": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x578"
    },
    "1393": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1394": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1396": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3099"
    },
    "1399": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1400": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1401": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C92"
    },
    "1404": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1405": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1406": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1408": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1409": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "1412": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1413": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1414": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3898"
    },
    "1417": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1418": {
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1419": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "1421": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1423": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1424": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1426": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1427": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1428": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1429": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1431": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1432": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1433": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1434": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1435": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1436": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1437": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A5"
    },
    "1440": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1441": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "1444": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1445": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1446": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1447": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1449": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1450": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1452": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1453": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1454": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "3"
    },
    "1455": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MUL",
      "path": "3"
    },
    "1456": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1458": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1459": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1461": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1462": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1463": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1464": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1465": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1467": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1468": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1469": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1470": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1471": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1472": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1473": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1474": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1475": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1477": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1478": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1479": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1480": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1481": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D1"
    },
    "1484": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1485": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "1488": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1489": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1490": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1491": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1492": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x61E"
    },
    "1495": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1496": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1497": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1499": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "LT",
      "path": "3"
    },
    "1500": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F3"
    },
    "1503": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1504": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1507": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1508": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1509": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1510": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "3"
    },
    "1511": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MUL",
      "path": "3"
    },
    "1512": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1513": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1514": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1515": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1517": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1518": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1519": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x61E"
    },
    "1522": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1523": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1524": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1525": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1526": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1527": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1528": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1530": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1531": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1533": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1535": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1536": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1537": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1538": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1539": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1540": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1541": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1542": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1543": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1545": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1546": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1547": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1549": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1550": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1551": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1552": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "GT",
      "path": "3"
    },
    "1553": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x601"
    },
    "1556": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1557": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1558": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1559": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SUB",
      "path": "3"
    },
    "1560": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1562": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "3"
    },
    "1563": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1564": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1565": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1566": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "op": "POP"
    },
    "1571": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1573": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1574": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1575": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1576": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1578": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1579": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1580": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "3"
    },
    "1581": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1582": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1583": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1584": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "1587": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "3"
    },
    "1588": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1589": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "1595": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1596": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1597": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "3"
    },
    "1598": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH6",
      "path": "3",
      "value": "0x10000000000"
    },
    "1607": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1608": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "3"
    },
    "1609": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1610": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "3"
    },
    "1611": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1618": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "3"
    },
    "1619": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "3"
    },
    "1620": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1621": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1622": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1623": {
      "fn": "Governance.testHashing",
      "offset": [
        18179,
        18201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1625": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18228
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1626": {
      "fn": "Governance.testHashing",
      "offset": [
        18229,
        18230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1628": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1629": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1630": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1631": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "LT",
      "path": "3"
    },
    "1632": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66B"
    },
    "1635": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1636": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66B"
    },
    "1639": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "1642": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18221,
        18231
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1643": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1644": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1646": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "MUL",
      "path": "3"
    },
    "1647": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "ADD",
      "path": "3"
    },
    "1650": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "ADD",
      "path": "3"
    },
    "1651": {
      "fn": "Governance.testHashing",
      "offset": [
        18221,
        18231
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1654": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1655": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1657": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "ADD",
      "path": "3"
    },
    "1658": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x685"
    },
    "1661": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1662": {
      "op": "DUP2"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1666": {
      "op": "ADD"
    },
    "1667": {
      "op": "SWAP1"
    },
    "1668": {
      "op": "JUMP"
    },
    "1669": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1670": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1672": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1673": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1675": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1676": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1677": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "SUB",
      "path": "3"
    },
    "1678": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "SUB",
      "path": "3"
    },
    "1679": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1680": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1681": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1682": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1684": {
      "fn": "Governance.testHashing",
      "offset": [
        18204,
        18232
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1685": {
      "fn": "Governance.testHashing",
      "offset": [
        18179,
        18232
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1686": {
      "fn": "Governance.testHashing",
      "offset": [
        18179,
        18232
      ],
      "op": "POP",
      "path": "3"
    },
    "1687": {
      "branch": 106,
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18253
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1688": {
      "fn": "Governance.testHashing",
      "offset": [
        18242,
        18435
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        18242,
        18435
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x711"
    },
    "1692": {
      "branch": 106,
      "fn": "Governance.testHashing",
      "offset": [
        18242,
        18435
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1693": {
      "fn": "Governance.testHashing",
      "offset": [
        18273,
        18282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1695": {
      "fn": "Governance.testHashing",
      "offset": [
        18269,
        18425
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1696": {
      "fn": "Governance.testHashing",
      "offset": [
        18292,
        18299
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1697": {
      "fn": "Governance.testHashing",
      "offset": [
        18292,
        18306
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1698": {
      "fn": "Governance.testHashing",
      "offset": [
        18288,
        18289
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1699": {
      "fn": "Governance.testHashing",
      "offset": [
        18288,
        18306
      ],
      "op": "LT",
      "path": "3"
    },
    "1700": {
      "fn": "Governance.testHashing",
      "offset": [
        18269,
        18425
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1701": {
      "fn": "Governance.testHashing",
      "offset": [
        18269,
        18425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x70F"
    },
    "1704": {
      "fn": "Governance.testHashing",
      "offset": [
        18269,
        18425
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1705": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18373
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 1
    },
    "1706": {
      "fn": "Governance.testHashing",
      "offset": [
        18374,
        18375
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1707": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1708": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1709": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1710": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "LT",
      "path": "3"
    },
    "1711": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BA"
    },
    "1714": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1715": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BA"
    },
    "1718": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "1721": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18366,
        18376
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1722": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1723": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1725": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "MUL",
      "path": "3"
    },
    "1726": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1728": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "ADD",
      "path": "3"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "ADD",
      "path": "3"
    },
    "1730": {
      "fn": "Governance.testHashing",
      "offset": [
        18366,
        18376
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1731": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1733": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1734": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "ADD",
      "path": "3"
    },
    "1737": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6D4"
    },
    "1740": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1741": {
      "op": "DUP2"
    },
    "1742": {
      "op": "MSTORE"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "SWAP1"
    },
    "1747": {
      "op": "JUMP"
    },
    "1748": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1749": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1751": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1752": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1754": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1755": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1756": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "SUB",
      "path": "3"
    },
    "1757": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "SUB",
      "path": "3"
    },
    "1758": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1759": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1760": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1761": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1763": {
      "fn": "Governance.testHashing",
      "offset": [
        18349,
        18377
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1764": {
      "fn": "Governance.testHashing",
      "offset": [
        18339,
        18378
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1765": {
      "fn": "Governance.testHashing",
      "offset": [
        18339,
        18378
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1766": {
      "fn": "Governance.testHashing",
      "offset": [
        18339,
        18378
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1767": {
      "fn": "Governance.testHashing",
      "offset": [
        18339,
        18378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1769": {
      "fn": "Governance.testHashing",
      "offset": [
        18339,
        18378
      ],
      "op": "ADD",
      "path": "3"
    },
    "1770": {
      "fn": "Governance.testHashing",
      "offset": [
        18339,
        18378
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1771": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18333
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1772": {
      "fn": "Governance.testHashing",
      "offset": [
        18334,
        18335
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1773": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1774": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1775": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1776": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "LT",
      "path": "3"
    },
    "1777": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6FC"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6FC"
    },
    "1784": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18326,
        18336
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1788": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1789": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1791": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1792": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1793": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "MUL",
      "path": "3"
    },
    "1794": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1795": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1796": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1797": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "ADD",
      "path": "3"
    },
    "1798": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18336
      ],
      "op": "ADD",
      "path": "3"
    },
    "1799": {
      "fn": "Governance.testHashing",
      "offset": [
        18326,
        18378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1800": {
      "fn": "Governance.testHashing",
      "offset": [
        18406,
        18409
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x1"
    },
    "1802": {
      "fn": "Governance.testHashing",
      "offset": [
        18406,
        18409
      ],
      "op": "ADD",
      "path": "3"
    },
    "1803": {
      "fn": "Governance.testHashing",
      "offset": [
        18269,
        18425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x69F"
    },
    "1806": {
      "fn": "Governance.testHashing",
      "offset": [
        18269,
        18425
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1807": {
      "fn": "Governance.testHashing",
      "offset": [
        18269,
        18425
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1808": {
      "fn": "Governance.testHashing",
      "offset": [
        18269,
        18425
      ],
      "op": "POP",
      "path": "3"
    },
    "1809": {
      "fn": "Governance.testHashing",
      "offset": [
        18242,
        18435
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1810": {
      "fn": "Governance.testHashing",
      "offset": [
        18444,
        18458
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1812": {
      "fn": "Governance.testHashing",
      "offset": [
        18488,
        18495
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1813": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1815": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1816": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1818": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "ADD",
      "path": "3"
    },
    "1819": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x724"
    },
    "1822": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1823": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1824": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3930"
    },
    "1827": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18471,
        18496
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1828": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1829": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1831": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1832": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1834": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1835": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "SUB",
      "path": "3"
    },
    "1837": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "SUB",
      "path": "3"
    },
    "1838": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1839": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1840": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1841": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1843": {
      "fn": "Governance.testHashing",
      "offset": [
        18471,
        18496
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1844": {
      "fn": "Governance.testHashing",
      "offset": [
        18461,
        18497
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1845": {
      "fn": "Governance.testHashing",
      "offset": [
        18461,
        18497
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1846": {
      "fn": "Governance.testHashing",
      "offset": [
        18461,
        18497
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1847": {
      "fn": "Governance.testHashing",
      "offset": [
        18461,
        18497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1849": {
      "fn": "Governance.testHashing",
      "offset": [
        18461,
        18497
      ],
      "op": "ADD",
      "path": "3"
    },
    "1850": {
      "fn": "Governance.testHashing",
      "offset": [
        18461,
        18497
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1851": {
      "fn": "Governance.testHashing",
      "offset": [
        18444,
        18497
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        18444,
        18497
      ],
      "op": "POP",
      "path": "3"
    },
    "1853": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1886": {
      "fn": "Governance.testHashing",
      "offset": [
        18524,
        18530
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        18540,
        18550
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1888": {
      "fn": "Governance.testHashing",
      "offset": [
        18532,
        18538
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1889": {
      "fn": "Governance.testHashing",
      "offset": [
        18532,
        18550
      ],
      "op": "EQ",
      "path": "3"
    },
    "1890": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18559
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1891": {
      "fn": "Governance.testHashing",
      "offset": [
        18560,
        18561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1893": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1894": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1895": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1896": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "LT",
      "path": "3"
    },
    "1897": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x774"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1901": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x774"
    },
    "1904": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "1907": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18552,
        18562
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1908": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1909": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1911": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "MUL",
      "path": "3"
    },
    "1912": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1914": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "ADD",
      "path": "3"
    },
    "1915": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "ADD",
      "path": "3"
    },
    "1916": {
      "fn": "Governance.testHashing",
      "offset": [
        18552,
        18562
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1917": {
      "fn": "Governance.testHashing",
      "offset": [
        18564,
        18573
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1918": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1920": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1921": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78D"
    },
    "1924": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1925": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1926": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1927": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1928": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1929": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3966"
    },
    "1932": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18512,
        18574
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1933": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1934": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1936": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1937": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1938": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1939": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "SUB",
      "path": "3"
    },
    "1940": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1941": {
      "fn": "Governance.testHashing",
      "offset": [
        18512,
        18574
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1942": {
      "fn": "Governance.testHashing",
      "offset": [
        18169,
        18581
      ],
      "op": "POP",
      "path": "3"
    },
    "1943": {
      "fn": "Governance.testHashing",
      "offset": [
        18169,
        18581
      ],
      "op": "POP",
      "path": "3"
    },
    "1944": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "POP",
      "path": "3"
    },
    "1945": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "POP",
      "path": "3"
    },
    "1946": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18581
      ],
      "op": "POP",
      "path": "3"
    },
    "1947": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        18078,
        18581
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1948": {
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1949": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1951": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1952": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1953": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1954": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1955": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "LT",
      "path": "3"
    },
    "1956": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7AC"
    },
    "1959": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1960": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1962": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1963": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1964": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1965": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1966": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1968": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1969": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1971": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1973": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1974": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1975": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1977": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "3"
    },
    "1978": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "1979": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1981": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1982": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "3"
    },
    "1983": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1984": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "3"
    },
    "1985": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1986": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1988": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "1989": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1990": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1991": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7CF"
    },
    "1994": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1995": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "1998": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1999": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2000": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2001": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2003": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2004": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2006": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2007": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2008": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "3"
    },
    "2009": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "3"
    },
    "2010": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2012": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2013": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2015": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2016": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2017": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2018": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2019": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2021": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2022": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2023": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2024": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2025": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2026": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2027": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2028": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2029": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2031": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2032": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2033": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2034": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2035": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7FB"
    },
    "2038": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2039": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "2042": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2043": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2044": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2045": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2046": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x848"
    },
    "2049": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2050": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2051": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2053": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "LT",
      "path": "3"
    },
    "2054": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x81D"
    },
    "2057": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2058": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2061": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2062": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2063": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2064": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "3"
    },
    "2065": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "3"
    },
    "2066": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2067": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2068": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2069": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2071": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2072": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2073": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x848"
    },
    "2076": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2077": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2078": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2079": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2080": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2081": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2082": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2084": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2085": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2087": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2089": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2090": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2091": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2092": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2093": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2094": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2095": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2096": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2097": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2099": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2100": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2101": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2103": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2104": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2105": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2106": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "GT",
      "path": "3"
    },
    "2107": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x82B"
    },
    "2110": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2111": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2112": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2113": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SUB",
      "path": "3"
    },
    "2114": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2116": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "3"
    },
    "2117": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2118": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2119": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2120": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2121": {
      "op": "POP"
    },
    "2122": {
      "op": "POP"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2126": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2127": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2128": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "3"
    },
    "2129": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2130": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2131": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2132": {
      "op": "POP"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2136": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2137": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2138": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "3"
    },
    "2139": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2140": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "2146": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2149": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2150": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "3"
    },
    "2151": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2152": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "3"
    },
    "2153": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2154": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH7",
      "path": "3",
      "value": "0x1000000000000"
    },
    "2162": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2163": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "3"
    },
    "2164": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "3"
    },
    "2165": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2166": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2176": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "3"
    },
    "2177": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "3"
    },
    "2178": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2183": {
      "op": "SHL"
    },
    "2184": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2185": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "3"
    },
    "2186": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2187": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "3"
    },
    "2188": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2193": {
      "op": "SHL"
    },
    "2194": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2195": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "3"
    },
    "2196": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2197": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2198": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "3"
    },
    "2199": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2200": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2207": {
      "op": "SHL"
    },
    "2208": {
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2209": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2210": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "3"
    },
    "2211": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "3"
    },
    "2212": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2213": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2214": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2215": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7703,
        7716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2217": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7718,
        7734
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2218": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2220": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7776,
        7825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C4"
    },
    "2223": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "2225": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 4
    },
    "2226": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "2228": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2229": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2230": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2235": {
      "op": "SHL"
    },
    "2236": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2237": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2238": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "2239": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2240": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2241": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "2242": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2243": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2244": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7776,
        7825
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2245": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2246": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7825
      ],
      "op": "POP",
      "path": "3"
    },
    "2247": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7835,
        7853
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8CE"
    },
    "2250": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7835,
        7853
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FFB"
    },
    "2253": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7835,
        7853
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2254": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7835,
        7853
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2255": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7863,
        7877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2257": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7863,
        7877
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2258": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7863,
        7877
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2259": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7913,
        8265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2260": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7935,
        7954
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2261": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7931,
        7932
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2262": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7931,
        7954
      ],
      "op": "LT",
      "path": "3"
    },
    "2263": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7913,
        8265
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2264": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7913,
        8265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA56"
    },
    "2267": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7913,
        8265
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2268": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7988,
        8036
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x8E6"
    },
    "2271": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8008,
        8032
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "2273": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8034,
        8035
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2274": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7988,
        8007
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBC"
    },
    "2277": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7988,
        8036
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2278": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7988,
        8036
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2279": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7980,
        8037
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2281": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "2282": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2283": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2284": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2286": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2288": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2289": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2291": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2292": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2293": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2294": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2295": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2296": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2297": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "2300": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2301": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2302": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2303": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2304": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2305": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2306": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2307": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7980,
        8037
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2308": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7980,
        8037
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2309": {
      "op": "POP"
    },
    "2310": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2311": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2312": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2313": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2314": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2315": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8060,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2316": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x914"
    },
    "2319": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2320": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "2323": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2324": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2325": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2326": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2328": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2329": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2331": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2332": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2333": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DIV",
      "path": "3"
    },
    "2334": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MUL",
      "path": "3"
    },
    "2335": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2337": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2338": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2340": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2341": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2342": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2343": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2344": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2346": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2347": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2348": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2349": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2350": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2351": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2352": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2353": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2354": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2356": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2357": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2358": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2359": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2360": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x940"
    },
    "2363": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2364": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "2367": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2368": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2369": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2370": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2371": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98D"
    },
    "2374": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2375": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2376": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2378": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "LT",
      "path": "3"
    },
    "2379": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x962"
    },
    "2382": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2383": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2386": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2387": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2388": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2389": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DIV",
      "path": "3"
    },
    "2390": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MUL",
      "path": "3"
    },
    "2391": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2392": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2393": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2394": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2396": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2397": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2398": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98D"
    },
    "2401": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2402": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2403": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2404": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2405": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2406": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2407": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2409": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2410": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2412": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2414": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2415": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2416": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2417": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2418": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2419": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2420": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2421": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2422": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2424": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2425": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2426": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2428": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2429": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2430": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2431": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "GT",
      "path": "3"
    },
    "2432": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x970"
    },
    "2435": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2436": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2437": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2438": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SUB",
      "path": "3"
    },
    "2439": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2441": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "AND",
      "path": "3"
    },
    "2442": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2443": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2444": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2445": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "op": "POP"
    },
    "2448": {
      "op": "POP"
    },
    "2449": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2450": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2451": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2452": {
      "op": "POP"
    },
    "2453": {
      "op": "POP"
    },
    "2454": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2456": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2457": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2458": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2459": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "2465": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2466": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2467": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "AND",
      "path": "3"
    },
    "2468": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2470": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2471": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2472": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2473": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2475": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2476": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2477": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2478": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2480": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2481": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2482": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2483": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2485": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2486": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2487": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2488": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2490": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2491": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2492": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2495": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2496": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2497": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2498": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2499": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2501": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2502": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "AND",
      "path": "3"
    },
    "2503": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2505": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2506": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2507": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2511": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2512": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2513": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DIV",
      "path": "3"
    },
    "2514": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "2518": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "AND",
      "path": "3"
    },
    "2519": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "2521": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2522": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2523": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DIV",
      "path": "3"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "op": "SUB"
    },
    "2539": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "AND",
      "path": "3"
    },
    "2540": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "2542": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2543": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2544": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2549": {
      "op": "SHL"
    },
    "2550": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2551": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DIV",
      "path": "3"
    },
    "2552": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "2555": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2556": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2557": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "AND",
      "path": "3"
    },
    "2558": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "2560": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2561": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2562": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2567": {
      "op": "SHL"
    },
    "2568": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2569": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DIV",
      "path": "3"
    },
    "2570": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "AND",
      "path": "3"
    },
    "2571": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2572": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2573": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2574": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2581": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DIV",
      "path": "3"
    },
    "2582": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2583": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "AND",
      "path": "3"
    },
    "2584": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "2587": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2588": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2589": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "ADD",
      "path": "3"
    },
    "2590": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2591": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8127
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2592": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8127
      ],
      "op": "ADD",
      "path": "3"
    },
    "2593": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8127
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2594": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8127
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2595": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8127
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8145
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2598": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8145
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2599": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8145
      ],
      "op": "AND",
      "path": "3"
    },
    "2600": {
      "branch": 107,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8145
      ],
      "op": "GT",
      "path": "3"
    },
    "2601": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2602": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2603": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA42"
    },
    "2606": {
      "branch": 107,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8175
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2607": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8175
      ],
      "op": "POP",
      "path": "3"
    },
    "2608": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8169,
        8175
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2609": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8149,
        8175
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "2615": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8149,
        8175
      ],
      "op": "AND",
      "path": "3"
    },
    "2616": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8149,
        8155
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2617": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8149,
        8166
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "2619": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8149,
        8166
      ],
      "op": "ADD",
      "path": "3"
    },
    "2620": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8149,
        8166
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2621": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8149,
        8175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "2624": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8149,
        8175
      ],
      "op": "AND",
      "path": "3"
    },
    "2625": {
      "branch": 108,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8149,
        8175
      ],
      "op": "EQ",
      "path": "3"
    },
    "2626": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8091,
        8175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2627": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8087,
        8227
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8087,
        8227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4E"
    },
    "2631": {
      "branch": 108,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8087,
        8227
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2632": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8204,
        8211
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 7
    },
    "2633": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8204,
        8211
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2635": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8204,
        8211
      ],
      "op": "ADD",
      "path": "3"
    },
    "2636": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8204,
        8211
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2637": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8204,
        8211
      ],
      "op": "POP",
      "path": "3"
    },
    "2638": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8087,
        8227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2639": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8250,
        8253
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x1"
    },
    "2641": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8250,
        8253
      ],
      "op": "ADD",
      "path": "3"
    },
    "2642": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7913,
        8265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D3"
    },
    "2645": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7913,
        8265
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2646": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7913,
        8265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2647": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7913,
        8265
      ],
      "op": "POP",
      "path": "3"
    },
    "2648": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8322,
        8327
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2649": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8329,
        8330
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2651": {
      "branch": 109,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8322,
        8330
      ],
      "op": "SUB",
      "path": "3"
    },
    "2652": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8318,
        8567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAC3"
    },
    "2655": {
      "branch": 109,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8318,
        8567
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2656": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2658": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2659": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2660": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8381,
        8382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2662": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2663": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2664": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2665": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2666": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2667": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "ADD",
      "path": "3"
    },
    "2668": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2669": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2670": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2671": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8346,
        8368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2673": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8346,
        8368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2674": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2675": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2677": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "ADD",
      "path": "3"
    },
    "2678": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2679": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7E"
    },
    "2682": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FFB"
    },
    "2685": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8370,
        8383
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2686": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2687": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2688": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2689": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2691": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "ADD",
      "path": "3"
    },
    "2692": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2693": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2695": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2696": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "SUB",
      "path": "3"
    },
    "2697": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2698": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2699": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA76"
    },
    "2702": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8383
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2703": {
      "op": "POP"
    },
    "2704": {
      "op": "POP"
    },
    "2705": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2707": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2708": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2709": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8442,
        8443
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2711": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2712": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2713": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2714": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2715": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2716": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "ADD",
      "path": "3"
    },
    "2717": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2718": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2719": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2720": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8346,
        8383
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2721": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8346,
        8383
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2722": {
      "op": "POP"
    },
    "2723": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8397,
        8426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2725": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8397,
        8426
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2726": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2727": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2729": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2730": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2731": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "ADD",
      "path": "3"
    },
    "2732": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2733": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2734": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2735": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2736": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8428,
        8444
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "2737": {
      "op": "POP"
    },
    "2738": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8533,
        8541
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 9
    },
    "2739": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8533,
        8541
      ],
      "op": "SWAP12",
      "path": "3"
    },
    "2740": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8533,
        8541
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2741": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8533,
        8541
      ],
      "op": "SWAP11",
      "path": "3"
    },
    "2742": {
      "op": "POP"
    },
    "2743": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8533,
        8541
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2744": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8533,
        8541
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "2745": {
      "op": "POP"
    },
    "2746": {
      "op": "POP"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "op": "POP"
    },
    "2749": {
      "op": "POP"
    },
    "2750": {
      "op": "POP"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2755": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8318,
        8567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2756": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8577,
        8592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2758": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8606,
        8627
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2759": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8641,
        8646
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2766": {
      "op": "SHL"
    },
    "2767": {
      "op": "SUB"
    },
    "2768": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2769": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "GT",
      "path": "3"
    },
    "2770": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2771": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADE"
    },
    "2774": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2775": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADE"
    },
    "2778": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x314E"
    },
    "2781": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8630,
        8647
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2782": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2783": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2785": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2786": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2787": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2788": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2789": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2790": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2791": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2793": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "MUL",
      "path": "3"
    },
    "2794": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2796": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "ADD",
      "path": "3"
    },
    "2797": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2798": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "ADD",
      "path": "3"
    },
    "2799": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2801": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2802": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2803": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2804": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB17"
    },
    "2807": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2808": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2809": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2811": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "ADD",
      "path": "3"
    },
    "2812": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2813": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB04"
    },
    "2816": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FFB"
    },
    "2819": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8630,
        8647
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2820": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2821": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2822": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2823": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2825": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "ADD",
      "path": "3"
    },
    "2826": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2827": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2829": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2830": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "SUB",
      "path": "3"
    },
    "2831": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2832": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2833": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFC"
    },
    "2836": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2837": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2838": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "POP",
      "path": "3"
    },
    "2839": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2840": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8630,
        8647
      ],
      "op": "POP",
      "path": "3"
    },
    "2841": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8606,
        8647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2842": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8606,
        8647
      ],
      "op": "POP",
      "path": "3"
    },
    "2843": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8657,
        8683
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2845": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8700,
        8705
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "op": "SUB"
    },
    "2854": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2855": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "GT",
      "path": "3"
    },
    "2856": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2857": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB34"
    },
    "2860": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2861": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB34"
    },
    "2864": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x314E"
    },
    "2867": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8686,
        8706
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2868": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2869": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2871": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2872": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2873": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2874": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2875": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2876": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2877": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2879": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "MUL",
      "path": "3"
    },
    "2880": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2882": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "ADD",
      "path": "3"
    },
    "2883": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2884": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "ADD",
      "path": "3"
    },
    "2885": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2887": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2888": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2889": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2890": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5D"
    },
    "2893": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2894": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2895": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2897": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "ADD",
      "path": "3"
    },
    "2898": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2900": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2901": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "MUL",
      "path": "3"
    },
    "2902": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2903": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2904": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2905": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "2906": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "ADD",
      "path": "3"
    },
    "2907": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2910": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8686,
        8706
      ],
      "op": "POP",
      "path": "3"
    },
    "2911": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8657,
        8706
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2912": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8657,
        8706
      ],
      "op": "POP",
      "path": "3"
    },
    "2913": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8720,
        8729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2915": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8716,
        9200
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2916": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8738,
        8757
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2917": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8734,
        8735
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2918": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8734,
        8757
      ],
      "op": "LT",
      "path": "3"
    },
    "2919": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8716,
        9200
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2920": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8716,
        9200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2A"
    },
    "2923": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8716,
        9200
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2924": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8791,
        8839
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0xB76"
    },
    "2927": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8811,
        8835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "2929": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8837,
        8838
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2930": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8791,
        8810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBC"
    },
    "2933": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8791,
        8839
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2934": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8791,
        8839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2935": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8783,
        8840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2937": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 11
    },
    "2938": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2939": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2940": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8868
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2942": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2944": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2945": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2947": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2948": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2949": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2950": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2951": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2952": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2953": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "2956": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2957": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "2958": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2959": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2960": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2961": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2962": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2963": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8783,
        8840
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2964": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8783,
        8840
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "2965": {
      "op": "POP"
    },
    "2966": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2967": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2968": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2969": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2970": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2971": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2972": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA4"
    },
    "2975": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2976": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "2979": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2980": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2981": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2982": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2984": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "2985": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2987": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2988": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2989": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DIV",
      "path": "3"
    },
    "2990": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MUL",
      "path": "3"
    },
    "2991": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2993": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "2994": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2996": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2997": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2998": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2999": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3000": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3002": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3003": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3004": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3005": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3006": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3007": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3008": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3009": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3010": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3012": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3013": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3014": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3015": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3016": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "3019": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3020": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "3023": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3024": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3025": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3026": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3027": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1D"
    },
    "3030": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3031": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3032": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3034": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "LT",
      "path": "3"
    },
    "3035": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "3038": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3039": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3042": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3043": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3044": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3045": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DIV",
      "path": "3"
    },
    "3046": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MUL",
      "path": "3"
    },
    "3047": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3048": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3049": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3050": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3052": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3053": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3054": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1D"
    },
    "3057": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3058": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3059": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3060": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3061": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3062": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3063": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3065": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3066": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3068": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3070": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3071": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3072": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3073": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3074": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3075": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3076": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3077": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3078": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3080": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3081": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3082": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3084": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3085": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3086": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3087": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "GT",
      "path": "3"
    },
    "3088": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC00"
    },
    "3091": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3092": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3093": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3094": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SUB",
      "path": "3"
    },
    "3095": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3097": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "AND",
      "path": "3"
    },
    "3098": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3099": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3100": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3101": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3102": {
      "op": "POP"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "op": "POP"
    },
    "3105": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3106": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3107": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3108": {
      "op": "POP"
    },
    "3109": {
      "op": "POP"
    },
    "3110": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3112": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3113": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3114": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3115": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "3121": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3122": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3123": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "AND",
      "path": "3"
    },
    "3124": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3126": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3127": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3128": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3129": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3131": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3132": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3133": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3134": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3136": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3137": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3138": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3139": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3141": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3142": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3143": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3144": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3146": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3147": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3148": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3149": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3151": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3152": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3153": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3154": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3155": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "3157": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3158": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "AND",
      "path": "3"
    },
    "3159": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "3161": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3162": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3163": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3164": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3167": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3168": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3169": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DIV",
      "path": "3"
    },
    "3170": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "3174": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "AND",
      "path": "3"
    },
    "3175": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "3177": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3178": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3179": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3186": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DIV",
      "path": "3"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3193": {
      "op": "SHL"
    },
    "3194": {
      "op": "SUB"
    },
    "3195": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "AND",
      "path": "3"
    },
    "3196": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "3198": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3199": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3200": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3205": {
      "op": "SHL"
    },
    "3206": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3207": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DIV",
      "path": "3"
    },
    "3208": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "3211": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3212": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3213": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "AND",
      "path": "3"
    },
    "3214": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3216": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3217": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3218": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3225": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DIV",
      "path": "3"
    },
    "3226": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "AND",
      "path": "3"
    },
    "3227": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3228": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3229": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3230": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3235": {
      "op": "SHL"
    },
    "3236": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3237": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DIV",
      "path": "3"
    },
    "3238": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3239": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "AND",
      "path": "3"
    },
    "3240": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "3243": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3244": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3245": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3246": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8854,
        8876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3247": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8930
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3248": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8930
      ],
      "op": "ADD",
      "path": "3"
    },
    "3249": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8930
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3250": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8930
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3251": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8930
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "3252": {
      "op": "POP"
    },
    "3253": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8933,
        8948
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3254": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8948
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3255": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8948
      ],
      "op": "AND",
      "path": "3"
    },
    "3256": {
      "branch": 110,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8948
      ],
      "op": "GT",
      "path": "3"
    },
    "3257": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8978
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3258": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8978
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3259": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8978
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCD2"
    },
    "3262": {
      "branch": 110,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8978
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3263": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8978
      ],
      "op": "POP",
      "path": "3"
    },
    "3264": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8972,
        8978
      ],
      "op": "DUP11",
      "path": "3"
    },
    "3265": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8952,
        8978
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "3271": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8952,
        8978
      ],
      "op": "AND",
      "path": "3"
    },
    "3272": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8952,
        8958
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3273": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8952,
        8969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3275": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8952,
        8969
      ],
      "op": "ADD",
      "path": "3"
    },
    "3276": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8952,
        8969
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3277": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8952,
        8978
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "3280": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8952,
        8978
      ],
      "op": "AND",
      "path": "3"
    },
    "3281": {
      "branch": 111,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8952,
        8978
      ],
      "op": "EQ",
      "path": "3"
    },
    "3282": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8894,
        8978
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3283": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8890,
        9162
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3284": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8890,
        9162
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD22"
    },
    "3287": {
      "branch": 111,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8890,
        9162
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3288": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9016,
        9022
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 12
    },
    "3289": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9004
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3290": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9005,
        9012
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3291": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3292": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3293": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3294": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "LT",
      "path": "3"
    },
    "3295": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCEA"
    },
    "3298": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3299": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCEA"
    },
    "3302": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "3305": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8997,
        9013
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3306": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3307": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3309": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "MUL",
      "path": "3"
    },
    "3310": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3312": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "ADD",
      "path": "3"
    },
    "3313": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9013
      ],
      "op": "ADD",
      "path": "3"
    },
    "3314": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9022
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3315": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9022
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3316": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9022
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3317": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8997,
        9022
      ],
      "op": "POP",
      "path": "3"
    },
    "3318": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9061,
        9067
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 13
    },
    "3319": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3320": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9050,
        9057
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3321": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3322": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3323": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3324": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "LT",
      "path": "3"
    },
    "3325": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD08"
    },
    "3328": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3329": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD08"
    },
    "3332": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "3335": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        9040,
        9058
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3336": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3337": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3339": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "MUL",
      "path": "3"
    },
    "3340": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3342": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "ADD",
      "path": "3"
    },
    "3343": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9058
      ],
      "op": "ADD",
      "path": "3"
    },
    "3344": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9067
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3345": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9067
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3346": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9067
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3347": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9067
      ],
      "op": "POP",
      "path": "3"
    },
    "3348": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9040,
        9067
      ],
      "op": "POP",
      "path": "3"
    },
    "3349": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9095,
        9104
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 14
    },
    "3350": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9095,
        9104
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3352": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9095,
        9104
      ],
      "op": "ADD",
      "path": "3"
    },
    "3353": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9095,
        9104
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3354": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9095,
        9104
      ],
      "op": "POP",
      "path": "3"
    },
    "3355": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9134,
        9139
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3356": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9126,
        9133
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3357": {
      "branch": 112,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9126,
        9139
      ],
      "op": "GT",
      "path": "3"
    },
    "3358": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9141,
        9146
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 15,
      "value": "0xD2A"
    },
    "3361": {
      "branch": 112,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9123,
        9148
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3362": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9123,
        9148
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3363": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9185,
        9188
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x1"
    },
    "3365": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9185,
        9188
      ],
      "op": "ADD",
      "path": "3"
    },
    "3366": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8716,
        9200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB63"
    },
    "3369": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8716,
        9200
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3370": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8716,
        9200
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3371": {
      "op": "POP"
    },
    "3372": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9217,
        9224
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 17
    },
    "3373": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9217,
        9224
      ],
      "op": "SWAP10",
      "path": "3"
    },
    "3374": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9226,
        9235
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3375": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        9226,
        9235
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7634,
        9243
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "op": "POP"
    },
    "3382": {
      "op": "POP"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "op": "POP"
    },
    "3385": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        7634,
        9243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3386": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3387": {
      "offset": [
        24147,
        24197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3389": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3390": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3396": {
      "op": "SHL"
    },
    "3397": {
      "offset": [
        24147,
        24197
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3398": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3401": {
      "offset": [
        24147,
        24197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3403": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3404": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "ADD",
      "path": "3"
    },
    "3405": {
      "op": "MSTORE"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3410": {
      "op": "DUP3"
    },
    "3411": {
      "op": "ADD"
    },
    "3412": {
      "op": "MSTORE"
    },
    "3413": {
      "op": "PUSH20",
      "value": "0x135D5CDD081899481BDB881D1A1948189BD85C99"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "3436": {
      "op": "SHL"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3444": {
      "op": "ADD"
    },
    "3445": {
      "offset": [
        24147,
        24197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3446": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3448": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3449": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3450": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3451": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "SUB",
      "path": "3"
    },
    "3452": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3453": {
      "fn": "Governance.createTaskType",
      "offset": [
        24147,
        24197
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "3454": {
      "fn": "Governance.createTaskType",
      "offset": [
        14595,
        14701
      ],
      "op": "JUMPDEST",
      "path": "3",
      "statement": 18
    },
    "3455": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "POP",
      "path": "3"
    },
    "3456": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "POP",
      "path": "3"
    },
    "3457": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "POP",
      "path": "3"
    },
    "3458": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "POP",
      "path": "3"
    },
    "3459": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "POP",
      "path": "3"
    },
    "3460": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "POP",
      "path": "3"
    },
    "3461": {
      "fn": "Governance.createTaskType",
      "offset": [
        14388,
        14708
      ],
      "op": "POP",
      "path": "3"
    },
    "3462": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        14388,
        14708
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3463": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10929,
        11030
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3464": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3466": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3473": {
      "op": "SHL"
    },
    "3474": {
      "op": "SUB"
    },
    "3475": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "3476": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 19
    },
    "3477": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "13"
    },
    "3478": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDB1"
    },
    "3481": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3482": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3484": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3491": {
      "op": "SHL"
    },
    "3492": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3493": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3494": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3496": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "13"
    },
    "3497": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD75"
    },
    "3500": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3501": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3997"
    },
    "3504": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3505": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3506": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11006
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 20,
      "value": "0x2"
    },
    "3508": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3509": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3516": {
      "op": "SHL"
    },
    "3517": {
      "op": "SUB"
    },
    "3518": {
      "op": "NOT"
    },
    "3519": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "AND",
      "path": "3"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3526": {
      "op": "SHL"
    },
    "3527": {
      "op": "SUB"
    },
    "3528": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3529": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3530": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3531": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "AND",
      "path": "3"
    },
    "3532": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3533": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3534": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3535": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "OR",
      "path": "3"
    },
    "3536": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3537": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10996,
        11023
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3538": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        10929,
        11030
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3539": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3540": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3542": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3549": {
      "op": "SHL"
    },
    "3550": {
      "op": "SUB"
    },
    "3551": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "3552": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3553": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "13"
    },
    "3554": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDFD"
    },
    "3557": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3558": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3560": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3567": {
      "op": "SHL"
    },
    "3568": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3569": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3570": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3572": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "13"
    },
    "3573": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD75"
    },
    "3576": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3577": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3997"
    },
    "3580": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3581": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3582": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 21,
      "value": "0xE07"
    },
    "3585": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E2D"
    },
    "3590": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3591": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3592": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3593": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3594": {
      "fn": "Governance.completeTask",
      "offset": [
        16970,
        16979
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3596": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        18046
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3597": {
      "fn": "Governance.completeTask",
      "offset": [
        16987,
        16996
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "3599": {
      "fn": "Governance.completeTask",
      "offset": [
        16987,
        17003
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3600": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        17003
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3601": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        17003
      ],
      "op": "LT",
      "path": "3"
    },
    "3602": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        18046
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3603": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        18046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1279"
    },
    "3606": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        18046
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3607": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17100
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3608": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3610": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3611": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3613": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "ADD",
      "path": "3"
    },
    "3614": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE27"
    },
    "3617": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3618": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3619": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39CC"
    },
    "3622": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17080,
        17101
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3623": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3624": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3626": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3627": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3629": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3630": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3631": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "SUB",
      "path": "3"
    },
    "3632": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "SUB",
      "path": "3"
    },
    "3633": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3634": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3635": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3636": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3638": {
      "fn": "Governance.completeTask",
      "offset": [
        17080,
        17101
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3639": {
      "fn": "Governance.completeTask",
      "offset": [
        17070,
        17102
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3640": {
      "fn": "Governance.completeTask",
      "offset": [
        17070,
        17102
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3641": {
      "fn": "Governance.completeTask",
      "offset": [
        17070,
        17102
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3642": {
      "fn": "Governance.completeTask",
      "offset": [
        17070,
        17102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3644": {
      "fn": "Governance.completeTask",
      "offset": [
        17070,
        17102
      ],
      "op": "ADD",
      "path": "3"
    },
    "3645": {
      "fn": "Governance.completeTask",
      "offset": [
        17070,
        17102
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3646": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17052
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "3648": {
      "fn": "Governance.completeTask",
      "offset": [
        17053,
        17054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3649": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3650": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3651": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3652": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "LT",
      "path": "3"
    },
    "3653": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE50"
    },
    "3656": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3657": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE50"
    },
    "3660": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "3663": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17043,
        17055
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3664": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3665": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3666": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3668": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3669": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3671": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3673": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3674": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3675": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3677": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "MUL",
      "path": "3"
    },
    "3678": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17055
      ],
      "op": "ADD",
      "path": "3"
    },
    "3679": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3681": {
      "fn": "Governance.completeTask",
      "offset": [
        17043,
        17064
      ],
      "op": "ADD",
      "path": "3"
    },
    "3682": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3684": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3685": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3687": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "ADD",
      "path": "3"
    },
    "3688": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE71"
    },
    "3691": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3692": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3693": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A5C"
    },
    "3696": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17032,
        17065
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3697": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3698": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3700": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3701": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3703": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3704": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3705": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "SUB",
      "path": "3"
    },
    "3706": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "SUB",
      "path": "3"
    },
    "3707": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3708": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3709": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3710": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3712": {
      "fn": "Governance.completeTask",
      "offset": [
        17032,
        17065
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3713": {
      "fn": "Governance.completeTask",
      "offset": [
        17022,
        17066
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3714": {
      "fn": "Governance.completeTask",
      "offset": [
        17022,
        17066
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3715": {
      "fn": "Governance.completeTask",
      "offset": [
        17022,
        17066
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3716": {
      "fn": "Governance.completeTask",
      "offset": [
        17022,
        17066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3718": {
      "fn": "Governance.completeTask",
      "offset": [
        17022,
        17066
      ],
      "op": "ADD",
      "path": "3"
    },
    "3719": {
      "fn": "Governance.completeTask",
      "offset": [
        17022,
        17066
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3720": {
      "branch": 113,
      "fn": "Governance.completeTask",
      "offset": [
        17022,
        17102
      ],
      "op": "SUB",
      "path": "3"
    },
    "3721": {
      "fn": "Governance.completeTask",
      "offset": [
        17019,
        18008
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1271"
    },
    "3724": {
      "branch": 113,
      "fn": "Governance.completeTask",
      "offset": [
        17019,
        18008
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3725": {
      "fn": "Governance.completeTask",
      "offset": [
        17218,
        17233
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 22
    },
    "3726": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17198
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "3728": {
      "fn": "Governance.completeTask",
      "offset": [
        17199,
        17200
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3729": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3730": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3731": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3732": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "LT",
      "path": "3"
    },
    "3733": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA0"
    },
    "3736": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3737": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA0"
    },
    "3740": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "3743": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3744": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3745": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3747": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3748": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3749": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3750": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3752": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3753": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3754": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3755": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3757": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3758": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3759": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "MUL",
      "path": "3"
    },
    "3760": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "3"
    },
    "3761": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17214
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3763": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17214
      ],
      "op": "ADD",
      "path": "3"
    },
    "3764": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17214
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3769": {
      "op": "SHL"
    },
    "3770": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17214
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3771": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17214
      ],
      "op": "DIV",
      "path": "3"
    },
    "3772": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17214
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "3778": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17214
      ],
      "op": "AND",
      "path": "3"
    },
    "3779": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17233
      ],
      "op": "GT",
      "path": "3"
    },
    "3780": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17233
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3781": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17233
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3782": {
      "branch": 114,
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17233
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3783": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17281
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF04"
    },
    "3786": {
      "branch": 114,
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17281
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3787": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17281
      ],
      "op": "POP",
      "path": "3"
    },
    "3788": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "3790": {
      "fn": "Governance.completeTask",
      "offset": [
        17266,
        17267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3791": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3792": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3793": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3794": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "LT",
      "path": "3"
    },
    "3795": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEDE"
    },
    "3798": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3799": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEDE"
    },
    "3802": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "3805": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17256,
        17268
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3806": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3807": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3809": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3810": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3811": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3812": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3814": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3815": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3816": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3817": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3819": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3820": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3821": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "MUL",
      "path": "3"
    },
    "3822": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17268
      ],
      "op": "ADD",
      "path": "3"
    },
    "3823": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17281
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3825": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17281
      ],
      "op": "ADD",
      "path": "3"
    },
    "3826": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17281
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3831": {
      "op": "SHL"
    },
    "3832": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17281
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3833": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17281
      ],
      "op": "DIV",
      "path": "3"
    },
    "3834": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17281
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "3840": {
      "fn": "Governance.completeTask",
      "offset": [
        17256,
        17281
      ],
      "op": "AND",
      "path": "3"
    },
    "3841": {
      "fn": "Governance.completeTask",
      "offset": [
        17237,
        17252
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3842": {
      "fn": "Governance.completeTask",
      "offset": [
        17237,
        17281
      ],
      "op": "GT",
      "path": "3"
    },
    "3843": {
      "branch": 115,
      "fn": "Governance.completeTask",
      "offset": [
        17237,
        17281
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3844": {
      "fn": "Governance.completeTask",
      "offset": [
        17189,
        17281
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3845": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF46"
    },
    "3848": {
      "branch": 115,
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3849": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3851": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3852": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3858": {
      "op": "SHL"
    },
    "3859": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3860": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3863": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3865": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3866": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "ADD",
      "path": "3"
    },
    "3867": {
      "op": "MSTORE"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3872": {
      "op": "DUP3"
    },
    "3873": {
      "op": "ADD"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "3897": {
      "op": "SHL"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3900": {
      "op": "DUP3"
    },
    "3901": {
      "op": "ADD"
    },
    "3902": {
      "op": "MSTORE"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3905": {
      "op": "ADD"
    },
    "3906": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "3909": {
      "op": "JUMP"
    },
    "3910": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17305
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3911": {
      "fn": "Governance.completeTask",
      "offset": [
        17358,
        17376
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3913": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3915": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3916": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3917": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "3920": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "3921": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3923": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3924": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3925": {
      "fn": "Governance.completeTask",
      "offset": [
        17384,
        17393
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3926": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3927": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3928": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3930": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "3931": {
      "fn": "Governance.completeTask",
      "offset": [
        17394,
        17400
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3932": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "3938": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "AND",
      "path": "3"
    },
    "3939": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3940": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3941": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3943": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "3944": {
      "fn": "Governance.completeTask",
      "offset": [
        17402,
        17407
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3945": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3946": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3947": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3949": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "3950": {
      "fn": "Governance.completeTask",
      "offset": [
        17409,
        17410
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3952": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3953": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "SHL",
      "path": "3"
    },
    "3954": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3955": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3956": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3958": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "3959": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "3961": {
      "fn": "Governance.completeTask",
      "offset": [
        17422,
        17423
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3962": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3963": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3964": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3965": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "LT",
      "path": "3"
    },
    "3966": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF89"
    },
    "3969": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3970": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF89"
    },
    "3973": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "3976": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17412,
        17424
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3977": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3978": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3979": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3981": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3982": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3984": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3986": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3987": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3988": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3990": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "MUL",
      "path": "3"
    },
    "3991": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17424
      ],
      "op": "ADD",
      "path": "3"
    },
    "3992": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3994": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "ADD",
      "path": "3"
    },
    "3995": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "3997": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3998": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3999": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4000": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4003": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "EXP",
      "path": "3"
    },
    "4004": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4005": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "DIV",
      "path": "3"
    },
    "4006": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "4008": {
      "fn": "Governance.completeTask",
      "offset": [
        17412,
        17440
      ],
      "op": "AND",
      "path": "3"
    },
    "4009": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "4011": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "AND",
      "path": "3"
    },
    "4012": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4013": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4014": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4016": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "4017": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17451
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "4019": {
      "fn": "Governance.completeTask",
      "offset": [
        17452,
        17453
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4020": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4021": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4022": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4023": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "LT",
      "path": "3"
    },
    "4024": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC3"
    },
    "4027": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4028": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC3"
    },
    "4031": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "4034": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17442,
        17454
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4035": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4036": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4038": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4039": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4040": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4041": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4043": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4044": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4045": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4046": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4048": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4049": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4050": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4051": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "MUL",
      "path": "3"
    },
    "4052": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4053": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4054": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17454
      ],
      "op": "ADD",
      "path": "3"
    },
    "4055": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17464
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4057": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17464
      ],
      "op": "ADD",
      "path": "3"
    },
    "4058": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17464
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "4063": {
      "op": "SHL"
    },
    "4064": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17464
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4065": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17464
      ],
      "op": "DIV",
      "path": "3"
    },
    "4066": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17464
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "4070": {
      "fn": "Governance.completeTask",
      "offset": [
        17442,
        17464
      ],
      "op": "AND",
      "path": "3"
    },
    "4071": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4072": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4073": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4074": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4075": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "4076": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4077": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4078": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4079": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4081": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4082": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4083": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "4084": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4085": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4086": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4087": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4089": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4090": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "4091": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4092": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4093": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4094": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "4096": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4097": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4098": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "ADD",
      "path": "3"
    },
    "4099": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4100": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4101": {
      "fn": "Governance.completeTask",
      "offset": [
        17379,
        17477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4102": {
      "fn": "Governance.completeTask",
      "offset": [
        17555,
        17574
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 23,
      "value": "0xB"
    },
    "4104": {
      "fn": "Governance.completeTask",
      "offset": [
        17555,
        17574
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4105": {
      "fn": "Governance.completeTask",
      "offset": [
        17521,
        17545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "4107": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4108": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4113": {
      "op": "SHL"
    },
    "4114": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4115": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4116": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4117": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "4118": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "4120": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "4121": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 24
    },
    "4122": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4123": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4124": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "4126": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4127": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4128": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4129": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4130": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4131": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4132": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4133": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4134": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 25
    },
    "4135": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4142": {
      "op": "SHL"
    },
    "4143": {
      "op": "SUB"
    },
    "4144": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4145": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4146": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4147": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4149": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4150": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4151": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "4152": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4153": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4154": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4155": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "4156": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "4157": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4158": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4159": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17620
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 26
    },
    "4160": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17620
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4161": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "4163": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4164": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17620
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4165": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17620
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4166": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4167": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4168": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4169": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4170": {
      "op": "POP"
    },
    "4171": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4172": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4173": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17620
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4174": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4175": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1058"
    },
    "4178": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4179": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17620
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4180": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ABE"
    },
    "4183": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17594,
        17629
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4184": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4185": {
      "op": "POP"
    },
    "4186": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4188": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4189": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4190": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4191": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4193": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4194": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4195": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4196": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4197": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4198": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4204": {
      "op": "NOT"
    },
    "4205": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4206": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "4212": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4213": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4214": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4215": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "OR",
      "path": "3"
    },
    "4216": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4217": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4218": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4220": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4221": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4222": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4223": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4225": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4226": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4227": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4228": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4230": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4231": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4232": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4233": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4235": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4236": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4237": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4238": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "4240": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4241": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4242": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4243": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4245": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4246": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4247": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4248": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4249": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4250": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "4252": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4253": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4254": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4255": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "4257": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4258": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4259": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4260": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "4262": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP9",
      "path": "3"
    },
    "4263": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4264": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4265": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4268": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4269": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP11",
      "path": "3"
    },
    "4270": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4271": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4272": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "4275": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4276": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP11",
      "path": "3"
    },
    "4277": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "ADD",
      "path": "3"
    },
    "4278": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4279": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "4281": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4282": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP10",
      "path": "3"
    },
    "4283": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4284": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4289": {
      "op": "NOT"
    },
    "4290": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4291": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "4292": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4293": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4294": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4295": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4296": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "OR",
      "path": "3"
    },
    "4297": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "4301": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4302": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4303": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4304": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4305": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4306": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MUL",
      "path": "3"
    },
    "4307": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4308": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4309": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4310": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "OR",
      "path": "3"
    },
    "4311": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4321": {
      "op": "SHL"
    },
    "4322": {
      "op": "SUB"
    },
    "4323": {
      "op": "NOT"
    },
    "4324": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "op": "SUB"
    },
    "4338": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4339": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4340": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4341": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4342": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4343": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4344": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MUL",
      "path": "3"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4350": {
      "op": "SHL"
    },
    "4351": {
      "op": "NOT"
    },
    "4352": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4353": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "OR",
      "path": "3"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4358": {
      "op": "SHL"
    },
    "4359": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "4362": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4363": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4364": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4365": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MUL",
      "path": "3"
    },
    "4366": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "OR",
      "path": "3"
    },
    "4367": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4377": {
      "op": "SHL"
    },
    "4378": {
      "op": "NOT"
    },
    "4379": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4384": {
      "op": "SHL"
    },
    "4385": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4386": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4387": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4388": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4389": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MUL",
      "path": "3"
    },
    "4390": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4398": {
      "op": "SHL"
    },
    "4399": {
      "op": "NOT"
    },
    "4400": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4401": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4402": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4403": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4404": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "OR",
      "path": "3"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4409": {
      "op": "SHL"
    },
    "4410": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4411": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4412": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4413": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "AND",
      "path": "3"
    },
    "4414": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4415": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4416": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4417": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "MUL",
      "path": "3"
    },
    "4418": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "OR",
      "path": "3"
    },
    "4419": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4420": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4421": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4422": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17666
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 27,
      "value": "0xB"
    },
    "4424": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17669
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4425": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17669
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4428": {
      "op": "SWAP1"
    },
    "4429": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17669
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1157"
    },
    "4432": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17669
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4433": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4434": {
      "fn": "Governance.completeTask",
      "offset": [
        17594,
        17629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4435": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17669
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B93"
    },
    "4438": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17647,
        17669
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4439": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17669
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4440": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17669
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4441": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17669
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4442": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17669
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4443": {
      "op": "POP"
    },
    "4444": {
      "fn": "Governance.completeTask",
      "offset": [
        17771,
        17795
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 28,
      "value": "0x116A"
    },
    "4447": {
      "fn": "Governance.completeTask",
      "offset": [
        17771,
        17795
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4448": {
      "op": "POP"
    },
    "4449": {
      "fn": "Governance.completeTask",
      "offset": [
        17771,
        17786
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4450": {
      "fn": "Governance.completeTask",
      "offset": [
        17789,
        17795
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x15180"
    },
    "4454": {
      "fn": "Governance.completeTask",
      "offset": [
        17771,
        17795
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B93"
    },
    "4457": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17771,
        17795
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4458": {
      "fn": "Governance.completeTask",
      "offset": [
        17771,
        17795
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4459": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "4461": {
      "fn": "Governance.completeTask",
      "offset": [
        17734,
        17735
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4462": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4463": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4464": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4465": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "LT",
      "path": "3"
    },
    "4466": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x117D"
    },
    "4469": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4470": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x117D"
    },
    "4473": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "4476": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17724,
        17736
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4477": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4478": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4480": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4481": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4482": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4483": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4485": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4486": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4487": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4488": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "4494": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "DUP9",
      "path": "3"
    },
    "4495": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "AND",
      "path": "3"
    },
    "4496": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4497": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4498": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4500": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4501": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4502": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "MUL",
      "path": "3"
    },
    "4503": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4504": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4505": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17736
      ],
      "op": "ADD",
      "path": "3"
    },
    "4506": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4507": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4508": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4510": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4511": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17768
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4512": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17795
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4513": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17852
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0x5"
    },
    "4515": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4516": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4517": {
      "fn": "Governance.completeTask",
      "offset": [
        17873,
        17874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4519": {
      "fn": "Governance.completeTask",
      "offset": [
        17873,
        17874
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4520": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17852
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4521": {
      "fn": "Governance.completeTask",
      "offset": [
        17853,
        17854
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4522": {
      "fn": "Governance.completeTask",
      "offset": [
        17853,
        17854
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4523": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4524": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "LT",
      "path": "3"
    },
    "4525": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B8"
    },
    "4528": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4529": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B8"
    },
    "4532": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "4535": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17843,
        17855
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4536": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4537": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4538": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4540": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4541": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4543": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4545": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4546": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4547": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4549": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "MUL",
      "path": "3"
    },
    "4550": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17855
      ],
      "op": "ADD",
      "path": "3"
    },
    "4551": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4553": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "ADD",
      "path": "3"
    },
    "4554": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "4556": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4557": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4558": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4559": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4562": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "EXP",
      "path": "3"
    },
    "4563": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4564": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "DIV",
      "path": "3"
    },
    "4565": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "4568": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17870
      ],
      "op": "AND",
      "path": "3"
    },
    "4569": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11E2"
    },
    "4572": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17874
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4573": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4574": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BAB"
    },
    "4577": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17843,
        17874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4578": {
      "fn": "Governance.completeTask",
      "offset": [
        17843,
        17874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4579": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "4581": {
      "fn": "Governance.completeTask",
      "offset": [
        17823,
        17824
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4582": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4583": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4584": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4585": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "LT",
      "path": "3"
    },
    "4586": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F5"
    },
    "4589": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4590": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F5"
    },
    "4593": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "4596": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17813,
        17825
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4597": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4598": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4599": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4601": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4602": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4604": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4606": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4607": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4608": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4610": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "MUL",
      "path": "3"
    },
    "4611": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17825
      ],
      "op": "ADD",
      "path": "3"
    },
    "4612": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4614": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17840
      ],
      "op": "ADD",
      "path": "3"
    },
    "4615": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "4617": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4620": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "EXP",
      "path": "3"
    },
    "4621": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4622": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4623": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4624": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "4627": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "MUL",
      "path": "3"
    },
    "4628": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "NOT",
      "path": "3"
    },
    "4629": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "AND",
      "path": "3"
    },
    "4630": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4631": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4632": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "4635": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "AND",
      "path": "3"
    },
    "4636": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "MUL",
      "path": "3"
    },
    "4637": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "OR",
      "path": "3"
    },
    "4638": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4639": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4640": {
      "fn": "Governance.completeTask",
      "offset": [
        17813,
        17874
      ],
      "op": "POP",
      "path": "3"
    },
    "4641": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 30,
      "value": "0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D"
    },
    "4674": {
      "fn": "Governance.completeTask",
      "offset": [
        17912,
        17918
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4675": {
      "fn": "Governance.completeTask",
      "offset": [
        17940,
        17941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4677": {
      "fn": "Governance.completeTask",
      "offset": [
        17919,
        17938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "4679": {
      "fn": "Governance.completeTask",
      "offset": [
        17919,
        17938
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4680": {
      "fn": "Governance.completeTask",
      "offset": [
        17919,
        17941
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1251"
    },
    "4683": {
      "fn": "Governance.completeTask",
      "offset": [
        17919,
        17941
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4684": {
      "fn": "Governance.completeTask",
      "offset": [
        17919,
        17941
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4685": {
      "fn": "Governance.completeTask",
      "offset": [
        17919,
        17941
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BCE"
    },
    "4688": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17919,
        17941
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4689": {
      "fn": "Governance.completeTask",
      "offset": [
        17919,
        17941
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4690": {
      "fn": "Governance.completeTask",
      "offset": [
        17943,
        17952
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4691": {
      "fn": "Governance.completeTask",
      "offset": [
        17954,
        17969
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4692": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4694": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4695": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1263"
    },
    "4698": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4699": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4700": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4701": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4702": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4703": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BE5"
    },
    "4706": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17898,
        17970
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4707": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4708": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4710": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4711": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4712": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4713": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "SUB",
      "path": "3"
    },
    "4714": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4715": {
      "fn": "Governance.completeTask",
      "offset": [
        17898,
        17970
      ],
      "op": "LOG1",
      "path": "3"
    },
    "4716": {
      "fn": "Governance.completeTask",
      "offset": [
        17988,
        17993
      ],
      "op": "POP",
      "path": "3",
      "statement": 31
    },
    "4717": {
      "fn": "Governance.completeTask",
      "offset": [
        17988,
        17993
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1279"
    },
    "4720": {
      "fn": "Governance.completeTask",
      "offset": [
        17988,
        17993
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4721": {
      "fn": "Governance.completeTask",
      "offset": [
        17019,
        18008
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4722": {
      "fn": "Governance.completeTask",
      "offset": [
        18031,
        18034
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 32,
      "value": "0x1"
    },
    "4724": {
      "fn": "Governance.completeTask",
      "offset": [
        18031,
        18034
      ],
      "op": "ADD",
      "path": "3"
    },
    "4725": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        18046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0C"
    },
    "4728": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        18046
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4729": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        18046
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4730": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        18046
      ],
      "op": "POP",
      "path": "3"
    },
    "4731": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "POP",
      "path": "3"
    },
    "4732": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "POP",
      "path": "3"
    },
    "4733": {
      "fn": "Governance.completeTask",
      "offset": [
        16786,
        18072
      ],
      "op": "POP",
      "path": "3"
    },
    "4734": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        16786,
        18072
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4735": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4736": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5990,
        5997
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4738": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6031,
        6045
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 33,
      "value": "0x9"
    },
    "4740": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6031,
        6045
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6028
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4742": {
      "branch": 116,
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6045
      ],
      "op": "LT",
      "path": "3"
    },
    "4743": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C5"
    },
    "4746": {
      "branch": 116,
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4747": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4749": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4750": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4756": {
      "op": "SHL"
    },
    "4757": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4758": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4761": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4763": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4764": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "ADD",
      "path": "3"
    },
    "4765": {
      "op": "MSTORE"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4770": {
      "op": "DUP3"
    },
    "4771": {
      "op": "ADD"
    },
    "4772": {
      "op": "MSTORE"
    },
    "4773": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4792": {
      "op": "SHL"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4795": {
      "op": "DUP3"
    },
    "4796": {
      "op": "ADD"
    },
    "4797": {
      "op": "MSTORE"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4800": {
      "op": "ADD"
    },
    "4801": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "4804": {
      "op": "JUMP"
    },
    "4805": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6066
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4806": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 34,
      "value": "0x0"
    },
    "4808": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6124
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4809": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6124
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4810": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6124
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4811": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4813": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4815": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6124
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4816": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4818": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4819": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6124
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4820": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6137
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4822": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6137
      ],
      "op": "ADD",
      "path": "3"
    },
    "4823": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6137
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4828": {
      "op": "SHL"
    },
    "4829": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6137
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4830": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6137
      ],
      "op": "DIV",
      "path": "3"
    },
    "4831": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6137
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "4837": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6137
      ],
      "op": "AND",
      "path": "3"
    },
    "4838": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6085,
        6100
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4839": {
      "branch": 117,
      "fn": "Governance.getWinningVote",
      "offset": [
        6085,
        6137
      ],
      "op": "GT",
      "path": "3"
    },
    "4840": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1329"
    },
    "4843": {
      "branch": 117,
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4844": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4846": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4853": {
      "op": "SHL"
    },
    "4854": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4855": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4858": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4860": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4861": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "ADD",
      "path": "3"
    },
    "4862": {
      "op": "MSTORE"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4867": {
      "op": "DUP3"
    },
    "4868": {
      "op": "ADD"
    },
    "4869": {
      "op": "MSTORE"
    },
    "4870": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "4892": {
      "op": "SHL"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4895": {
      "op": "DUP3"
    },
    "4896": {
      "op": "ADD"
    },
    "4897": {
      "op": "MSTORE"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4900": {
      "op": "ADD"
    },
    "4901": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "4904": {
      "op": "JUMP"
    },
    "4905": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6076,
        6161
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4906": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6281,
        6300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4908": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6310,
        6335
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4909": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6345,
        6356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4911": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6372,
        6381
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4912": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6368,
        6813
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4913": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6409
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4915": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6409
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4916": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6409
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4917": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6409
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4918": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4920": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6409
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4922": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6409
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4923": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6409
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4925": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6409
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4926": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6409
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4927": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6425
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4929": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6425
      ],
      "op": "ADD",
      "path": "3"
    },
    "4930": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6425
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4931": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "4934": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6425
      ],
      "op": "AND",
      "path": "3"
    },
    "4935": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6385,
        6425
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4936": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6385,
        6425
      ],
      "op": "LT",
      "path": "3"
    },
    "4937": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6368,
        6813
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4938": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6368,
        6813
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1457"
    },
    "4941": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6368,
        6813
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4942": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6517,
        6534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4943": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6493
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4945": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4947": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6494,
        6504
      ],
      "op": "DUP9",
      "path": "3"
    },
    "4948": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4949": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4950": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4952": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "ADD",
      "path": "3"
    },
    "4953": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4954": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4955": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4956": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4958": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "ADD",
      "path": "3"
    },
    "4959": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4961": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6505
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4962": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6511
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4964": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6511
      ],
      "op": "ADD",
      "path": "3"
    },
    "4965": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6512,
        6513
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4966": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4968": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4969": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "LT",
      "path": "3"
    },
    "4970": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1375"
    },
    "4973": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4974": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1375"
    },
    "4977": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "4980": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6484,
        6514
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4981": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4982": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "4984": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4985": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4986": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4987": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "DIV",
      "path": "3"
    },
    "4988": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "ADD",
      "path": "3"
    },
    "4989": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4990": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4991": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "MOD",
      "path": "3"
    },
    "4992": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4994": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "MUL",
      "path": "3"
    },
    "4995": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4996": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4997": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4998": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5001": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "EXP",
      "path": "3"
    },
    "5002": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5003": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "DIV",
      "path": "3"
    },
    "5004": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "5007": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6514
      ],
      "op": "AND",
      "path": "3"
    },
    "5008": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "5011": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6534
      ],
      "op": "AND",
      "path": "3"
    },
    "5012": {
      "branch": 118,
      "fn": "Governance.getWinningVote",
      "offset": [
        6484,
        6534
      ],
      "op": "GT",
      "path": "3"
    },
    "5013": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6481,
        6803
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5014": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6481,
        6803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F5"
    },
    "5017": {
      "branch": 118,
      "fn": "Governance.getWinningVote",
      "offset": [
        6481,
        6803
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5018": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6583
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 35,
      "value": "0x8"
    },
    "5020": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5022": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6584,
        6594
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5023": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5024": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5025": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5027": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "ADD",
      "path": "3"
    },
    "5028": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5029": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5030": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5031": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5033": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "ADD",
      "path": "3"
    },
    "5034": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5036": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6595
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5037": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5039": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6601
      ],
      "op": "ADD",
      "path": "3"
    },
    "5040": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6602,
        6603
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5041": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "5043": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5044": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "LT",
      "path": "3"
    },
    "5045": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C0"
    },
    "5048": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5049": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C0"
    },
    "5052": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "5055": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6574,
        6604
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5056": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5057": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "5059": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5060": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5061": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5062": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "DIV",
      "path": "3"
    },
    "5063": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "ADD",
      "path": "3"
    },
    "5064": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5065": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5066": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "MOD",
      "path": "3"
    },
    "5067": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5069": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "MUL",
      "path": "3"
    },
    "5070": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5071": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5072": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5073": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5076": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "EXP",
      "path": "3"
    },
    "5077": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5078": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "DIV",
      "path": "3"
    },
    "5079": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "5082": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6574,
        6604
      ],
      "op": "AND",
      "path": "3"
    },
    "5083": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6554,
        6604
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "5086": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6554,
        6604
      ],
      "op": "AND",
      "path": "3"
    },
    "5087": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6554,
        6604
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5088": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6554,
        6604
      ],
      "op": "POP",
      "path": "3"
    },
    "5089": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6636,
        6637
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 36
    },
    "5090": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6622,
        6637
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5091": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6622,
        6637
      ],
      "op": "POP",
      "path": "3"
    },
    "5092": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6659,
        6662
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5093": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6664,
        6665
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5095": {
      "branch": 119,
      "fn": "Governance.getWinningVote",
      "offset": [
        6659,
        6665
      ],
      "op": "SUB",
      "path": "3"
    },
    "5096": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6655,
        6678
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F0"
    },
    "5099": {
      "branch": 119,
      "fn": "Governance.getWinningVote",
      "offset": [
        6655,
        6678
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5100": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6675,
        6676
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 37,
      "value": "0x0"
    },
    "5102": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6669,
        6676
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5103": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6669,
        6676
      ],
      "op": "POP",
      "path": "3"
    },
    "5104": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6655,
        6678
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5105": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6481,
        6803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1445"
    },
    "5108": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6481,
        6803
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5109": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6481,
        6803
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5110": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6747,
        6764
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5111": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "5113": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5115": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6723,
        6733
      ],
      "op": "DUP9",
      "path": "3"
    },
    "5116": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5117": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5118": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5120": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "ADD",
      "path": "3"
    },
    "5121": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5122": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5123": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5124": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5126": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "ADD",
      "path": "3"
    },
    "5127": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5129": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6734
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5130": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6740
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5132": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6740
      ],
      "op": "ADD",
      "path": "3"
    },
    "5133": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6741,
        6742
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5134": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "5136": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5137": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "LT",
      "path": "3"
    },
    "5138": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141D"
    },
    "5141": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5142": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141D"
    },
    "5145": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "5148": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6713,
        6743
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5149": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5150": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "5152": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5153": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5154": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5155": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "DIV",
      "path": "3"
    },
    "5156": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "ADD",
      "path": "3"
    },
    "5157": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5158": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5159": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "MOD",
      "path": "3"
    },
    "5160": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5162": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "MUL",
      "path": "3"
    },
    "5163": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5164": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5165": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5166": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5169": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "EXP",
      "path": "3"
    },
    "5170": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5171": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "DIV",
      "path": "3"
    },
    "5172": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "5175": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6743
      ],
      "op": "AND",
      "path": "3"
    },
    "5176": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6764
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "5179": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6764
      ],
      "op": "AND",
      "path": "3"
    },
    "5180": {
      "branch": 120,
      "fn": "Governance.getWinningVote",
      "offset": [
        6713,
        6764
      ],
      "op": "SUB",
      "path": "3"
    },
    "5181": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6710,
        6803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1445"
    },
    "5184": {
      "branch": 120,
      "fn": "Governance.getWinningVote",
      "offset": [
        6710,
        6803
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5185": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6787,
        6788
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 38,
      "value": "0x1"
    },
    "5187": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6783,
        6788
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5188": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6783,
        6788
      ],
      "op": "POP",
      "path": "3"
    },
    "5189": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6710,
        6803
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5190": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6427,
        6430
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 39
    },
    "5191": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6427,
        6430
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x144F"
    },
    "5194": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6427,
        6430
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5195": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6427,
        6430
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1C"
    },
    "5198": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6427,
        6430
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5199": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6427,
        6430
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5200": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6427,
        6430
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5201": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6427,
        6430
      ],
      "op": "POP",
      "path": "3"
    },
    "5202": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6427,
        6430
      ],
      "op": "POP",
      "path": "3"
    },
    "5203": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6368,
        6813
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1330"
    },
    "5206": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6368,
        6813
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5207": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6368,
        6813
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5208": {
      "op": "POP"
    },
    "5209": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6830,
        6836
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 40
    },
    "5210": {
      "branch": 121,
      "fn": "Governance.getWinningVote",
      "offset": [
        6830,
        6836
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5211": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1499"
    },
    "5214": {
      "branch": 121,
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5215": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5217": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5224": {
      "op": "SHL"
    },
    "5225": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5226": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5229": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5231": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5232": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "ADD",
      "path": "3"
    },
    "5233": {
      "op": "MSTORE"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5238": {
      "op": "DUP3"
    },
    "5239": {
      "op": "ADD"
    },
    "5240": {
      "op": "MSTORE"
    },
    "5241": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "5260": {
      "op": "SHL"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5263": {
      "op": "DUP3"
    },
    "5264": {
      "op": "ADD"
    },
    "5265": {
      "op": "MSTORE"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5268": {
      "op": "ADD"
    },
    "5269": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "5272": {
      "op": "JUMP"
    },
    "5273": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6822,
        6857
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5274": {
      "op": "POP"
    },
    "5275": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6874,
        6885
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 41
    },
    "5276": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6874,
        6885
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5277": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5923,
        6892
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5278": {
      "op": "POP"
    },
    "5279": {
      "op": "POP"
    },
    "5280": {
      "op": "POP"
    },
    "5281": {
      "fn": "Governance.getWinningVote",
      "jump": "o",
      "offset": [
        5923,
        6892
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5282": {
      "fn": "Governance.vote",
      "offset": [
        12909,
        13573
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5283": {
      "offset": [
        23983,
        24014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5285": {
      "fn": "Governance.vote",
      "offset": [
        23983,
        24014
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5292": {
      "op": "SHL"
    },
    "5293": {
      "offset": [
        23983,
        24014
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5294": {
      "fn": "Governance.vote",
      "offset": [
        23983,
        24014
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5297": {
      "offset": [
        23983,
        24014
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5299": {
      "fn": "Governance.vote",
      "offset": [
        23983,
        24014
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5300": {
      "fn": "Governance.vote",
      "offset": [
        23983,
        24014
      ],
      "op": "ADD",
      "path": "3"
    },
    "5301": {
      "op": "MSTORE"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5306": {
      "op": "DUP3"
    },
    "5307": {
      "op": "ADD"
    },
    "5308": {
      "op": "MSTORE"
    },
    "5309": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5326": {
      "op": "SHL"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5329": {
      "op": "DUP3"
    },
    "5330": {
      "op": "ADD"
    },
    "5331": {
      "op": "MSTORE"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5334": {
      "op": "ADD"
    },
    "5335": {
      "offset": [
        23983,
        24014
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "5338": {
      "op": "JUMP"
    },
    "5339": {
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5340": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "5342": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5344": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5345": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5347": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5348": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5349": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5350": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5352": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5353": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5354": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5355": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5356": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5357": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5358": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F6"
    },
    "5361": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5362": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "5365": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5366": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5367": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5368": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5370": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5371": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5373": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5374": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5375": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "3"
    },
    "5376": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MUL",
      "path": "3"
    },
    "5377": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5379": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5380": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5382": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5383": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5384": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5385": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5386": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5388": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5389": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5390": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5391": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5392": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5393": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5394": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5395": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5396": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5398": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5399": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5400": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5401": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5402": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1522"
    },
    "5405": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5406": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "5409": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5410": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5411": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5412": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5413": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x156F"
    },
    "5416": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5417": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5418": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5420": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "LT",
      "path": "3"
    },
    "5421": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1544"
    },
    "5424": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5425": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5428": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5429": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5430": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5431": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "3"
    },
    "5432": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MUL",
      "path": "3"
    },
    "5433": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5434": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5435": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5436": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5438": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5439": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5440": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x156F"
    },
    "5443": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5444": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5445": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5446": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5447": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5448": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5449": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5451": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5452": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5454": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5456": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5457": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5458": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5459": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5460": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5461": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5462": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5463": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5464": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5466": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5467": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5468": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5470": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5471": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5472": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5473": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "GT",
      "path": "3"
    },
    "5474": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1552"
    },
    "5477": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5478": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5479": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5480": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SUB",
      "path": "3"
    },
    "5481": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5483": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "3"
    },
    "5484": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5485": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5486": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5487": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5488": {
      "op": "POP"
    },
    "5489": {
      "op": "POP"
    },
    "5490": {
      "op": "POP"
    },
    "5491": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5493": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5494": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5495": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5496": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5498": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5499": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5500": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5501": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5503": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5504": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5505": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5506": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5508": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5509": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "5510": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "3"
    },
    "5511": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5512": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5513": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "5514": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "5520": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5521": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5522": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "3"
    },
    "5523": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "5524": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5525": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5526": {
      "op": "POP"
    },
    "5527": {
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5528": {
      "op": "POP"
    },
    "5529": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "5531": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5532": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "3"
    },
    "5533": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5534": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "5538": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5541": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5542": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "3"
    },
    "5543": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "3"
    },
    "5544": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5551": {
      "op": "SHL"
    },
    "5552": {
      "op": "SUB"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5557": {
      "op": "SHL"
    },
    "5558": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5559": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "3"
    },
    "5560": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "3"
    },
    "5561": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5562": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5569": {
      "op": "SHL"
    },
    "5570": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5571": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "3"
    },
    "5572": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5573": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "3"
    },
    "5574": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5579": {
      "op": "SHL"
    },
    "5580": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5581": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "3"
    },
    "5582": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5583": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5584": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "3"
    },
    "5585": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5590": {
      "op": "SHL"
    },
    "5591": {
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5592": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5593": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "3"
    },
    "5594": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "3"
    },
    "5595": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP11",
      "path": "3"
    },
    "5596": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5597": {
      "fn": "Governance.getTaskById",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5598": {
      "fn": "Governance.getTaskById",
      "offset": [
        5471,
        5482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E5"
    },
    "5601": {
      "fn": "Governance.getTaskById",
      "offset": [
        5471,
        5482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FFB"
    },
    "5604": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5471,
        5482
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5605": {
      "fn": "Governance.getTaskById",
      "offset": [
        5471,
        5482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5606": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 42,
      "value": "0x0"
    },
    "5608": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5609": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5610": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5611": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "5613": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5615": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5616": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5618": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5619": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5620": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5621": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5622": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5623": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5624": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "5627": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5628": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5629": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5630": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5631": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5632": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5633": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5634": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5635": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5636": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5637": {
      "fn": "Governance.getTaskById",
      "offset": [
        5501,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5638": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x160E"
    },
    "5641": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5642": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "5645": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5646": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5647": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5648": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5650": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5651": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5653": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5654": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5655": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DIV",
      "path": "3"
    },
    "5656": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MUL",
      "path": "3"
    },
    "5657": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5659": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5660": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5662": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5663": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5664": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5665": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5666": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5668": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5669": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5670": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5671": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5672": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5673": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5674": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5675": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5676": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5678": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5679": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5680": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5681": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5682": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x163A"
    },
    "5685": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5686": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "5689": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5690": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5691": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5692": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5693": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1687"
    },
    "5696": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5697": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5698": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5700": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "LT",
      "path": "3"
    },
    "5701": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x165C"
    },
    "5704": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5705": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5708": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5709": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5710": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5711": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DIV",
      "path": "3"
    },
    "5712": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MUL",
      "path": "3"
    },
    "5713": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5714": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5715": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5716": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5718": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5719": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5720": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1687"
    },
    "5723": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5724": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5725": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5726": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5727": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5728": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5729": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5731": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5732": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5734": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5736": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5737": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5738": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5739": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5740": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5741": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5742": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5743": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5744": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5746": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5747": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5748": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5750": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5751": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5752": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5753": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "GT",
      "path": "3"
    },
    "5754": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x166A"
    },
    "5757": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5758": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5759": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5760": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SUB",
      "path": "3"
    },
    "5761": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5763": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "AND",
      "path": "3"
    },
    "5764": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5765": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5766": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5767": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5768": {
      "op": "POP"
    },
    "5769": {
      "op": "POP"
    },
    "5770": {
      "op": "POP"
    },
    "5771": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5772": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5773": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "op": "POP"
    },
    "5776": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5778": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5779": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5780": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5781": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "5787": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5788": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5789": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "AND",
      "path": "3"
    },
    "5790": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5792": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5793": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5794": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5795": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5797": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5798": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5799": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5800": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5802": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5803": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5804": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5805": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5807": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5808": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5809": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5810": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5812": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5813": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5814": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5815": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5817": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5818": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5819": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5820": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5821": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "5823": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5824": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "AND",
      "path": "3"
    },
    "5825": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "5827": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5828": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5829": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5830": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5833": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5834": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5835": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DIV",
      "path": "3"
    },
    "5836": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "5840": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "AND",
      "path": "3"
    },
    "5841": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "5843": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5844": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5845": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5850": {
      "op": "SHL"
    },
    "5851": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5852": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DIV",
      "path": "3"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5859": {
      "op": "SHL"
    },
    "5860": {
      "op": "SUB"
    },
    "5861": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "AND",
      "path": "3"
    },
    "5862": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "5864": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5865": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5866": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5871": {
      "op": "SHL"
    },
    "5872": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5873": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DIV",
      "path": "3"
    },
    "5874": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "5877": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5878": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5879": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "AND",
      "path": "3"
    },
    "5880": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "5882": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5883": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5884": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5889": {
      "op": "SHL"
    },
    "5890": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5891": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DIV",
      "path": "3"
    },
    "5892": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "AND",
      "path": "3"
    },
    "5893": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5894": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5895": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5896": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5901": {
      "op": "SHL"
    },
    "5902": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5903": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "DIV",
      "path": "3"
    },
    "5904": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5905": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5906": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "AND",
      "path": "3"
    },
    "5907": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "5910": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5911": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5912": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "ADD",
      "path": "3"
    },
    "5913": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5914": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5915": {
      "fn": "Governance.getTaskById",
      "offset": [
        5494,
        5515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5916": {
      "op": "POP"
    },
    "5917": {
      "op": "POP"
    },
    "5918": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        5410,
        5522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5919": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9390,
        9405
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5922": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9417,
        9430
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9417,
        9430
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5925": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9440,
        9984
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5926": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9460,
        9469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "5928": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9460,
        9476
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5929": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9457,
        9476
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5930": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9457,
        9476
      ],
      "op": "LT",
      "path": "3"
    },
    "5931": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9440,
        9984
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5932": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9440,
        9984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1837"
    },
    "5935": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9440,
        9984
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5936": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9542,
        9557
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5937": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9504
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "5939": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9505,
        9506
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5941": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5942": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "LT",
      "path": "3"
    },
    "5944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1743"
    },
    "5947": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1743"
    },
    "5951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "5954": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9495,
        9507
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5955": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5961": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5965": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "5972": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "DUP10",
      "path": "3"
    },
    "5973": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "AND",
      "path": "3"
    },
    "5974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5978": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5979": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "MUL",
      "path": "3"
    },
    "5981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9507
      ],
      "op": "ADD",
      "path": "3"
    },
    "5984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5985": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5986": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5990": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9539
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5991": {
      "branch": 122,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9557
      ],
      "op": "LT",
      "path": "3"
    },
    "5992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9617
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5993": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9617
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5994": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17A7"
    },
    "5997": {
      "branch": 122,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9617
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5998": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9617
      ],
      "op": "POP",
      "path": "3"
    },
    "5999": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9602,
        9617
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "6000": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9582
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "6002": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9583,
        9584
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6003": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6004": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6005": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6006": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "LT",
      "path": "3"
    },
    "6007": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1782"
    },
    "6010": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1782"
    },
    "6014": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6017": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9573,
        9585
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6018": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6019": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6021": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6022": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6023": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6024": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6026": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6027": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6028": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6029": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6031": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6032": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6033": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "MUL",
      "path": "3"
    },
    "6034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9585
      ],
      "op": "ADD",
      "path": "3"
    },
    "6035": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6037": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9598
      ],
      "op": "ADD",
      "path": "3"
    },
    "6038": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9598
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6043": {
      "op": "SHL"
    },
    "6044": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9598
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6045": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9598
      ],
      "op": "DIV",
      "path": "3"
    },
    "6046": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9598
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "6052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9598
      ],
      "op": "AND",
      "path": "3"
    },
    "6053": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9617
      ],
      "op": "GT",
      "path": "3"
    },
    "6054": {
      "branch": 123,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9617
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6055": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9617
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6056": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6057": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9664
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6058": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17E6"
    },
    "6061": {
      "branch": 123,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9664
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6062": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9664
      ],
      "op": "POP",
      "path": "3"
    },
    "6063": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9649,
        9664
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "6064": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "6066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9631,
        9632
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6067": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6069": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "LT",
      "path": "3"
    },
    "6071": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17C2"
    },
    "6074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6075": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17C2"
    },
    "6078": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6081": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9621,
        9633
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6082": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6085": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6086": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6087": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6088": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6090": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6091": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6093": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6097": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "MUL",
      "path": "3"
    },
    "6098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9633
      ],
      "op": "ADD",
      "path": "3"
    },
    "6099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9646
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6101": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9646
      ],
      "op": "ADD",
      "path": "3"
    },
    "6102": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9646
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6107": {
      "op": "SHL"
    },
    "6108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9646
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6109": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9646
      ],
      "op": "DIV",
      "path": "3"
    },
    "6110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9646
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "6116": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9646
      ],
      "op": "AND",
      "path": "3"
    },
    "6117": {
      "branch": 124,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9621,
        9664
      ],
      "op": "GT",
      "path": "3"
    },
    "6118": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6119": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9711
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6120": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9711
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6121": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1823"
    },
    "6124": {
      "branch": 124,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9711
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6125": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9711
      ],
      "op": "POP",
      "path": "3"
    },
    "6126": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9710,
        9711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6128": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "6130": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9690,
        9691
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6131": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6132": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6133": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6134": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "LT",
      "path": "3"
    },
    "6135": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1802"
    },
    "6138": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6139": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1802"
    },
    "6142": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6145": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9680,
        9692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6146": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6147": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6149": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6150": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6151": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6152": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6154": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6155": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6156": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6157": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6159": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6160": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6161": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "MUL",
      "path": "3"
    },
    "6162": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9692
      ],
      "op": "ADD",
      "path": "3"
    },
    "6163": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9707
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6165": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9707
      ],
      "op": "ADD",
      "path": "3"
    },
    "6166": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9707
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6171": {
      "op": "SHL"
    },
    "6172": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6173": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9707
      ],
      "op": "DIV",
      "path": "3"
    },
    "6174": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "6177": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9707
      ],
      "op": "AND",
      "path": "3"
    },
    "6178": {
      "branch": 125,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9680,
        9711
      ],
      "op": "GT",
      "path": "3"
    },
    "6179": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9495,
        9711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6180": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9492,
        9777
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6181": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9492,
        9777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x182F"
    },
    "6184": {
      "branch": 125,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9492,
        9777
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6185": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9754,
        9761
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 43
    },
    "6186": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9754,
        9761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6188": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9754,
        9761
      ],
      "op": "ADD",
      "path": "3"
    },
    "6189": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9754,
        9761
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6190": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9754,
        9761
      ],
      "op": "POP",
      "path": "3"
    },
    "6191": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9492,
        9777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6192": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9969,
        9972
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 44,
      "value": "0x1"
    },
    "6194": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9969,
        9972
      ],
      "op": "ADD",
      "path": "3"
    },
    "6195": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9440,
        9984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1725"
    },
    "6198": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9440,
        9984
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6199": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9440,
        9984
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6200": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9440,
        9984
      ],
      "op": "POP",
      "path": "3"
    },
    "6201": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10041,
        10046
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6202": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10048,
        10049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6204": {
      "branch": 126,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10041,
        10049
      ],
      "op": "SUB",
      "path": "3"
    },
    "6205": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A3"
    },
    "6208": {
      "branch": 126,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10176
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6209": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6211": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6212": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6213": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10104,
        10105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6215": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6216": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6217": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6218": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6219": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6220": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "ADD",
      "path": "3"
    },
    "6221": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6222": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6224": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10065,
        10089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6226": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10065,
        10089
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6227": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6228": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6230": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "ADD",
      "path": "3"
    },
    "6231": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6232": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6235": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6236": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6238": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "ADD",
      "path": "3"
    },
    "6239": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6240": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6242": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6243": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "SUB",
      "path": "3"
    },
    "6244": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6245": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6246": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1857"
    },
    "6249": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6250": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6251": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "POP",
      "path": "3"
    },
    "6252": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10091,
        10106
      ],
      "op": "POP",
      "path": "3"
    },
    "6253": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10065,
        10106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6254": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10065,
        10106
      ],
      "op": "POP",
      "path": "3"
    },
    "6255": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 45,
      "value": "0x40"
    },
    "6257": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6258": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6261": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "ADD",
      "path": "3"
    },
    "6262": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6265": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6266": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6268": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6269": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6270": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "POP",
      "path": "3"
    },
    "6271": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10128
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6272": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10129,
        10130
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6274": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6275": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6276": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6277": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "LT",
      "path": "3"
    },
    "6278": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1891"
    },
    "6281": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1891"
    },
    "6285": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6288": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10120,
        10131
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6289": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6290": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6292": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6293": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6294": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "MUL",
      "path": "3"
    },
    "6295": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6296": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6297": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "ADD",
      "path": "3"
    },
    "6299": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10131
      ],
      "op": "ADD",
      "path": "3"
    },
    "6300": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10120,
        10136
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6301": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10157,
        10165
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 46
    },
    "6302": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6303": {
      "op": "POP"
    },
    "6304": {
      "op": "POP"
    },
    "6305": {
      "op": "POP"
    },
    "6306": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6307": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10176
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6308": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10186,
        10209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6310": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10225,
        10230
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6317": {
      "op": "SHL"
    },
    "6318": {
      "op": "SUB"
    },
    "6319": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6320": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "GT",
      "path": "3"
    },
    "6321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6322": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18BD"
    },
    "6325": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18BD"
    },
    "6329": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x314E"
    },
    "6332": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10212,
        10231
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6333": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6334": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6336": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6337": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6338": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6339": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6341": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6342": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6344": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "MUL",
      "path": "3"
    },
    "6345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6347": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "ADD",
      "path": "3"
    },
    "6348": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6349": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "ADD",
      "path": "3"
    },
    "6350": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6352": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6353": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6354": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6355": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18F0"
    },
    "6358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6359": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6360": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6362": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "ADD",
      "path": "3"
    },
    "6363": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6364": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6366": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6367": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "ADD",
      "path": "3"
    },
    "6371": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6372": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6375": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "SUB",
      "path": "3"
    },
    "6376": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6377": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18DB"
    },
    "6381": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6382": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6383": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "POP",
      "path": "3"
    },
    "6384": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6385": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10212,
        10231
      ],
      "op": "POP",
      "path": "3"
    },
    "6386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10186,
        10231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10186,
        10231
      ],
      "op": "POP",
      "path": "3"
    },
    "6388": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10241,
        10256
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10274,
        10283
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6391": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10270,
        10789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6392": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10290,
        10299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "6394": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10290,
        10306
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6395": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10287,
        10306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6396": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10287,
        10306
      ],
      "op": "LT",
      "path": "3"
    },
    "6397": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10270,
        10789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6398": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10270,
        10789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ADB"
    },
    "6401": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10270,
        10789
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6402": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10372,
        10387
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "6403": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10334
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "6405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10335,
        10336
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6406": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6407": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6408": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6409": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "LT",
      "path": "3"
    },
    "6410": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1915"
    },
    "6413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6414": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1915"
    },
    "6417": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6420": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10325,
        10337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6421": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6422": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6427": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6430": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "6438": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "DUP12",
      "path": "3"
    },
    "6439": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "AND",
      "path": "3"
    },
    "6440": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6442": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6445": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6446": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "MUL",
      "path": "3"
    },
    "6447": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6448": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6449": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10337
      ],
      "op": "ADD",
      "path": "3"
    },
    "6450": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6451": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6452": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6454": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6455": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10369
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6457": {
      "branch": 127,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10387
      ],
      "op": "LT",
      "path": "3"
    },
    "6458": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10447
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6459": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10447
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6460": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10447
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1979"
    },
    "6463": {
      "branch": 127,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10447
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6464": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10447
      ],
      "op": "POP",
      "path": "3"
    },
    "6465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10432,
        10447
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "6466": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10412
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "6468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10413,
        10414
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6470": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6471": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "LT",
      "path": "3"
    },
    "6473": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1954"
    },
    "6476": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6477": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1954"
    },
    "6480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10403,
        10415
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6484": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6487": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6488": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6489": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6492": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6493": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6498": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6499": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "MUL",
      "path": "3"
    },
    "6500": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10415
      ],
      "op": "ADD",
      "path": "3"
    },
    "6501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10428
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6503": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10428
      ],
      "op": "ADD",
      "path": "3"
    },
    "6504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10428
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6509": {
      "op": "SHL"
    },
    "6510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10428
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6511": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10428
      ],
      "op": "DIV",
      "path": "3"
    },
    "6512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10428
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "6518": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10428
      ],
      "op": "AND",
      "path": "3"
    },
    "6519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10447
      ],
      "op": "GT",
      "path": "3"
    },
    "6520": {
      "branch": 128,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10403,
        10447
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10494
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10494
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B8"
    },
    "6527": {
      "branch": 128,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10494
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10494
      ],
      "op": "POP",
      "path": "3"
    },
    "6529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10479,
        10494
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "6530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10460
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "6532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10461,
        10462
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6534": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "LT",
      "path": "3"
    },
    "6537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1994"
    },
    "6540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1994"
    },
    "6544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10451,
        10463
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6551": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6553": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6554": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6556": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6557": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6558": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6562": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6563": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "MUL",
      "path": "3"
    },
    "6564": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10463
      ],
      "op": "ADD",
      "path": "3"
    },
    "6565": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10476
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6567": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10476
      ],
      "op": "ADD",
      "path": "3"
    },
    "6568": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10476
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6573": {
      "op": "SHL"
    },
    "6574": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10476
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6575": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10476
      ],
      "op": "DIV",
      "path": "3"
    },
    "6576": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10476
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "6582": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10476
      ],
      "op": "AND",
      "path": "3"
    },
    "6583": {
      "branch": 129,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10451,
        10494
      ],
      "op": "GT",
      "path": "3"
    },
    "6584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6585": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10541
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6586": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10541
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6587": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10541
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19F5"
    },
    "6590": {
      "branch": 129,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10541
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6591": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10541
      ],
      "op": "POP",
      "path": "3"
    },
    "6592": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10540,
        10541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6594": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10519
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "6596": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10520,
        10521
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6597": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6598": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6599": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "LT",
      "path": "3"
    },
    "6601": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19D4"
    },
    "6604": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6605": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19D4"
    },
    "6608": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6611": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10510,
        10522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6613": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6615": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6616": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6617": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6618": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6620": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6622": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6623": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6625": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6626": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6627": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "MUL",
      "path": "3"
    },
    "6628": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10522
      ],
      "op": "ADD",
      "path": "3"
    },
    "6629": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6631": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10537
      ],
      "op": "ADD",
      "path": "3"
    },
    "6632": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6637": {
      "op": "SHL"
    },
    "6638": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6639": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10537
      ],
      "op": "DIV",
      "path": "3"
    },
    "6640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "6643": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10537
      ],
      "op": "AND",
      "path": "3"
    },
    "6644": {
      "branch": 130,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10510,
        10541
      ],
      "op": "GT",
      "path": "3"
    },
    "6645": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10325,
        10541
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6646": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10751
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AD3"
    },
    "6650": {
      "branch": 130,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10751
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6651": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10602
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 47,
      "value": "0x5"
    },
    "6653": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10603,
        10604
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6655": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6656": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6657": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "LT",
      "path": "3"
    },
    "6658": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A0D"
    },
    "6661": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6662": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A0D"
    },
    "6665": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6668": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10593,
        10605
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6669": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6670": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6671": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6673": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6674": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6676": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6678": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6679": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6680": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "MUL",
      "path": "3"
    },
    "6683": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10605
      ],
      "op": "ADD",
      "path": "3"
    },
    "6684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10593,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6688": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6689": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A29"
    },
    "6692": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6693": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "6696": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6697": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6699": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6702": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6706": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DIV",
      "path": "3"
    },
    "6707": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "MUL",
      "path": "3"
    },
    "6708": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6710": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6713": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6714": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6715": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6719": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6720": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6721": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6722": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6723": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6724": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6725": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6726": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6729": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6730": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6731": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6733": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A55"
    },
    "6736": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6737": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "6740": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6741": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6742": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6743": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA2"
    },
    "6747": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6748": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6749": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "LT",
      "path": "3"
    },
    "6752": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A77"
    },
    "6755": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6756": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6759": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6760": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6761": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6762": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DIV",
      "path": "3"
    },
    "6763": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "MUL",
      "path": "3"
    },
    "6764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6765": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6766": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6767": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6769": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6770": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6771": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA2"
    },
    "6774": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6776": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6778": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6779": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6780": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6785": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6788": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6789": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6790": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6791": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6792": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6793": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6794": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6795": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6797": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6799": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6803": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6804": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "GT",
      "path": "3"
    },
    "6805": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A85"
    },
    "6808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6809": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6810": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6811": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SUB",
      "path": "3"
    },
    "6812": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6814": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "AND",
      "path": "3"
    },
    "6815": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6816": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "ADD",
      "path": "3"
    },
    "6817": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6818": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6819": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "POP",
      "path": "3"
    },
    "6820": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "POP",
      "path": "3"
    },
    "6821": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "POP",
      "path": "3"
    },
    "6822": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "POP",
      "path": "3"
    },
    "6823": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "POP",
      "path": "3"
    },
    "6824": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10581
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6825": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10582,
        10589
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6826": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6827": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6828": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6829": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "LT",
      "path": "3"
    },
    "6830": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AB9"
    },
    "6833": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6834": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AB9"
    },
    "6837": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "6840": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10574,
        10590
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6842": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6844": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "MUL",
      "path": "3"
    },
    "6845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6847": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "ADD",
      "path": "3"
    },
    "6848": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10590
      ],
      "op": "ADD",
      "path": "3"
    },
    "6849": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6850": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6851": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6852": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10574,
        10614
      ],
      "op": "POP",
      "path": "3"
    },
    "6853": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10642,
        10651
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 48
    },
    "6854": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10642,
        10651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10642,
        10651
      ],
      "op": "ADD",
      "path": "3"
    },
    "6857": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10642,
        10651
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6858": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10642,
        10651
      ],
      "op": "POP",
      "path": "3"
    },
    "6859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10684,
        10689
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10673,
        10680
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6861": {
      "branch": 131,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10673,
        10689
      ],
      "op": "LT",
      "path": "3"
    },
    "6862": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10670,
        10737
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10713,
        10718
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 49,
      "value": "0x1ADB"
    },
    "6866": {
      "branch": 131,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10670,
        10737
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6867": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10670,
        10737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10774,
        10777
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 50,
      "value": "0x1"
    },
    "6870": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10774,
        10777
      ],
      "op": "ADD",
      "path": "3"
    },
    "6871": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10270,
        10789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18F7"
    },
    "6874": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10270,
        10789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6875": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10270,
        10789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10805,
        10812
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 51
    },
    "6878": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10805,
        10812
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6879": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9319,
        10819
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6880": {
      "op": "POP"
    },
    "6881": {
      "op": "POP"
    },
    "6882": {
      "op": "POP"
    },
    "6883": {
      "op": "POP"
    },
    "6884": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        9319,
        10819
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6885": {
      "fn": "Governance.createProposal",
      "offset": [
        13619,
        14381
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6886": {
      "offset": [
        24147,
        24197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6888": {
      "fn": "Governance.createProposal",
      "offset": [
        24147,
        24197
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6895": {
      "op": "SHL"
    },
    "6896": {
      "offset": [
        24147,
        24197
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6897": {
      "fn": "Governance.createProposal",
      "offset": [
        24147,
        24197
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6900": {
      "offset": [
        24147,
        24197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6902": {
      "fn": "Governance.createProposal",
      "offset": [
        24147,
        24197
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6903": {
      "fn": "Governance.createProposal",
      "offset": [
        24147,
        24197
      ],
      "op": "ADD",
      "path": "3"
    },
    "6904": {
      "op": "MSTORE"
    },
    "6905": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6909": {
      "op": "DUP3"
    },
    "6910": {
      "op": "ADD"
    },
    "6911": {
      "op": "MSTORE"
    },
    "6912": {
      "op": "PUSH20",
      "value": "0x135D5CDD081899481BDB881D1A1948189BD85C99"
    },
    "6933": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "6935": {
      "op": "SHL"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6938": {
      "op": "DUP3"
    },
    "6939": {
      "op": "ADD"
    },
    "6940": {
      "op": "MSTORE"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6943": {
      "op": "ADD"
    },
    "6944": {
      "offset": [
        24147,
        24197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "6947": {
      "op": "JUMP"
    },
    "6948": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6949": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15727,
        15754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6951": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15757,
        15806
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B3F"
    },
    "6954": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15781,
        15805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "6956": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6957": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "6959": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6960": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6961": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "6962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6964": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6966": {
      "op": "SHL"
    },
    "6967": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6968": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6969": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "6970": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6971": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "6972": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "6973": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6974": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6975": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15757,
        15806
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6976": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15727,
        15806
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6977": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15727,
        15806
      ],
      "op": "POP",
      "path": "3"
    },
    "6978": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15816,
        15834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B49"
    },
    "6981": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15816,
        15834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FFB"
    },
    "6984": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15816,
        15834
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6985": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15816,
        15834
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6986": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15844,
        15858
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6988": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15844,
        15858
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6989": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15955,
        16721
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15977,
        15996
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6991": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15973,
        15974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6992": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15973,
        15996
      ],
      "op": "LT",
      "path": "3"
    },
    "6993": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15955,
        16721
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6994": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15955,
        16721
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E54"
    },
    "6997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15955,
        16721
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6998": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16030,
        16078
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 52,
      "value": "0x1B60"
    },
    "7001": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16050,
        16074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "7003": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16076,
        16077
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16030,
        16049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBC"
    },
    "7007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16030,
        16078
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7008": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16030,
        16078
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7009": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16022,
        16079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 53
    },
    "7012": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7013": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7014": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "7016": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7018": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7019": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7021": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7023": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7024": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7025": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "7030": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7031": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7032": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7034": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16022,
        16079
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7038": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16022,
        16079
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7039": {
      "op": "POP"
    },
    "7040": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7041": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7043": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7044": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7045": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16102,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8E"
    },
    "7049": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7050": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "7053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7055": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7063": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DIV",
      "path": "3"
    },
    "7064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MUL",
      "path": "3"
    },
    "7065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7067": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7070": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7071": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7072": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7073": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7074": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7076": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7077": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7078": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7079": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7086": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7087": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7088": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7089": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BBA"
    },
    "7093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "7097": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7099": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7100": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7101": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C07"
    },
    "7104": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7105": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7106": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7108": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "LT",
      "path": "3"
    },
    "7109": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BDC"
    },
    "7112": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7113": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "7116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7117": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7118": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7119": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DIV",
      "path": "3"
    },
    "7120": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MUL",
      "path": "3"
    },
    "7121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7122": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7123": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7124": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7126": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7127": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7128": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C07"
    },
    "7131": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7135": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7137": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7139": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7140": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7142": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7144": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7146": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7147": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7148": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7149": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7152": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7154": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7155": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7158": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "GT",
      "path": "3"
    },
    "7162": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BEA"
    },
    "7165": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7166": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7167": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7168": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SUB",
      "path": "3"
    },
    "7169": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7171": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "AND",
      "path": "3"
    },
    "7172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7173": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7174": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7175": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7176": {
      "op": "POP"
    },
    "7177": {
      "op": "POP"
    },
    "7178": {
      "op": "POP"
    },
    "7179": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7180": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7181": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7182": {
      "op": "POP"
    },
    "7183": {
      "op": "POP"
    },
    "7184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7186": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7187": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7189": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "7195": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7196": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "AND",
      "path": "3"
    },
    "7198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7200": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7201": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7203": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7208": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7210": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7211": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7212": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7213": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7216": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7220": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7221": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7222": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7223": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7225": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7226": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7227": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7228": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7229": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "7231": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7232": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "AND",
      "path": "3"
    },
    "7233": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "7235": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7236": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7237": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7238": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "7241": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7242": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7243": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DIV",
      "path": "3"
    },
    "7244": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "7248": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "AND",
      "path": "3"
    },
    "7249": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "7251": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7252": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7253": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7258": {
      "op": "SHL"
    },
    "7259": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7260": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DIV",
      "path": "3"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7267": {
      "op": "SHL"
    },
    "7268": {
      "op": "SUB"
    },
    "7269": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "AND",
      "path": "3"
    },
    "7270": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "7272": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7273": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7274": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7279": {
      "op": "SHL"
    },
    "7280": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7281": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DIV",
      "path": "3"
    },
    "7282": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "7285": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7286": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7287": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "AND",
      "path": "3"
    },
    "7288": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "7290": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7291": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7292": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7297": {
      "op": "SHL"
    },
    "7298": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7299": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DIV",
      "path": "3"
    },
    "7300": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "AND",
      "path": "3"
    },
    "7301": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7302": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7303": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7304": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7309": {
      "op": "SHL"
    },
    "7310": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7311": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DIV",
      "path": "3"
    },
    "7312": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7313": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "AND",
      "path": "3"
    },
    "7314": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "7317": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7318": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7319": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "ADD",
      "path": "3"
    },
    "7320": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16093,
        16115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7321": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16169
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7322": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16169
      ],
      "op": "ADD",
      "path": "3"
    },
    "7323": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16169
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7324": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16169
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7325": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16169
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7326": {
      "op": "POP"
    },
    "7327": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16172,
        16187
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "7328": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16187
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7329": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16187
      ],
      "op": "AND",
      "path": "3"
    },
    "7330": {
      "branch": 132,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16187
      ],
      "op": "LT",
      "path": "3"
    },
    "7331": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16213
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7332": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16213
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7333": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16213
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CB9"
    },
    "7336": {
      "branch": 132,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16213
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7337": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16213
      ],
      "op": "POP",
      "path": "3"
    },
    "7338": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16207,
        16213
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7339": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16191,
        16197
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7340": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16191,
        16203
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7342": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16191,
        16203
      ],
      "op": "ADD",
      "path": "3"
    },
    "7343": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16191,
        16203
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7344": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16191,
        16213
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "7350": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16191,
        16213
      ],
      "op": "AND",
      "path": "3"
    },
    "7351": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16191,
        16213
      ],
      "op": "EQ",
      "path": "3"
    },
    "7352": {
      "branch": 133,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16191,
        16213
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7353": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16213
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7354": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16242
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7355": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16242
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7356": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16242
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CCE"
    },
    "7359": {
      "branch": 133,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16242
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7360": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16242
      ],
      "op": "POP",
      "path": "3"
    },
    "7361": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16236,
        16242
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7362": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16217,
        16223
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7363": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16217,
        16233
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "7366": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16217,
        16233
      ],
      "op": "ADD",
      "path": "3"
    },
    "7367": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16217,
        16233
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7368": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16217,
        16242
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "7371": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16217,
        16242
      ],
      "op": "AND",
      "path": "3"
    },
    "7372": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16217,
        16242
      ],
      "op": "EQ",
      "path": "3"
    },
    "7373": {
      "branch": 134,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16217,
        16242
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7374": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16133,
        16242
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7375": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16129,
        16683
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7376": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16129,
        16683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4C"
    },
    "7379": {
      "branch": 134,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16129,
        16683
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7380": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16421,
        16455
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 54,
      "value": "0xFFFF"
    },
    "7383": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16421,
        16455
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7384": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16421,
        16455
      ],
      "op": "AND",
      "path": "3"
    },
    "7385": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16421,
        16438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "7387": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16421,
        16438
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7388": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16421,
        16438
      ],
      "op": "ADD",
      "path": "3"
    },
    "7389": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16421,
        16455
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7390": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16537,
        16553
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 55,
      "value": "0xC"
    },
    "7392": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16537,
        16553
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7393": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16519,
        16553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CEA"
    },
    "7396": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16519,
        16553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7397": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16519,
        16534
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "7398": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16519,
        16553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B93"
    },
    "7401": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16519,
        16553
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7402": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16519,
        16553
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7403": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16473,
        16554
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "7409": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16473,
        16554
      ],
      "op": "AND",
      "path": "3"
    },
    "7410": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16473,
        16509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "7413": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16473,
        16509
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7414": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16473,
        16509
      ],
      "op": "ADD",
      "path": "3"
    },
    "7415": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16473,
        16554
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7416": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 56,
      "value": "0x0"
    },
    "7418": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7419": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7420": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7421": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16577
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "7423": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7425": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7426": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7428": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7429": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7430": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7431": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7432": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16473,
        16479
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7433": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16473,
        16479
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7434": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7435": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7436": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7437": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D16"
    },
    "7440": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7441": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16585
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7442": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ABE"
    },
    "7445": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16572,
        16594
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7446": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7447": {
      "op": "POP"
    },
    "7448": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7450": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7451": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7452": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7453": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7454": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7456": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7457": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7458": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7459": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7460": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7466": {
      "op": "NOT"
    },
    "7467": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7468": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "7474": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7475": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7476": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7477": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "OR",
      "path": "3"
    },
    "7478": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7479": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7480": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7482": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7483": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7484": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7485": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7486": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7488": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7489": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7490": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7491": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7493": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7494": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7495": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7496": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7498": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7499": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7500": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7501": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "7503": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7504": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7505": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7506": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7508": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7509": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7510": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7511": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7512": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7513": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "7515": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7516": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7517": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7518": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "7520": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP9",
      "path": "3"
    },
    "7521": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7522": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7523": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "7525": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP10",
      "path": "3"
    },
    "7526": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7527": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7528": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "7531": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7532": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP12",
      "path": "3"
    },
    "7533": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7534": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7535": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "7538": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7539": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP12",
      "path": "3"
    },
    "7540": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "ADD",
      "path": "3"
    },
    "7541": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7542": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "7544": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7545": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP11",
      "path": "3"
    },
    "7546": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7547": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7552": {
      "op": "NOT"
    },
    "7553": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7554": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "7555": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7556": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7557": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7558": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7559": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "OR",
      "path": "3"
    },
    "7560": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "7564": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7565": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7566": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7567": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7568": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7569": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MUL",
      "path": "3"
    },
    "7570": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7571": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7572": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7573": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "OR",
      "path": "3"
    },
    "7574": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "7580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7582": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7584": {
      "op": "SHL"
    },
    "7585": {
      "op": "SUB"
    },
    "7586": {
      "op": "NOT"
    },
    "7587": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7592": {
      "op": "SHL"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7597": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7599": {
      "op": "SHL"
    },
    "7600": {
      "op": "SUB"
    },
    "7601": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7602": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7603": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7604": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7605": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7606": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7607": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MUL",
      "path": "3"
    },
    "7608": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7613": {
      "op": "SHL"
    },
    "7614": {
      "op": "NOT"
    },
    "7615": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7616": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "OR",
      "path": "3"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7621": {
      "op": "SHL"
    },
    "7622": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "7625": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7626": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7627": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7628": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MUL",
      "path": "3"
    },
    "7629": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "OR",
      "path": "3"
    },
    "7630": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7640": {
      "op": "SHL"
    },
    "7641": {
      "op": "NOT"
    },
    "7642": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7647": {
      "op": "SHL"
    },
    "7648": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7649": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7650": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "7651": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7652": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MUL",
      "path": "3"
    },
    "7653": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7659": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7661": {
      "op": "SHL"
    },
    "7662": {
      "op": "NOT"
    },
    "7663": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7664": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "7665": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7666": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "7667": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "OR",
      "path": "3"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7670": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7672": {
      "op": "SHL"
    },
    "7673": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7674": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7675": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7676": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "AND",
      "path": "3"
    },
    "7677": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7678": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7679": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7680": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "MUL",
      "path": "3"
    },
    "7681": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "OR",
      "path": "3"
    },
    "7682": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7683": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7684": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16572,
        16594
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7687": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 57
    },
    "7688": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7689": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7690": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "7692": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7693": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7694": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7695": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7696": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7697": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7698": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7699": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7700": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7701": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268"
    },
    "7734": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7735": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E43"
    },
    "7738": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7739": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16638,
        16644
      ],
      "op": "DUP9",
      "path": "3"
    },
    "7740": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16638,
        16644
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7741": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7742": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16654,
        16667
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7743": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CA1"
    },
    "7746": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16617,
        16668
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7747": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7748": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7750": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7751": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7752": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7753": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "SUB",
      "path": "3"
    },
    "7754": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7755": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16617,
        16668
      ],
      "op": "LOG1",
      "path": "3"
    },
    "7756": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16129,
        16683
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7757": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16706,
        16709
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 58,
      "value": "0x1"
    },
    "7759": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16706,
        16709
      ],
      "op": "ADD",
      "path": "3"
    },
    "7760": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15955,
        16721
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B4D"
    },
    "7763": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15955,
        16721
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7764": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15955,
        16721
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7765": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15955,
        16721
      ],
      "op": "POP",
      "path": "3"
    },
    "7766": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15717,
        16780
      ],
      "op": "POP",
      "path": "3"
    },
    "7767": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15717,
        16780
      ],
      "op": "POP",
      "path": "3"
    },
    "7768": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15717,
        16780
      ],
      "op": "POP",
      "path": "3"
    },
    "7769": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15652,
        16780
      ],
      "op": "POP",
      "path": "3"
    },
    "7770": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        15652,
        16780
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7771": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7772": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19461
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 59,
      "value": "0x2"
    },
    "7774": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19461
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7775": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7777": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7778": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7785": {
      "op": "SHL"
    },
    "7786": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7787": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7788": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7790": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7791": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "ADD",
      "path": "3"
    },
    "7792": {
      "op": "DUP6"
    },
    "7793": {
      "op": "SWAP1"
    },
    "7794": {
      "op": "MSTORE"
    },
    "7795": {
      "fn": "Governance.submitVerification",
      "offset": [
        19481,
        19491
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7796": {
      "fn": "Governance.submitVerification",
      "offset": [
        19481,
        19491
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7803": {
      "op": "SHL"
    },
    "7804": {
      "op": "SUB"
    },
    "7805": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19461
      ],
      "op": "AND",
      "path": "3"
    },
    "7806": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19461
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7807": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "7812": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19469
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7815": {
      "op": "ADD"
    },
    "7816": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7818": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7820": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7821": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7822": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7823": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "SUB",
      "path": "3"
    },
    "7824": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7825": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7826": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "GAS",
      "path": "3"
    },
    "7827": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "7828": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7829": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7830": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7831": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EA4"
    },
    "7834": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7835": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7836": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7838": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7839": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7840": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7841": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7843": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7844": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7845": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "POP",
      "path": "3"
    },
    "7846": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "POP",
      "path": "3"
    },
    "7847": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "POP",
      "path": "3"
    },
    "7848": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "POP",
      "path": "3"
    },
    "7849": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7851": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7852": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7853": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7855": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "NOT",
      "path": "3"
    },
    "7856": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7858": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7859": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "ADD",
      "path": "3"
    },
    "7860": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "AND",
      "path": "3"
    },
    "7861": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7862": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "ADD",
      "path": "3"
    },
    "7863": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7864": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7866": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7867": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "POP",
      "path": "3"
    },
    "7868": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7869": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "ADD",
      "path": "3"
    },
    "7870": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7871": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC8"
    },
    "7874": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7875": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7876": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C35"
    },
    "7879": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19451,
        19477
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7880": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7887": {
      "op": "SHL"
    },
    "7888": {
      "op": "SUB"
    },
    "7889": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19491
      ],
      "op": "AND",
      "path": "3"
    },
    "7890": {
      "branch": 135,
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19491
      ],
      "op": "EQ",
      "path": "3"
    },
    "7891": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7892": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19528
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7893": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EF9"
    },
    "7896": {
      "branch": 135,
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7897": {
      "op": "POP"
    },
    "7898": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19509
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7900": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19509
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7901": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19509
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7902": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19509
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7903": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "7905": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19509
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7907": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19509
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7908": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19509
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7910": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19509
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7911": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19509
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7912": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7914": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19520
      ],
      "op": "ADD",
      "path": "3"
    },
    "7915": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19520
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7920": {
      "op": "SHL"
    },
    "7921": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19520
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7922": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19520
      ],
      "op": "DIV",
      "path": "3"
    },
    "7923": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "7926": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19520
      ],
      "op": "AND",
      "path": "3"
    },
    "7927": {
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19528
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7928": {
      "branch": 136,
      "fn": "Governance.submitVerification",
      "offset": [
        19495,
        19528
      ],
      "op": "EQ",
      "path": "3"
    },
    "7929": {
      "fn": "Governance.submitVerification",
      "offset": [
        19451,
        19528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7930": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F45"
    },
    "7933": {
      "branch": 136,
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7934": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7936": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7943": {
      "op": "SHL"
    },
    "7944": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7945": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7948": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7950": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7951": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "ADD",
      "path": "3"
    },
    "7952": {
      "op": "DUP2"
    },
    "7953": {
      "op": "SWAP1"
    },
    "7954": {
      "op": "MSTORE"
    },
    "7955": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7957": {
      "op": "DUP3"
    },
    "7958": {
      "op": "ADD"
    },
    "7959": {
      "op": "MSTORE"
    },
    "7960": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "7993": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7995": {
      "op": "DUP3"
    },
    "7996": {
      "op": "ADD"
    },
    "7997": {
      "op": "MSTORE"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8000": {
      "op": "ADD"
    },
    "8001": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "8004": {
      "op": "JUMP"
    },
    "8005": {
      "fn": "Governance.submitVerification",
      "offset": [
        19443,
        19565
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8006": {
      "fn": "Governance.submitVerification",
      "offset": [
        19600,
        19601
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 60,
      "value": "0x0"
    },
    "8008": {
      "fn": "Governance.submitVerification",
      "offset": [
        19583,
        19590
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8009": {
      "fn": "Governance.submitVerification",
      "offset": [
        19583,
        19597
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8010": {
      "branch": 137,
      "fn": "Governance.submitVerification",
      "offset": [
        19583,
        19601
      ],
      "op": "GT",
      "path": "3"
    },
    "8011": {
      "fn": "Governance.submitVerification",
      "offset": [
        19575,
        19602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F53"
    },
    "8014": {
      "branch": 137,
      "fn": "Governance.submitVerification",
      "offset": [
        19575,
        19602
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8015": {
      "fn": "Governance.submitVerification",
      "offset": [
        19575,
        19602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8017": {
      "fn": "Governance.submitVerification",
      "offset": [
        19575,
        19602
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8018": {
      "fn": "Governance.submitVerification",
      "offset": [
        19575,
        19602
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8019": {
      "fn": "Governance.submitVerification",
      "offset": [
        19575,
        19602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8020": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8022": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8023": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8024": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8025": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "8027": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8029": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8030": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8032": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8033": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8034": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8035": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8036": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8037": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "8040": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8041": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8042": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8043": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8044": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8045": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8046": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8047": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8048": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8049": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8050": {
      "fn": "Governance.submitVerification",
      "offset": [
        19634,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8051": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F7B"
    },
    "8054": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8055": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "8058": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8059": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8060": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8061": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8063": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8064": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8066": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8067": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8068": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DIV",
      "path": "3"
    },
    "8069": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MUL",
      "path": "3"
    },
    "8070": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8072": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8073": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8075": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8076": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8077": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8078": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8079": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8081": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8082": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8083": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8084": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8085": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8086": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8087": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8088": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8089": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8091": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8092": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8093": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8094": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8095": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA7"
    },
    "8098": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8099": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "8102": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8103": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8104": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8105": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8106": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FF4"
    },
    "8109": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8110": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8111": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8113": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "LT",
      "path": "3"
    },
    "8114": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FC9"
    },
    "8117": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8118": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "8121": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8122": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8123": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8124": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DIV",
      "path": "3"
    },
    "8125": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MUL",
      "path": "3"
    },
    "8126": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8127": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8128": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8129": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8131": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8132": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8133": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FF4"
    },
    "8136": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8137": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8138": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8139": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8140": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8141": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8142": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8144": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8145": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8147": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8149": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8150": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8151": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8152": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8153": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8154": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8155": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8156": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8157": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "8159": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8160": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8161": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8163": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8164": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8165": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8166": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "GT",
      "path": "3"
    },
    "8167": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD7"
    },
    "8170": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8171": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8172": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8173": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SUB",
      "path": "3"
    },
    "8174": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8176": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "AND",
      "path": "3"
    },
    "8177": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8178": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8179": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8180": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8181": {
      "op": "POP"
    },
    "8182": {
      "op": "POP"
    },
    "8183": {
      "op": "POP"
    },
    "8184": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8185": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8186": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8187": {
      "op": "POP"
    },
    "8188": {
      "op": "POP"
    },
    "8189": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "8191": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8192": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8193": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8194": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8195": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "8201": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8202": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8203": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "AND",
      "path": "3"
    },
    "8204": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8206": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8207": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8208": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8209": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8211": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8212": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8213": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8214": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8216": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8217": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8218": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8219": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "8221": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8222": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8223": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8224": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "8226": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8227": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8228": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8229": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8231": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8232": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8233": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8234": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8235": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "8237": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8238": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "AND",
      "path": "3"
    },
    "8239": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "8241": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8242": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8243": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8244": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "8247": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8248": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8249": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DIV",
      "path": "3"
    },
    "8250": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "8254": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "AND",
      "path": "3"
    },
    "8255": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "8257": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8258": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8259": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8264": {
      "op": "SHL"
    },
    "8265": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8266": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DIV",
      "path": "3"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8271": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8273": {
      "op": "SHL"
    },
    "8274": {
      "op": "SUB"
    },
    "8275": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "AND",
      "path": "3"
    },
    "8276": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "8278": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8279": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8280": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8285": {
      "op": "SHL"
    },
    "8286": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8287": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DIV",
      "path": "3"
    },
    "8288": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "8291": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8292": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8293": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "AND",
      "path": "3"
    },
    "8294": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "8296": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8297": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8298": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8303": {
      "op": "SHL"
    },
    "8304": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8305": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DIV",
      "path": "3"
    },
    "8306": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8307": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "AND",
      "path": "3"
    },
    "8308": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8309": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8310": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8311": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8316": {
      "op": "SHL"
    },
    "8317": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8318": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8319": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "DIV",
      "path": "3"
    },
    "8320": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8321": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "8322": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "AND",
      "path": "3"
    },
    "8323": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "8326": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8327": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8328": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8329": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8330": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8331": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8332": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8333": {
      "fn": "Governance.submitVerification",
      "offset": [
        19772,
        19788
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8334": {
      "fn": "Governance.submitVerification",
      "offset": [
        19772,
        19788
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8335": {
      "fn": "Governance.submitVerification",
      "offset": [
        19772,
        19788
      ],
      "op": "ADD",
      "path": "3"
    },
    "8336": {
      "fn": "Governance.submitVerification",
      "offset": [
        19772,
        19788
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8337": {
      "fn": "Governance.submitVerification",
      "offset": [
        19772,
        19788
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8338": {
      "fn": "Governance.submitVerification",
      "offset": [
        19772,
        19788
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8339": {
      "op": "POP"
    },
    "8340": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8341": {
      "fn": "Governance.submitVerification",
      "offset": [
        19613,
        19648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8342": {
      "fn": "Governance.submitVerification",
      "offset": [
        19772,
        19792
      ],
      "op": "AND",
      "path": "3"
    },
    "8343": {
      "branch": 138,
      "fn": "Governance.submitVerification",
      "offset": [
        19772,
        19792
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8344": {
      "fn": "Governance.submitVerification",
      "offset": [
        19769,
        19974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2110"
    },
    "8347": {
      "branch": 138,
      "fn": "Governance.submitVerification",
      "offset": [
        19769,
        19974
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8348": {
      "fn": "Governance.submitVerification",
      "offset": [
        19812,
        19821
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8350": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19964
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8351": {
      "fn": "Governance.submitVerification",
      "offset": [
        19831,
        19838
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8352": {
      "fn": "Governance.submitVerification",
      "offset": [
        19831,
        19845
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8353": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19828
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8354": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19845
      ],
      "op": "LT",
      "path": "3"
    },
    "8355": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19964
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8356": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19964
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x210E"
    },
    "8359": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19964
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8360": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19912
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 61
    },
    "8361": {
      "fn": "Governance.submitVerification",
      "offset": [
        19913,
        19914
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8362": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8363": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8364": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8365": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "LT",
      "path": "3"
    },
    "8366": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20B9"
    },
    "8369": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8370": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20B9"
    },
    "8373": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "8376": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19905,
        19915
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8377": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8378": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8380": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "MUL",
      "path": "3"
    },
    "8381": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8383": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "ADD",
      "path": "3"
    },
    "8384": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "ADD",
      "path": "3"
    },
    "8385": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        19915
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8386": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8388": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8389": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8391": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "ADD",
      "path": "3"
    },
    "8392": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20D3"
    },
    "8395": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8396": {
      "op": "DUP2"
    },
    "8397": {
      "op": "MSTORE"
    },
    "8398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8400": {
      "op": "ADD"
    },
    "8401": {
      "op": "SWAP1"
    },
    "8402": {
      "op": "JUMP"
    },
    "8403": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8404": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8406": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8407": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8409": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8410": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8411": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "SUB",
      "path": "3"
    },
    "8412": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "SUB",
      "path": "3"
    },
    "8413": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8414": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8415": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8416": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8418": {
      "fn": "Governance.submitVerification",
      "offset": [
        19888,
        19916
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8419": {
      "fn": "Governance.submitVerification",
      "offset": [
        19878,
        19917
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8420": {
      "fn": "Governance.submitVerification",
      "offset": [
        19878,
        19917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8421": {
      "fn": "Governance.submitVerification",
      "offset": [
        19878,
        19917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8422": {
      "fn": "Governance.submitVerification",
      "offset": [
        19878,
        19917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8424": {
      "fn": "Governance.submitVerification",
      "offset": [
        19878,
        19917
      ],
      "op": "ADD",
      "path": "3"
    },
    "8425": {
      "fn": "Governance.submitVerification",
      "offset": [
        19878,
        19917
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8426": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19872
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8427": {
      "fn": "Governance.submitVerification",
      "offset": [
        19873,
        19874
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8428": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8429": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8430": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8431": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "LT",
      "path": "3"
    },
    "8432": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20FB"
    },
    "8435": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8436": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20FB"
    },
    "8439": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "8442": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19865,
        19875
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8443": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8444": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8446": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8447": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8448": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "MUL",
      "path": "3"
    },
    "8449": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8450": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8451": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8452": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "ADD",
      "path": "3"
    },
    "8453": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19875
      ],
      "op": "ADD",
      "path": "3"
    },
    "8454": {
      "fn": "Governance.submitVerification",
      "offset": [
        19865,
        19917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8455": {
      "fn": "Governance.submitVerification",
      "offset": [
        19945,
        19948
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 62,
      "value": "0x1"
    },
    "8457": {
      "fn": "Governance.submitVerification",
      "offset": [
        19945,
        19948
      ],
      "op": "ADD",
      "path": "3"
    },
    "8458": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19964
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x209E"
    },
    "8461": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19964
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8462": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19964
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8463": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19964
      ],
      "op": "POP",
      "path": "3"
    },
    "8464": {
      "fn": "Governance.submitVerification",
      "offset": [
        19769,
        19974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8465": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        19997
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8467": {
      "fn": "Governance.submitVerification",
      "offset": [
        20027,
        20034
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8468": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8470": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8471": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8473": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "ADD",
      "path": "3"
    },
    "8474": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2123"
    },
    "8477": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8478": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8479": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3930"
    },
    "8482": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20010,
        20035
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8483": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8484": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8486": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8487": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8489": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8490": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8491": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "SUB",
      "path": "3"
    },
    "8492": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "SUB",
      "path": "3"
    },
    "8493": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8494": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8495": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8496": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8498": {
      "fn": "Governance.submitVerification",
      "offset": [
        20010,
        20035
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8499": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20036
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8500": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20036
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8501": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8502": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20036
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8504": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20036
      ],
      "op": "ADD",
      "path": "3"
    },
    "8505": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20036
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8506": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8507": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20036
      ],
      "op": "POP",
      "path": "3"
    },
    "8508": {
      "fn": "Governance.submitVerification",
      "offset": [
        20047,
        20066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8510": {
      "fn": "Governance.submitVerification",
      "offset": [
        20084,
        20090
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8511": {
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20075
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8512": {
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20080
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8514": {
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20080
      ],
      "op": "ADD",
      "path": "3"
    },
    "8515": {
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20080
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8516": {
      "branch": 139,
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20090
      ],
      "op": "EQ",
      "path": "3"
    },
    "8517": {
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20098
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x214F"
    },
    "8520": {
      "branch": 139,
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20098
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8521": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8523": {
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20098
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2152"
    },
    "8526": {
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20098
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8527": {
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20098
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8528": {
      "fn": "Governance.submitVerification",
      "offset": [
        20093,
        20094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "8530": {
      "fn": "Governance.submitVerification",
      "offset": [
        20069,
        20098
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8531": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20156
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 63,
      "value": "0x20"
    },
    "8533": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20156
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8534": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8535": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20156
      ],
      "op": "ADD",
      "path": "3"
    },
    "8536": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8537": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8539": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8540": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8541": {
      "op": "DUP12"
    },
    "8542": {
      "op": "DUP2"
    },
    "8543": {
      "op": "MSTORE"
    },
    "8544": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8550": {
      "op": "SWAP1"
    },
    "8551": {
      "op": "SWAP3"
    },
    "8552": {
      "op": "AND"
    },
    "8553": {
      "op": "SWAP3"
    },
    "8554": {
      "op": "DUP3"
    },
    "8555": {
      "op": "ADD"
    },
    "8556": {
      "op": "SWAP3"
    },
    "8557": {
      "op": "SWAP1"
    },
    "8558": {
      "op": "SWAP3"
    },
    "8559": {
      "op": "MSTORE"
    },
    "8560": {
      "op": "SWAP1"
    },
    "8561": {
      "op": "DUP2"
    },
    "8562": {
      "op": "ADD"
    },
    "8563": {
      "op": "DUP9"
    },
    "8564": {
      "op": "SWAP1"
    },
    "8565": {
      "op": "MSTORE"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8568": {
      "op": "DUP2"
    },
    "8569": {
      "op": "ADD"
    },
    "8570": {
      "op": "DUP5"
    },
    "8571": {
      "op": "SWAP1"
    },
    "8572": {
      "op": "MSTORE"
    },
    "8573": {
      "fn": "Governance.submitVerification",
      "offset": [
        20047,
        20098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "8575": {
      "fn": "Governance.submitVerification",
      "offset": [
        20047,
        20098
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8576": {
      "fn": "Governance.submitVerification",
      "offset": [
        20047,
        20098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8577": {
      "fn": "Governance.submitVerification",
      "offset": [
        20047,
        20098
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8578": {
      "fn": "Governance.submitVerification",
      "offset": [
        20047,
        20098
      ],
      "op": "AND",
      "path": "3"
    },
    "8579": {
      "fn": "Governance.submitVerification",
      "offset": [
        20188,
        20189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "8581": {
      "fn": "Governance.submitVerification",
      "offset": [
        20175,
        20189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8582": {
      "fn": "Governance.submitVerification",
      "offset": [
        20175,
        20189
      ],
      "op": "EQ",
      "path": "3"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8585": {
      "op": "DUP4"
    },
    "8586": {
      "op": "ADD"
    },
    "8587": {
      "op": "MSTORE"
    },
    "8588": {
      "fn": "Governance.submitVerification",
      "offset": [
        20047,
        20098
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8589": {
      "op": "POP"
    },
    "8590": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "8623": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8626": {
      "op": "ADD"
    },
    "8627": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8629": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8630": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8631": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8632": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "SUB",
      "path": "3"
    },
    "8633": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8634": {
      "fn": "Governance.submitVerification",
      "offset": [
        20114,
        20190
      ],
      "op": "LOG1",
      "path": "3"
    },
    "8635": {
      "fn": "Governance.submitVerification",
      "offset": [
        20205,
        20216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8636": {
      "fn": "Governance.submitVerification",
      "offset": [
        20219,
        20220
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "8638": {
      "branch": 140,
      "fn": "Governance.submitVerification",
      "offset": [
        20205,
        20220
      ],
      "op": "SUB",
      "path": "3"
    },
    "8639": {
      "fn": "Governance.submitVerification",
      "offset": [
        20201,
        22782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x247C"
    },
    "8642": {
      "branch": 140,
      "fn": "Governance.submitVerification",
      "offset": [
        20201,
        22782
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8643": {
      "fn": "Governance.submitVerification",
      "offset": [
        20299,
        20312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8645": {
      "fn": "Governance.submitVerification",
      "offset": [
        20330,
        20331
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8647": {
      "fn": "Governance.submitVerification",
      "offset": [
        20315,
        20321
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8648": {
      "fn": "Governance.submitVerification",
      "offset": [
        20315,
        20329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "8650": {
      "fn": "Governance.submitVerification",
      "offset": [
        20315,
        20329
      ],
      "op": "ADD",
      "path": "3"
    },
    "8651": {
      "fn": "Governance.submitVerification",
      "offset": [
        20315,
        20329
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8652": {
      "fn": "Governance.submitVerification",
      "offset": [
        20315,
        20331
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21D5"
    },
    "8655": {
      "fn": "Governance.submitVerification",
      "offset": [
        20315,
        20331
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8656": {
      "fn": "Governance.submitVerification",
      "offset": [
        20315,
        20331
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8657": {
      "fn": "Governance.submitVerification",
      "offset": [
        20315,
        20331
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D6C"
    },
    "8660": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20315,
        20331
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8661": {
      "fn": "Governance.submitVerification",
      "offset": [
        20315,
        20331
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8662": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8664": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20395
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8665": {
      "fn": "Governance.submitVerification",
      "offset": [
        20404,
        20421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "8667": {
      "fn": "Governance.submitVerification",
      "offset": [
        20404,
        20421
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8668": {
      "fn": "Governance.submitVerification",
      "offset": [
        20404,
        20421
      ],
      "op": "ADD",
      "path": "3"
    },
    "8669": {
      "fn": "Governance.submitVerification",
      "offset": [
        20404,
        20421
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8670": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8672": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8673": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8680": {
      "op": "SHL"
    },
    "8681": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8682": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8683": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8686": {
      "op": "SWAP1"
    },
    "8687": {
      "op": "SWAP2"
    },
    "8688": {
      "op": "AND"
    },
    "8689": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8691": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8692": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "ADD",
      "path": "3"
    },
    "8693": {
      "op": "MSTORE"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8700": {
      "op": "SHL"
    },
    "8701": {
      "op": "SUB"
    },
    "8702": {
      "fn": "Governance.submitVerification",
      "offset": [
        20299,
        20331
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8703": {
      "fn": "Governance.submitVerification",
      "offset": [
        20299,
        20331
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8704": {
      "fn": "Governance.submitVerification",
      "offset": [
        20299,
        20331
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8705": {
      "fn": "Governance.submitVerification",
      "offset": [
        20299,
        20331
      ],
      "op": "AND",
      "path": "3"
    },
    "8706": {
      "fn": "Governance.submitVerification",
      "offset": [
        20299,
        20331
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8707": {
      "op": "POP"
    },
    "8708": {
      "fn": "Governance.submitVerification",
      "offset": [
        20345,
        20374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8710": {
      "fn": "Governance.submitVerification",
      "offset": [
        20345,
        20374
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8717": {
      "op": "SHL"
    },
    "8718": {
      "op": "SUB"
    },
    "8719": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8720": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8721": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20395
      ],
      "op": "AND",
      "path": "3"
    },
    "8722": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8723": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20403
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "8728": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8731": {
      "op": "ADD"
    },
    "8732": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8734": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8736": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8737": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8738": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8739": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "SUB",
      "path": "3"
    },
    "8740": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8741": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8742": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "GAS",
      "path": "3"
    },
    "8743": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "8744": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8745": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8746": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8747": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2238"
    },
    "8750": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8751": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8752": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8754": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8755": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "8756": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8757": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8759": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8760": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8761": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "POP",
      "path": "3"
    },
    "8762": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "POP",
      "path": "3"
    },
    "8763": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "POP",
      "path": "3"
    },
    "8764": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "POP",
      "path": "3"
    },
    "8765": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8767": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8768": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8769": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8771": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "NOT",
      "path": "3"
    },
    "8772": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8774": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8775": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "ADD",
      "path": "3"
    },
    "8776": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "AND",
      "path": "3"
    },
    "8777": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8778": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "ADD",
      "path": "3"
    },
    "8779": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8780": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8782": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8783": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "POP",
      "path": "3"
    },
    "8784": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8785": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "ADD",
      "path": "3"
    },
    "8786": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8787": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x225C"
    },
    "8790": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8791": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8792": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C35"
    },
    "8795": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20385,
        20422
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8796": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20422
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8797": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20501
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 64,
      "value": "0x2"
    },
    "8799": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20501
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8800": {
      "fn": "Governance.submitVerification",
      "offset": [
        20534,
        20546
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8802": {
      "fn": "Governance.submitVerification",
      "offset": [
        20534,
        20546
      ],
      "op": "DUP9",
      "path": "3"
    },
    "8803": {
      "fn": "Governance.submitVerification",
      "offset": [
        20534,
        20546
      ],
      "op": "ADD",
      "path": "3"
    },
    "8804": {
      "fn": "Governance.submitVerification",
      "offset": [
        20534,
        20546
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8805": {
      "fn": "Governance.submitVerification",
      "offset": [
        20548,
        20564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "8807": {
      "fn": "Governance.submitVerification",
      "offset": [
        20548,
        20564
      ],
      "op": "DUP10",
      "path": "3"
    },
    "8808": {
      "fn": "Governance.submitVerification",
      "offset": [
        20548,
        20564
      ],
      "op": "ADD",
      "path": "3"
    },
    "8809": {
      "fn": "Governance.submitVerification",
      "offset": [
        20548,
        20564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8810": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8812": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8813": {
      "op": "PUSH4",
      "value": "0x434AA62F"
    },
    "8818": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8820": {
      "op": "SHL"
    },
    "8821": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8822": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8823": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8829": {
      "op": "SWAP1"
    },
    "8830": {
      "op": "SWAP3"
    },
    "8831": {
      "op": "AND"
    },
    "8832": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8834": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8835": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "ADD",
      "path": "3"
    },
    "8836": {
      "op": "MSTORE"
    },
    "8837": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "8841": {
      "op": "AND"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8844": {
      "op": "DUP3"
    },
    "8845": {
      "op": "ADD"
    },
    "8846": {
      "op": "MSTORE"
    },
    "8847": {
      "fn": "Governance.submitVerification",
      "offset": [
        20345,
        20423
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8848": {
      "fn": "Governance.submitVerification",
      "offset": [
        20345,
        20423
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8849": {
      "op": "POP"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8856": {
      "op": "SHL"
    },
    "8857": {
      "op": "SUB"
    },
    "8858": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20501
      ],
      "op": "AND",
      "path": "3"
    },
    "8859": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8860": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20533
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x86954C5E"
    },
    "8865": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8868": {
      "op": "ADD"
    },
    "8869": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8871": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8873": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8874": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8875": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8876": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "SUB",
      "path": "3"
    },
    "8877": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8878": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8880": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8881": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8882": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "8883": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8884": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8885": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8886": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22BE"
    },
    "8889": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8890": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8892": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8893": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8894": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8895": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "POP",
      "path": "3"
    },
    "8896": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "GAS",
      "path": "3"
    },
    "8897": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "CALL",
      "path": "3"
    },
    "8898": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8899": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8900": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8901": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "8904": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8905": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8906": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8908": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8909": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "8910": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8911": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8913": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8914": {
      "fn": "Governance.submitVerification",
      "offset": [
        20491,
        20565
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8915": {
      "op": "POP"
    },
    "8916": {
      "op": "POP"
    },
    "8917": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 65,
      "value": "0x2"
    },
    "8919": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8920": {
      "fn": "Governance.submitVerification",
      "offset": [
        20622,
        20639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "8922": {
      "fn": "Governance.submitVerification",
      "offset": [
        20622,
        20639
      ],
      "op": "DUP10",
      "path": "3"
    },
    "8923": {
      "fn": "Governance.submitVerification",
      "offset": [
        20622,
        20639
      ],
      "op": "ADD",
      "path": "3"
    },
    "8924": {
      "fn": "Governance.submitVerification",
      "offset": [
        20622,
        20639
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8925": {
      "fn": "Governance.submitVerification",
      "offset": [
        20641,
        20666
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "8927": {
      "fn": "Governance.submitVerification",
      "offset": [
        20641,
        20666
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8928": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8930": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8931": {
      "op": "PUSH4",
      "value": "0x434AA62F"
    },
    "8936": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8938": {
      "op": "SHL"
    },
    "8939": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8940": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8941": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8944": {
      "op": "SWAP1"
    },
    "8945": {
      "op": "SWAP3"
    },
    "8946": {
      "op": "AND"
    },
    "8947": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8949": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8950": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "ADD",
      "path": "3"
    },
    "8951": {
      "op": "MSTORE"
    },
    "8952": {
      "fn": "Governance.submitVerification",
      "offset": [
        20641,
        20666
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "8958": {
      "fn": "Governance.submitVerification",
      "offset": [
        20641,
        20666
      ],
      "op": "AND",
      "path": "3"
    },
    "8959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8961": {
      "op": "DUP3"
    },
    "8962": {
      "op": "ADD"
    },
    "8963": {
      "op": "MSTORE"
    },
    "8964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8970": {
      "op": "SHL"
    },
    "8971": {
      "op": "SUB"
    },
    "8972": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8973": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8974": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "AND",
      "path": "3"
    },
    "8975": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8976": {
      "op": "POP"
    },
    "8977": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20621
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x86954C5E"
    },
    "8982": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20621
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8983": {
      "op": "POP"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8986": {
      "op": "ADD"
    },
    "8987": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8988": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8990": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8992": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8993": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8994": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8995": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "SUB",
      "path": "3"
    },
    "8996": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8997": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8999": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9000": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9001": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "9002": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9003": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9004": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9005": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2335"
    },
    "9008": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9009": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9011": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9012": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "REVERT",
      "path": "3"
    },
    "9013": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9014": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "POP",
      "path": "3"
    },
    "9015": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "GAS",
      "path": "3"
    },
    "9016": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "CALL",
      "path": "3"
    },
    "9017": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9018": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9019": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9020": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2349"
    },
    "9023": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9024": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9025": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9027": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9028": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "9029": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9030": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9032": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "REVERT",
      "path": "3"
    },
    "9033": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20667
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9034": {
      "op": "POP"
    },
    "9035": {
      "op": "POP"
    },
    "9036": {
      "op": "POP"
    },
    "9037": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 66,
      "value": "0x0"
    },
    "9039": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "DUP10",
      "path": "3"
    },
    "9040": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9041": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9042": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20756
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "9044": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9046": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9047": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9049": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9050": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9051": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9052": {
      "op": "POP"
    },
    "9053": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2366"
    },
    "9056": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9057": {
      "fn": "Governance.submitVerification",
      "offset": [
        20751,
        20765
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9058": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x304F"
    },
    "9061": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20744,
        20765
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9062": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9063": {
      "op": "POP"
    },
    "9064": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9066": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9067": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "ADD",
      "path": "3"
    },
    "9068": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9069": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9070": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9076": {
      "op": "NOT"
    },
    "9077": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "AND",
      "path": "3"
    },
    "9078": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9079": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9082": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9084": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9085": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "ADD",
      "path": "3"
    },
    "9086": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9087": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9088": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9089": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9091": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9092": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "ADD",
      "path": "3"
    },
    "9093": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9094": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9095": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9096": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9098": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9099": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9100": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "ADD",
      "path": "3"
    },
    "9101": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9102": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "9109": {
      "op": "SHL"
    },
    "9110": {
      "op": "SUB"
    },
    "9111": {
      "op": "NOT"
    },
    "9112": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "AND",
      "path": "3"
    },
    "9113": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9114": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        20765
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9115": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9117": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9118": {
      "op": "DUP2"
    },
    "9119": {
      "op": "SWAP1"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9126": {
      "op": "SHL"
    },
    "9127": {
      "op": "SUB"
    },
    "9128": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20869
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9129": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20869
      ],
      "op": "AND",
      "path": "3"
    },
    "9130": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20869
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9131": {
      "fn": "Governance.submitVerification",
      "offset": [
        20877,
        20882
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9132": {
      "fn": "Governance.submitVerification",
      "offset": [
        20877,
        20882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9133": {
      "op": "DUP4"
    },
    "9134": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9135": {
      "op": "DUP2"
    },
    "9136": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9137": {
      "fn": "Governance.submitVerification",
      "offset": [
        20877,
        20882
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9138": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20869
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9139": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "GAS",
      "path": "3"
    },
    "9140": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "CALL",
      "path": "3"
    },
    "9141": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9142": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "POP",
      "path": "3"
    },
    "9143": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "POP",
      "path": "3"
    },
    "9144": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "POP",
      "path": "3"
    },
    "9145": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9146": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9147": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9149": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9150": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "EQ",
      "path": "3"
    },
    "9151": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E4"
    },
    "9154": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9155": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9157": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9158": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9159": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "POP",
      "path": "3"
    },
    "9160": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9162": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "NOT",
      "path": "3"
    },
    "9163": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "9165": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9166": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "ADD",
      "path": "3"
    },
    "9167": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "AND",
      "path": "3"
    },
    "9168": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9169": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "ADD",
      "path": "3"
    },
    "9170": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9172": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9173": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9174": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9175": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9176": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9177": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9179": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9181": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9182": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "ADD",
      "path": "3"
    },
    "9183": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "9184": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E9"
    },
    "9187": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9188": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9189": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "9191": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9192": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "POP",
      "path": "3"
    },
    "9193": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9194": {
      "fn": "Governance.submitVerification",
      "offset": [
        20851,
        20887
      ],
      "op": "POP",
      "path": "3"
    },
    "9195": {
      "fn": "Governance.submitVerification",
      "offset": [
        20818,
        20887
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9196": {
      "fn": "Governance.submitVerification",
      "offset": [
        20818,
        20887
      ],
      "op": "POP",
      "path": "3"
    },
    "9197": {
      "fn": "Governance.submitVerification",
      "offset": [
        20818,
        20887
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9198": {
      "fn": "Governance.submitVerification",
      "offset": [
        20818,
        20887
      ],
      "op": "POP",
      "path": "3"
    },
    "9199": {
      "branch": 141,
      "fn": "Governance.submitVerification",
      "offset": [
        20909,
        20913
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 67
    },
    "9200": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240B"
    },
    "9203": {
      "branch": 141,
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9204": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9206": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9207": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9213": {
      "op": "SHL"
    },
    "9214": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9215": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9216": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9218": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "ADD",
      "path": "3"
    },
    "9219": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "9222": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9223": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DA0"
    },
    "9226": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20901,
        20938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9227": {
      "fn": "Governance.submitVerification",
      "offset": [
        20901,
        20938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9228": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 68,
      "value": "0x40"
    },
    "9230": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9231": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21010
      ],
      "op": "CALLER",
      "path": "3"
    },
    "9232": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9233": {
      "fn": "Governance.submitVerification",
      "offset": [
        21023,
        21028
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9234": {
      "fn": "Governance.submitVerification",
      "offset": [
        21023,
        21028
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9235": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9237": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9238": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9239": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9240": {
      "fn": "Governance.submitVerification",
      "offset": [
        21023,
        21028
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9241": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21010
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9242": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "GAS",
      "path": "3"
    },
    "9243": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "CALL",
      "path": "3"
    },
    "9244": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9245": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "POP",
      "path": "3"
    },
    "9246": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "POP",
      "path": "3"
    },
    "9247": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "POP",
      "path": "3"
    },
    "9248": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9249": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9250": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9252": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9253": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "EQ",
      "path": "3"
    },
    "9254": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x244B"
    },
    "9257": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9258": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9260": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9261": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9262": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "POP",
      "path": "3"
    },
    "9263": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9265": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "NOT",
      "path": "3"
    },
    "9266": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "9268": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9269": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "ADD",
      "path": "3"
    },
    "9270": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "AND",
      "path": "3"
    },
    "9271": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9272": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "ADD",
      "path": "3"
    },
    "9273": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9275": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9276": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9277": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9278": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9279": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9280": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9282": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9284": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9285": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "ADD",
      "path": "3"
    },
    "9286": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "9287": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2450"
    },
    "9290": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9291": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9292": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "9294": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9295": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "POP",
      "path": "3"
    },
    "9296": {
      "fn": "Governance.submitVerification",
      "offset": [
        21000,
        21033
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9297": {
      "op": "POP"
    },
    "9298": {
      "fn": "Governance.submitVerification",
      "offset": [
        20985,
        21033
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9299": {
      "fn": "Governance.submitVerification",
      "offset": [
        20985,
        21033
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9300": {
      "op": "POP"
    },
    "9301": {
      "fn": "Governance.submitVerification",
      "offset": [
        20985,
        21033
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9302": {
      "op": "POP"
    },
    "9303": {
      "fn": "Governance.submitVerification",
      "offset": [
        20985,
        21033
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9304": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 69,
      "value": "0x2473"
    },
    "9307": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9308": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9310": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9317": {
      "op": "SHL"
    },
    "9318": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9319": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9320": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9322": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "ADD",
      "path": "3"
    },
    "9323": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "9326": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9327": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DA0"
    },
    "9330": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21047,
        21084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9331": {
      "fn": "Governance.submitVerification",
      "offset": [
        21047,
        21084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9332": {
      "fn": "Governance.submitVerification",
      "offset": [
        20221,
        21096
      ],
      "op": "POP",
      "path": "3"
    },
    "9333": {
      "fn": "Governance.submitVerification",
      "offset": [
        20221,
        21096
      ],
      "op": "POP",
      "path": "3"
    },
    "9334": {
      "fn": "Governance.submitVerification",
      "offset": [
        20221,
        21096
      ],
      "op": "POP",
      "path": "3"
    },
    "9335": {
      "fn": "Governance.submitVerification",
      "offset": [
        20221,
        21096
      ],
      "op": "POP",
      "path": "3"
    },
    "9336": {
      "fn": "Governance.submitVerification",
      "offset": [
        20201,
        22782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F4"
    },
    "9339": {
      "fn": "Governance.submitVerification",
      "offset": [
        20201,
        22782
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9340": {
      "fn": "Governance.submitVerification",
      "offset": [
        20201,
        22782
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9341": {
      "fn": "Governance.submitVerification",
      "offset": [
        21200,
        21206
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9342": {
      "fn": "Governance.submitVerification",
      "offset": [
        21200,
        21216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "9345": {
      "fn": "Governance.submitVerification",
      "offset": [
        21200,
        21216
      ],
      "op": "ADD",
      "path": "3"
    },
    "9346": {
      "fn": "Governance.submitVerification",
      "offset": [
        21200,
        21216
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9347": {
      "fn": "Governance.submitVerification",
      "offset": [
        21200,
        21219
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "9350": {
      "fn": "Governance.submitVerification",
      "offset": [
        21200,
        21219
      ],
      "op": "AND",
      "path": "3"
    },
    "9351": {
      "fn": "Governance.submitVerification",
      "offset": [
        21218,
        21219
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9353": {
      "branch": 142,
      "fn": "Governance.submitVerification",
      "offset": [
        21200,
        21219
      ],
      "op": "SUB",
      "path": "3"
    },
    "9354": {
      "fn": "Governance.submitVerification",
      "offset": [
        21197,
        21408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25AE"
    },
    "9357": {
      "branch": 142,
      "fn": "Governance.submitVerification",
      "offset": [
        21197,
        21408
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9358": {
      "fn": "Governance.submitVerification",
      "offset": [
        21238,
        21269
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 70,
      "value": "0xFFFF"
    },
    "9361": {
      "fn": "Governance.submitVerification",
      "offset": [
        21238,
        21269
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9362": {
      "fn": "Governance.submitVerification",
      "offset": [
        21238,
        21269
      ],
      "op": "AND",
      "path": "3"
    },
    "9363": {
      "fn": "Governance.submitVerification",
      "offset": [
        21238,
        21254
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "9366": {
      "fn": "Governance.submitVerification",
      "offset": [
        21238,
        21254
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9367": {
      "fn": "Governance.submitVerification",
      "offset": [
        21238,
        21254
      ],
      "op": "ADD",
      "path": "3"
    },
    "9368": {
      "fn": "Governance.submitVerification",
      "offset": [
        21238,
        21269
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9369": {
      "fn": "Governance.submitVerification",
      "offset": [
        21287,
        21305
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 71,
      "value": "0x60"
    },
    "9371": {
      "fn": "Governance.submitVerification",
      "offset": [
        21287,
        21305
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9372": {
      "fn": "Governance.submitVerification",
      "offset": [
        21287,
        21305
      ],
      "op": "ADD",
      "path": "3"
    },
    "9373": {
      "fn": "Governance.submitVerification",
      "offset": [
        21287,
        21312
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9374": {
      "fn": "Governance.submitVerification",
      "offset": [
        21287,
        21312
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9375": {
      "fn": "Governance.submitVerification",
      "offset": [
        21287,
        21312
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9378": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 72
    },
    "9379": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9380": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9381": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21335
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "9383": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9385": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9386": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9388": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9389": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9390": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9391": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9392": {
      "fn": "Governance.submitVerification",
      "offset": [
        21238,
        21244
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9393": {
      "fn": "Governance.submitVerification",
      "offset": [
        21238,
        21244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9394": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9395": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9396": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9397": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24BE"
    },
    "9400": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9401": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21344
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9402": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ABE"
    },
    "9405": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21330,
        21353
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9406": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9407": {
      "op": "POP"
    },
    "9408": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9410": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9411": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9412": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9413": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9415": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9416": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9417": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9418": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9419": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9425": {
      "op": "NOT"
    },
    "9426": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9427": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "9433": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9434": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9435": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9436": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "OR",
      "path": "3"
    },
    "9437": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9438": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9439": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9441": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9442": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9443": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9444": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9446": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9447": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9448": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9449": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "9451": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9452": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9453": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9454": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9456": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9457": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9458": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9459": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "9461": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9462": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9463": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9464": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9466": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9467": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9468": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9469": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9470": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9471": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "9473": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9474": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9475": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9476": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "9478": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9479": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9480": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9481": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "9483": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9484": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9485": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9486": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "9489": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9490": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP10",
      "path": "3"
    },
    "9491": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9492": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9493": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "9496": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9497": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP10",
      "path": "3"
    },
    "9498": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "ADD",
      "path": "3"
    },
    "9499": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9500": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "9502": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9503": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "9504": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9505": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9510": {
      "op": "NOT"
    },
    "9511": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9512": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "9513": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9514": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9515": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9516": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9517": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "OR",
      "path": "3"
    },
    "9518": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "9522": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9523": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9524": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9525": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9526": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9527": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MUL",
      "path": "3"
    },
    "9528": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9529": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9530": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9531": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "OR",
      "path": "3"
    },
    "9532": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9542": {
      "op": "SHL"
    },
    "9543": {
      "op": "SUB"
    },
    "9544": {
      "op": "NOT"
    },
    "9545": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9550": {
      "op": "SHL"
    },
    "9551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9557": {
      "op": "SHL"
    },
    "9558": {
      "op": "SUB"
    },
    "9559": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9560": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9561": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9562": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9563": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9564": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9565": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MUL",
      "path": "3"
    },
    "9566": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "9571": {
      "op": "SHL"
    },
    "9572": {
      "op": "NOT"
    },
    "9573": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9574": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "OR",
      "path": "3"
    },
    "9575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9577": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "9579": {
      "op": "SHL"
    },
    "9580": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "9583": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9584": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9585": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9586": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MUL",
      "path": "3"
    },
    "9587": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "OR",
      "path": "3"
    },
    "9588": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "9596": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9598": {
      "op": "SHL"
    },
    "9599": {
      "op": "NOT"
    },
    "9600": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9605": {
      "op": "SHL"
    },
    "9606": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9607": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9608": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "9609": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9610": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MUL",
      "path": "3"
    },
    "9611": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9617": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "9619": {
      "op": "SHL"
    },
    "9620": {
      "op": "NOT"
    },
    "9621": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9622": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9623": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9624": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9625": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "OR",
      "path": "3"
    },
    "9626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "9630": {
      "op": "SHL"
    },
    "9631": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9632": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9633": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9634": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "AND",
      "path": "3"
    },
    "9635": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9636": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9637": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9638": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "MUL",
      "path": "3"
    },
    "9639": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "OR",
      "path": "3"
    },
    "9640": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9641": {
      "fn": "Governance.submitVerification",
      "offset": [
        21330,
        21353
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9644": {
      "op": "SWAP3"
    },
    "9645": {
      "op": "POP"
    },
    "9646": {
      "fn": "Governance.submitVerification",
      "offset": [
        21197,
        21408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9647": {
      "fn": "Governance.submitVerification",
      "offset": [
        21504,
        21510
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9648": {
      "fn": "Governance.submitVerification",
      "offset": [
        21484,
        21490
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9649": {
      "fn": "Governance.submitVerification",
      "offset": [
        21484,
        21502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "9651": {
      "fn": "Governance.submitVerification",
      "offset": [
        21484,
        21502
      ],
      "op": "ADD",
      "path": "3"
    },
    "9652": {
      "fn": "Governance.submitVerification",
      "offset": [
        21484,
        21502
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9653": {
      "branch": 143,
      "fn": "Governance.submitVerification",
      "offset": [
        21484,
        21510
      ],
      "op": "SUB",
      "path": "3"
    },
    "9654": {
      "fn": "Governance.submitVerification",
      "offset": [
        21481,
        22772
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270E"
    },
    "9657": {
      "branch": 143,
      "fn": "Governance.submitVerification",
      "offset": [
        21481,
        22772
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9658": {
      "fn": "Governance.submitVerification",
      "offset": [
        21529,
        21542
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9660": {
      "fn": "Governance.submitVerification",
      "offset": [
        21560,
        21561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9662": {
      "fn": "Governance.submitVerification",
      "offset": [
        21545,
        21551
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9663": {
      "fn": "Governance.submitVerification",
      "offset": [
        21545,
        21559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "9665": {
      "fn": "Governance.submitVerification",
      "offset": [
        21545,
        21559
      ],
      "op": "ADD",
      "path": "3"
    },
    "9666": {
      "fn": "Governance.submitVerification",
      "offset": [
        21545,
        21559
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9667": {
      "fn": "Governance.submitVerification",
      "offset": [
        21545,
        21561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25CC"
    },
    "9670": {
      "fn": "Governance.submitVerification",
      "offset": [
        21545,
        21561
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9671": {
      "fn": "Governance.submitVerification",
      "offset": [
        21545,
        21561
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9672": {
      "fn": "Governance.submitVerification",
      "offset": [
        21545,
        21561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D6C"
    },
    "9675": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21545,
        21561
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9676": {
      "fn": "Governance.submitVerification",
      "offset": [
        21545,
        21561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9677": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9679": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21627
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9680": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "9683": {
      "fn": "Governance.submitVerification",
      "offset": [
        21636,
        21652
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9684": {
      "fn": "Governance.submitVerification",
      "offset": [
        21636,
        21652
      ],
      "op": "ADD",
      "path": "3"
    },
    "9685": {
      "fn": "Governance.submitVerification",
      "offset": [
        21636,
        21652
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9686": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9688": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9689": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9696": {
      "op": "SHL"
    },
    "9697": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9698": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9699": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9702": {
      "op": "SWAP1"
    },
    "9703": {
      "op": "SWAP2"
    },
    "9704": {
      "op": "AND"
    },
    "9705": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9707": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9708": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "ADD",
      "path": "3"
    },
    "9709": {
      "op": "MSTORE"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9716": {
      "op": "SHL"
    },
    "9717": {
      "op": "SUB"
    },
    "9718": {
      "fn": "Governance.submitVerification",
      "offset": [
        21529,
        21561
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9719": {
      "fn": "Governance.submitVerification",
      "offset": [
        21529,
        21561
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9720": {
      "fn": "Governance.submitVerification",
      "offset": [
        21529,
        21561
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9721": {
      "fn": "Governance.submitVerification",
      "offset": [
        21529,
        21561
      ],
      "op": "AND",
      "path": "3"
    },
    "9722": {
      "fn": "Governance.submitVerification",
      "offset": [
        21529,
        21561
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9723": {
      "op": "POP"
    },
    "9724": {
      "fn": "Governance.submitVerification",
      "offset": [
        21579,
        21606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9726": {
      "fn": "Governance.submitVerification",
      "offset": [
        21579,
        21606
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9733": {
      "op": "SHL"
    },
    "9734": {
      "op": "SUB"
    },
    "9735": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9736": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21627
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9737": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21627
      ],
      "op": "AND",
      "path": "3"
    },
    "9738": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9739": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21635
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "9744": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21635
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9745": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9747": {
      "op": "ADD"
    },
    "9748": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9750": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9752": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9753": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9754": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9755": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "SUB",
      "path": "3"
    },
    "9756": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9757": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9758": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "GAS",
      "path": "3"
    },
    "9759": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "9760": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9761": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9762": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9763": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2630"
    },
    "9766": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9767": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9768": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9770": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9771": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "9772": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9773": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9775": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "REVERT",
      "path": "3"
    },
    "9776": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9777": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "POP",
      "path": "3"
    },
    "9778": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "POP",
      "path": "3"
    },
    "9779": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "POP",
      "path": "3"
    },
    "9780": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "POP",
      "path": "3"
    },
    "9781": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9783": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9784": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9785": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9787": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "NOT",
      "path": "3"
    },
    "9788": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9790": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9791": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "ADD",
      "path": "3"
    },
    "9792": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "AND",
      "path": "3"
    },
    "9793": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9794": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "ADD",
      "path": "3"
    },
    "9795": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9796": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9798": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9799": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "POP",
      "path": "3"
    },
    "9800": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9801": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "ADD",
      "path": "3"
    },
    "9802": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9803": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2654"
    },
    "9806": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9807": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9808": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C35"
    },
    "9811": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21617,
        21653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9812": {
      "fn": "Governance.submitVerification",
      "offset": [
        21617,
        21653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9813": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21683
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 73,
      "value": "0x2"
    },
    "9815": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21683
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9816": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "9819": {
      "fn": "Governance.submitVerification",
      "offset": [
        21716,
        21732
      ],
      "op": "DUP9",
      "path": "3"
    },
    "9820": {
      "fn": "Governance.submitVerification",
      "offset": [
        21716,
        21732
      ],
      "op": "ADD",
      "path": "3"
    },
    "9821": {
      "fn": "Governance.submitVerification",
      "offset": [
        21716,
        21732
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9822": {
      "fn": "Governance.submitVerification",
      "offset": [
        21734,
        21759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "9824": {
      "fn": "Governance.submitVerification",
      "offset": [
        21734,
        21759
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9825": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9827": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9828": {
      "op": "PUSH4",
      "value": "0x434AA62F"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9835": {
      "op": "SHL"
    },
    "9836": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9837": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9838": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9841": {
      "op": "SWAP1"
    },
    "9842": {
      "op": "SWAP3"
    },
    "9843": {
      "op": "AND"
    },
    "9844": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9846": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9847": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "ADD",
      "path": "3"
    },
    "9848": {
      "op": "MSTORE"
    },
    "9849": {
      "fn": "Governance.submitVerification",
      "offset": [
        21734,
        21759
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "9855": {
      "fn": "Governance.submitVerification",
      "offset": [
        21734,
        21759
      ],
      "op": "AND",
      "path": "3"
    },
    "9856": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9858": {
      "op": "DUP3"
    },
    "9859": {
      "op": "ADD"
    },
    "9860": {
      "op": "MSTORE"
    },
    "9861": {
      "fn": "Governance.submitVerification",
      "offset": [
        21579,
        21654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9862": {
      "fn": "Governance.submitVerification",
      "offset": [
        21579,
        21654
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9863": {
      "op": "POP"
    },
    "9864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9870": {
      "op": "SHL"
    },
    "9871": {
      "op": "SUB"
    },
    "9872": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21683
      ],
      "op": "AND",
      "path": "3"
    },
    "9873": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21683
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9874": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21715
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x86954C5E"
    },
    "9879": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21715
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9880": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9882": {
      "op": "ADD"
    },
    "9883": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9885": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9887": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9888": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9889": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9890": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "SUB",
      "path": "3"
    },
    "9891": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9892": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9894": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9895": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9896": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "9897": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9898": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9899": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9900": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26B4"
    },
    "9903": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9904": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9906": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9907": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "REVERT",
      "path": "3"
    },
    "9908": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9909": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "POP",
      "path": "3"
    },
    "9910": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "GAS",
      "path": "3"
    },
    "9911": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "CALL",
      "path": "3"
    },
    "9912": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9913": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9914": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9915": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26C8"
    },
    "9918": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9919": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9920": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9922": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9923": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "9924": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9925": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9927": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "REVERT",
      "path": "3"
    },
    "9928": {
      "fn": "Governance.submitVerification",
      "offset": [
        21673,
        21760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9929": {
      "op": "POP"
    },
    "9930": {
      "op": "POP"
    },
    "9931": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21788
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 74,
      "value": "0x2"
    },
    "9933": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21788
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9934": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21854
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "9936": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21854
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9937": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9939": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21855
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9940": {
      "op": "PUSH4",
      "value": "0x434AA62F"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9947": {
      "op": "SHL"
    },
    "9948": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21855
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9949": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21855
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9950": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9952": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21855
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9953": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21855
      ],
      "op": "ADD",
      "path": "3"
    },
    "9954": {
      "op": "DUP15"
    },
    "9955": {
      "op": "SWAP1"
    },
    "9956": {
      "op": "MSTORE"
    },
    "9957": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21854
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "9963": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21854
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9964": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21854
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9965": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21854
      ],
      "op": "AND",
      "path": "3"
    },
    "9966": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9968": {
      "op": "DUP3"
    },
    "9969": {
      "op": "ADD"
    },
    "9970": {
      "op": "MSTORE"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9977": {
      "op": "SHL"
    },
    "9978": {
      "op": "SUB"
    },
    "9979": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21788
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9980": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21788
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9981": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21788
      ],
      "op": "AND",
      "path": "3"
    },
    "9982": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21788
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9983": {
      "op": "POP"
    },
    "9984": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21820
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x86954C5E"
    },
    "9989": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21820
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9990": {
      "op": "POP"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9993": {
      "op": "ADD"
    },
    "9994": {
      "fn": "Governance.submitVerification",
      "offset": [
        21778,
        21855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x231B"
    },
    "9997": {
      "op": "JUMP"
    },
    "9998": {
      "fn": "Governance.submitVerification",
      "offset": [
        21481,
        22772
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9999": {
      "fn": "Governance.submitVerification",
      "offset": [
        22487,
        22501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "10001": {
      "fn": "Governance.submitVerification",
      "offset": [
        22487,
        22501
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10002": {
      "fn": "Governance.submitVerification",
      "offset": [
        22487,
        22501
      ],
      "op": "ADD",
      "path": "3"
    },
    "10003": {
      "fn": "Governance.submitVerification",
      "offset": [
        22487,
        22501
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10004": {
      "fn": "Governance.submitVerification",
      "offset": [
        22471,
        22484
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10006": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "DUP8",
      "path": "3",
      "statement": 75
    },
    "10007": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10008": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10009": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22531
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "10011": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10013": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10014": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10016": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10017": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10024": {
      "op": "SHL"
    },
    "10025": {
      "op": "SUB"
    },
    "10026": {
      "fn": "Governance.submitVerification",
      "offset": [
        22471,
        22501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10027": {
      "fn": "Governance.submitVerification",
      "offset": [
        22471,
        22501
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10028": {
      "fn": "Governance.submitVerification",
      "offset": [
        22471,
        22501
      ],
      "op": "AND",
      "path": "3"
    },
    "10029": {
      "fn": "Governance.submitVerification",
      "offset": [
        22471,
        22501
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10030": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10031": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2738"
    },
    "10034": {
      "fn": "Governance.submitVerification",
      "offset": [
        22526,
        22540
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10035": {
      "fn": "Governance.submitVerification",
      "offset": [
        22471,
        22484
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10036": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x304F"
    },
    "10039": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22519,
        22540
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10040": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10041": {
      "op": "POP"
    },
    "10042": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10044": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10045": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "ADD",
      "path": "3"
    },
    "10046": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10047": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10048": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10054": {
      "op": "NOT"
    },
    "10055": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "AND",
      "path": "3"
    },
    "10056": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10057": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10058": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10060": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10062": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10063": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "ADD",
      "path": "3"
    },
    "10064": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10065": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10066": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10067": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "10069": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10070": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "ADD",
      "path": "3"
    },
    "10071": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10072": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10073": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10074": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10076": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10077": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10078": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "ADD",
      "path": "3"
    },
    "10079": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10080": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10085": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "10087": {
      "op": "SHL"
    },
    "10088": {
      "op": "SUB"
    },
    "10089": {
      "op": "NOT"
    },
    "10090": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "AND",
      "path": "3"
    },
    "10091": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10092": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10093": {
      "fn": "Governance.submitVerification",
      "offset": [
        22519,
        22540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10094": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22598
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x277F"
    },
    "10097": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10099": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "10100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10106": {
      "op": "SHL"
    },
    "10107": {
      "op": "SUB"
    },
    "10108": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "10109": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10110": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10111": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22598
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10118": {
      "op": "SHL"
    },
    "10119": {
      "op": "SUB"
    },
    "10120": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22603
      ],
      "op": "AND",
      "path": "3"
    },
    "10121": {
      "fn": "Governance.submitVerification",
      "offset": [
        22611,
        22616
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10122": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10124": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10125": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10127": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10129": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10130": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10131": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10132": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "SUB",
      "path": "3"
    },
    "10133": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10134": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10135": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10136": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "GAS",
      "path": "3"
    },
    "10137": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "CALL",
      "path": "3"
    },
    "10138": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10139": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "POP",
      "path": "3"
    },
    "10140": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "POP",
      "path": "3"
    },
    "10141": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "POP",
      "path": "3"
    },
    "10142": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10143": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10144": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10146": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10147": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "EQ",
      "path": "3"
    },
    "10148": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27C9"
    },
    "10151": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10152": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10154": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10155": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10156": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "POP",
      "path": "3"
    },
    "10157": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "10159": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "NOT",
      "path": "3"
    },
    "10160": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "10162": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10163": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "ADD",
      "path": "3"
    },
    "10164": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "AND",
      "path": "3"
    },
    "10165": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10166": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "ADD",
      "path": "3"
    },
    "10167": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10169": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10170": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10171": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10172": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10173": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10174": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10176": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10178": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10179": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "ADD",
      "path": "3"
    },
    "10180": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "10181": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27CE"
    },
    "10184": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10185": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10186": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "10188": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10189": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "POP",
      "path": "3"
    },
    "10190": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10191": {
      "fn": "Governance.submitVerification",
      "offset": [
        22591,
        22621
      ],
      "op": "POP",
      "path": "3"
    },
    "10192": {
      "fn": "Governance.submitVerification",
      "offset": [
        22558,
        22621
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10193": {
      "fn": "Governance.submitVerification",
      "offset": [
        22558,
        22621
      ],
      "op": "POP",
      "path": "3"
    },
    "10194": {
      "fn": "Governance.submitVerification",
      "offset": [
        22558,
        22621
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10195": {
      "fn": "Governance.submitVerification",
      "offset": [
        22558,
        22621
      ],
      "op": "POP",
      "path": "3"
    },
    "10196": {
      "branch": 144,
      "fn": "Governance.submitVerification",
      "offset": [
        22697,
        22701
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 76
    },
    "10197": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F0"
    },
    "10200": {
      "branch": 144,
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10201": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10203": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10210": {
      "op": "SHL"
    },
    "10211": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10212": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10213": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10215": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "ADD",
      "path": "3"
    },
    "10216": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "10219": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10220": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DA0"
    },
    "10223": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22689,
        22726
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10224": {
      "fn": "Governance.submitVerification",
      "offset": [
        22689,
        22726
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10225": {
      "fn": "Governance.submitVerification",
      "offset": [
        22365,
        22772
      ],
      "op": "POP",
      "path": "3"
    },
    "10226": {
      "fn": "Governance.submitVerification",
      "offset": [
        22365,
        22772
      ],
      "op": "POP",
      "path": "3"
    },
    "10227": {
      "fn": "Governance.submitVerification",
      "offset": [
        22365,
        22772
      ],
      "op": "POP",
      "path": "3"
    },
    "10228": {
      "fn": "Governance.submitVerification",
      "offset": [
        21481,
        22772
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10229": {
      "branch": 145,
      "fn": "Governance.submitVerification",
      "offset": [
        22846,
        22860
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10230": {
      "fn": "Governance.submitVerification",
      "offset": [
        22843,
        23574
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10231": {
      "fn": "Governance.submitVerification",
      "offset": [
        22843,
        23574
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD7E"
    },
    "10234": {
      "branch": 145,
      "fn": "Governance.submitVerification",
      "offset": [
        22843,
        23574
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10235": {
      "fn": "Governance.submitVerification",
      "offset": [
        22875,
        22902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10237": {
      "fn": "Governance.submitVerification",
      "offset": [
        22905,
        22954
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2815"
    },
    "10240": {
      "fn": "Governance.submitVerification",
      "offset": [
        22929,
        22953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "10242": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10243": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "10245": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10246": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10247": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10250": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10252": {
      "op": "SHL"
    },
    "10253": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10254": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10255": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "10256": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10257": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10258": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "10259": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10260": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10261": {
      "fn": "Governance.submitVerification",
      "offset": [
        22905,
        22954
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10262": {
      "fn": "Governance.submitVerification",
      "offset": [
        22875,
        22954
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10263": {
      "fn": "Governance.submitVerification",
      "offset": [
        22875,
        22954
      ],
      "op": "POP",
      "path": "3"
    },
    "10264": {
      "fn": "Governance.submitVerification",
      "offset": [
        23056,
        23065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10266": {
      "fn": "Governance.submitVerification",
      "offset": [
        23052,
        23564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10267": {
      "fn": "Governance.submitVerification",
      "offset": [
        23074,
        23093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10268": {
      "fn": "Governance.submitVerification",
      "offset": [
        23070,
        23071
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10269": {
      "fn": "Governance.submitVerification",
      "offset": [
        23070,
        23093
      ],
      "op": "LT",
      "path": "3"
    },
    "10270": {
      "fn": "Governance.submitVerification",
      "offset": [
        23052,
        23564
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10271": {
      "fn": "Governance.submitVerification",
      "offset": [
        23052,
        23564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x287F"
    },
    "10274": {
      "fn": "Governance.submitVerification",
      "offset": [
        23052,
        23564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10275": {
      "fn": "Governance.submitVerification",
      "offset": [
        23177,
        23184
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10276": {
      "fn": "Governance.submitVerification",
      "offset": [
        23126,
        23174
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x282E"
    },
    "10279": {
      "fn": "Governance.submitVerification",
      "offset": [
        23146,
        23170
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "10281": {
      "fn": "Governance.submitVerification",
      "offset": [
        23172,
        23173
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10282": {
      "fn": "Governance.submitVerification",
      "offset": [
        23126,
        23145
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBC"
    },
    "10285": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        23126,
        23174
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10286": {
      "fn": "Governance.submitVerification",
      "offset": [
        23126,
        23174
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10287": {
      "branch": 146,
      "fn": "Governance.submitVerification",
      "offset": [
        23118,
        23184
      ],
      "op": "SUB",
      "path": "3"
    },
    "10288": {
      "fn": "Governance.submitVerification",
      "offset": [
        23114,
        23518
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2877"
    },
    "10291": {
      "branch": 146,
      "fn": "Governance.submitVerification",
      "offset": [
        23114,
        23518
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10292": {
      "fn": "Governance.submitVerification",
      "offset": [
        23207,
        23224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10294": {
      "fn": "Governance.submitVerification",
      "offset": [
        23227,
        23278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x283F"
    },
    "10297": {
      "fn": "Governance.submitVerification",
      "offset": [
        23253,
        23277
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "10299": {
      "fn": "Governance.submitVerification",
      "offset": [
        23227,
        23252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E7F"
    },
    "10302": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        23227,
        23278
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10303": {
      "fn": "Governance.submitVerification",
      "offset": [
        23227,
        23278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10304": {
      "fn": "Governance.submitVerification",
      "offset": [
        23207,
        23278
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10305": {
      "op": "POP"
    },
    "10306": {
      "fn": "Governance.submitVerification",
      "offset": [
        23303,
        23307
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10307": {
      "branch": 147,
      "fn": "Governance.submitVerification",
      "offset": [
        23303,
        23307
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10308": {
      "fn": "Governance.submitVerification",
      "offset": [
        23300,
        23500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2875"
    },
    "10311": {
      "branch": 147,
      "fn": "Governance.submitVerification",
      "offset": [
        23300,
        23500
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10312": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23409
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 77,
      "value": "0x6"
    },
    "10314": {
      "fn": "Governance.submitVerification",
      "offset": [
        23423,
        23454
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10315": {
      "fn": "Governance.submitVerification",
      "offset": [
        23468,
        23477
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10316": {
      "fn": "Governance.submitVerification",
      "offset": [
        23468,
        23477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10317": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "10319": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10320": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10322": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10323": {
      "fn": "Governance.submitVerification",
      "offset": [
        23423,
        23463
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2860"
    },
    "10326": {
      "fn": "Governance.submitVerification",
      "offset": [
        23423,
        23463
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10327": {
      "fn": "Governance.submitVerification",
      "offset": [
        23461,
        23462
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10328": {
      "fn": "Governance.submitVerification",
      "offset": [
        23461,
        23462
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10329": {
      "fn": "Governance.submitVerification",
      "offset": [
        23423,
        23454
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "10331": {
      "fn": "Governance.submitVerification",
      "offset": [
        23423,
        23454
      ],
      "op": "SIGNEXTEND",
      "path": "3"
    },
    "10332": {
      "fn": "Governance.submitVerification",
      "offset": [
        23423,
        23463
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DCE"
    },
    "10335": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        23423,
        23463
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10336": {
      "fn": "Governance.submitVerification",
      "offset": [
        23423,
        23463
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10337": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "10339": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "SIGNEXTEND",
      "path": "3"
    },
    "10340": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10341": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10342": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10344": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10345": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "ADD",
      "path": "3"
    },
    "10346": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10347": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10348": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10349": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10350": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10352": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "ADD",
      "path": "3"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10355": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23465
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10356": {
      "fn": "Governance.submitVerification",
      "offset": [
        23385,
        23477
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10357": {
      "fn": "Governance.submitVerification",
      "offset": [
        23300,
        23500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10358": {
      "fn": "Governance.submitVerification",
      "offset": [
        23185,
        23518
      ],
      "op": "POP",
      "path": "3"
    },
    "10359": {
      "fn": "Governance.submitVerification",
      "offset": [
        23114,
        23518
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10360": {
      "fn": "Governance.submitVerification",
      "offset": [
        23545,
        23548
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 78,
      "value": "0x1"
    },
    "10362": {
      "fn": "Governance.submitVerification",
      "offset": [
        23545,
        23548
      ],
      "op": "ADD",
      "path": "3"
    },
    "10363": {
      "fn": "Governance.submitVerification",
      "offset": [
        23052,
        23564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x281A"
    },
    "10366": {
      "fn": "Governance.submitVerification",
      "offset": [
        23052,
        23564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10367": {
      "fn": "Governance.submitVerification",
      "offset": [
        23052,
        23564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10368": {
      "fn": "Governance.submitVerification",
      "offset": [
        23052,
        23564
      ],
      "op": "POP",
      "path": "3"
    },
    "10369": {
      "fn": "Governance.submitVerification",
      "offset": [
        22861,
        23574
      ],
      "op": "POP",
      "path": "3"
    },
    "10370": {
      "fn": "Governance.submitVerification",
      "offset": [
        19383,
        23581
      ],
      "op": "POP",
      "path": "3"
    },
    "10371": {
      "fn": "Governance.submitVerification",
      "offset": [
        19383,
        23581
      ],
      "op": "POP",
      "path": "3"
    },
    "10372": {
      "fn": "Governance.submitVerification",
      "offset": [
        19383,
        23581
      ],
      "op": "POP",
      "path": "3"
    },
    "10373": {
      "fn": "Governance.submitVerification",
      "offset": [
        19383,
        23581
      ],
      "op": "POP",
      "path": "3"
    },
    "10374": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "POP",
      "path": "3"
    },
    "10375": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "POP",
      "path": "3"
    },
    "10376": {
      "fn": "Governance.submitVerification",
      "offset": [
        19287,
        23581
      ],
      "op": "POP",
      "path": "3"
    },
    "10377": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        19287,
        23581
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10378": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10379": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10381": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "10382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10388": {
      "op": "SHL"
    },
    "10389": {
      "op": "SUB"
    },
    "10390": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "10391": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "10392": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "13"
    },
    "10393": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B4"
    },
    "10396": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10397": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10399": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10406": {
      "op": "SHL"
    },
    "10407": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10408": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10409": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "10411": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "13"
    },
    "10412": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD75"
    },
    "10415": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10416": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3997"
    },
    "10419": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10420": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10427": {
      "op": "SHL"
    },
    "10428": {
      "op": "SUB"
    },
    "10429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 79
    },
    "10430": {
      "branch": 155,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "13"
    },
    "10431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2919"
    },
    "10434": {
      "branch": 155,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10444": {
      "op": "SHL"
    },
    "10445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "10451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "13"
    },
    "10453": {
      "op": "MSTORE"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10458": {
      "op": "DUP3"
    },
    "10459": {
      "op": "ADD"
    },
    "10460": {
      "op": "MSTORE"
    },
    "10461": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "10494": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10496": {
      "op": "DUP3"
    },
    "10497": {
      "op": "ADD"
    },
    "10498": {
      "op": "MSTORE"
    },
    "10499": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "10506": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10508": {
      "op": "SHL"
    },
    "10509": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10511": {
      "op": "DUP3"
    },
    "10512": {
      "op": "ADD"
    },
    "10513": {
      "op": "MSTORE"
    },
    "10514": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10516": {
      "op": "ADD"
    },
    "10517": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD75"
    },
    "10520": {
      "op": "JUMP"
    },
    "10521": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10522": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 80,
      "value": "0x2922"
    },
    "10525": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10526": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E2D"
    },
    "10529": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10530": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10531": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "13"
    },
    "10532": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10533": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10534": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7014,
        7018
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10536": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7030,
        7057
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10537": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7060,
        7109
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2941"
    },
    "10540": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7084,
        7108
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "10542": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10543": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "10545": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10546": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10547": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10550": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10552": {
      "op": "SHL"
    },
    "10553": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10554": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10555": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "10556": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10557": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10558": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "10559": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10560": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10561": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7060,
        7109
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10562": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7030,
        7109
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10563": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7030,
        7109
      ],
      "op": "POP",
      "path": "3"
    },
    "10564": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7119,
        7137
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x294B"
    },
    "10567": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7119,
        7137
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FFB"
    },
    "10570": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7119,
        7137
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10571": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7119,
        7137
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10572": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7263,
        7272
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10574": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7259,
        7599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10575": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7281,
        7300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10576": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7277,
        7278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10577": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7277,
        7300
      ],
      "op": "LT",
      "path": "3"
    },
    "10578": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7259,
        7599
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10579": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7259,
        7599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AEA"
    },
    "10582": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7259,
        7599
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10583": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7331
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 81,
      "value": "0xA"
    },
    "10585": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10587": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7340,
        7387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2965"
    },
    "10590": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7360,
        7384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "10592": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7385,
        7386
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10593": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7340,
        7359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBC"
    },
    "10596": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7340,
        7387
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10597": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7340,
        7387
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10598": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7332,
        7388
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10600": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7332,
        7388
      ],
      "op": "SHR",
      "path": "3"
    },
    "10601": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10602": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10603": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10605": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10606": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10607": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10608": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10609": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10611": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10612": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10614": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7326,
        7389
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10615": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10617": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10618": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10619": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "10622": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10623": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10625": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10626": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10627": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10628": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10630": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10631": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10632": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10633": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10634": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2992"
    },
    "10637": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10638": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "10641": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10642": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10643": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10644": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "10646": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10647": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10649": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10650": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10651": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DIV",
      "path": "3"
    },
    "10652": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MUL",
      "path": "3"
    },
    "10653": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10655": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10656": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10658": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10659": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10660": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10661": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10662": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10664": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10665": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10666": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10667": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10668": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10669": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10670": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10671": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10672": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10674": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10675": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10676": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10677": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10678": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29BE"
    },
    "10681": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10682": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E0"
    },
    "10685": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10686": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10687": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10688": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10689": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A0B"
    },
    "10692": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10693": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10694": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "10696": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "LT",
      "path": "3"
    },
    "10697": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E0"
    },
    "10700": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10701": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "10704": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10705": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10706": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10707": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DIV",
      "path": "3"
    },
    "10708": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MUL",
      "path": "3"
    },
    "10709": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10710": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10711": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10712": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10714": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10715": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10716": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A0B"
    },
    "10719": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10720": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10721": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10722": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10723": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10724": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10725": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10727": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10728": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10730": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10732": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10733": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10734": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10735": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10736": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10737": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10738": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10739": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10740": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10742": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10743": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10744": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10746": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10747": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10748": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10749": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "GT",
      "path": "3"
    },
    "10750": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29EE"
    },
    "10753": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10754": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10755": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10756": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SUB",
      "path": "3"
    },
    "10757": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "10759": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "AND",
      "path": "3"
    },
    "10760": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10761": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10762": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10763": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "op": "POP"
    },
    "10766": {
      "op": "POP"
    },
    "10767": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10768": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10769": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10770": {
      "op": "POP"
    },
    "10771": {
      "op": "POP"
    },
    "10772": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10774": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10775": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10776": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10777": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "10783": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10784": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10785": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "AND",
      "path": "3"
    },
    "10786": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10788": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10789": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10790": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10791": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10793": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10794": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10795": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10796": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10798": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10799": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10800": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10801": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "10803": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10804": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10805": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10806": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "10808": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10809": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10810": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10811": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10813": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10814": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10815": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10816": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10817": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "10819": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10820": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "AND",
      "path": "3"
    },
    "10821": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "10823": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10824": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10825": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10826": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "10829": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10830": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10831": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DIV",
      "path": "3"
    },
    "10832": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xFFFFFF"
    },
    "10836": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "AND",
      "path": "3"
    },
    "10837": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "10839": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10840": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10841": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10846": {
      "op": "SHL"
    },
    "10847": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10848": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DIV",
      "path": "3"
    },
    "10849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10853": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10855": {
      "op": "SHL"
    },
    "10856": {
      "op": "SUB"
    },
    "10857": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "AND",
      "path": "3"
    },
    "10858": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "10860": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10861": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10862": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10865": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10867": {
      "op": "SHL"
    },
    "10868": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10869": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DIV",
      "path": "3"
    },
    "10870": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "10873": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10874": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10875": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "AND",
      "path": "3"
    },
    "10876": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "10878": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10879": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10880": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10883": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10885": {
      "op": "SHL"
    },
    "10886": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10887": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DIV",
      "path": "3"
    },
    "10888": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "AND",
      "path": "3"
    },
    "10889": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10890": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10891": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10892": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10895": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10897": {
      "op": "SHL"
    },
    "10898": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10899": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DIV",
      "path": "3"
    },
    "10900": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10901": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "AND",
      "path": "3"
    },
    "10902": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "10905": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10906": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10907": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "ADD",
      "path": "3"
    },
    "10908": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7317,
        7389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10909": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7443
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10910": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7443
      ],
      "op": "ADD",
      "path": "3"
    },
    "10911": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7443
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10912": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7443
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10913": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7443
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10914": {
      "op": "POP"
    },
    "10915": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7446,
        7461
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "10916": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7461
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10917": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7461
      ],
      "op": "AND",
      "path": "3"
    },
    "10918": {
      "branch": 148,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7461
      ],
      "op": "LT",
      "path": "3"
    },
    "10919": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7487
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10920": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7487
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10921": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "10924": {
      "branch": 148,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7487
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10925": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7487
      ],
      "op": "POP",
      "path": "3"
    },
    "10926": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7481,
        7487
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10927": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7465,
        7471
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10928": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7465,
        7477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10930": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7465,
        7477
      ],
      "op": "ADD",
      "path": "3"
    },
    "10931": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7465,
        7477
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10932": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7465,
        7487
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xFFFFFFFFFF"
    },
    "10938": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7465,
        7487
      ],
      "op": "AND",
      "path": "3"
    },
    "10939": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7465,
        7487
      ],
      "op": "EQ",
      "path": "3"
    },
    "10940": {
      "branch": 149,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7465,
        7487
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10941": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7487
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10942": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7516
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10943": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7516
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10944": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7516
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AD2"
    },
    "10947": {
      "branch": 149,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7516
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10948": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7516
      ],
      "op": "POP",
      "path": "3"
    },
    "10949": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7510,
        7516
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10950": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7491,
        7497
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10951": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7491,
        7507
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "10954": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7491,
        7507
      ],
      "op": "ADD",
      "path": "3"
    },
    "10955": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7491,
        7507
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10956": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7491,
        7516
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "10959": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7491,
        7516
      ],
      "op": "AND",
      "path": "3"
    },
    "10960": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7491,
        7516
      ],
      "op": "EQ",
      "path": "3"
    },
    "10961": {
      "branch": 150,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7491,
        7516
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10962": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7407,
        7516
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10963": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7403,
        7561
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10964": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7403,
        7561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AE2"
    },
    "10967": {
      "branch": 150,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7403,
        7561
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10968": {
      "op": "POP"
    },
    "10969": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7542,
        7546
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 82,
      "value": "0x1"
    },
    "10971": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7542,
        7546
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10972": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10973": {
      "op": "POP"
    },
    "10974": {
      "op": "POP"
    },
    "10975": {
      "op": "POP"
    },
    "10976": {
      "op": "POP"
    },
    "10977": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        6939,
        7627
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10978": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7403,
        7561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10979": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7584,
        7587
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 83,
      "value": "0x1"
    },
    "10981": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7584,
        7587
      ],
      "op": "ADD",
      "path": "3"
    },
    "10982": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7259,
        7599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x294E"
    },
    "10985": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7259,
        7599
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10986": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7259,
        7599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10987": {
      "op": "POP"
    },
    "10988": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7615,
        7620
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 84,
      "value": "0x0"
    },
    "10990": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7615,
        7620
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10991": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6939,
        7627
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10992": {
      "op": "POP"
    },
    "10993": {
      "op": "POP"
    },
    "10994": {
      "op": "POP"
    },
    "10995": {
      "op": "POP"
    },
    "10996": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        6939,
        7627
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10997": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10998": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11238,
        11247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11000": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11234,
        12371
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11001": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "11003": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11269
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11004": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11251,
        11269
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11005": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11251,
        11269
      ],
      "op": "LT",
      "path": "3"
    },
    "11006": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11234,
        12371
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11007": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11234,
        12371
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C8E"
    },
    "11010": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11234,
        12371
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11011": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11369,
        11378
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11012": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11014": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11015": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11017": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "ADD",
      "path": "3"
    },
    "11018": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B13"
    },
    "11021": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11022": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11023": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E0F"
    },
    "11026": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11352,
        11379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11027": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11028": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11030": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11031": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11033": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11034": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11035": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "SUB",
      "path": "3"
    },
    "11036": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "SUB",
      "path": "3"
    },
    "11037": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11038": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11039": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11040": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11042": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11352,
        11379
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11043": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11342,
        11380
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11044": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11342,
        11380
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11045": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11342,
        11380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11046": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11342,
        11380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11048": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11342,
        11380
      ],
      "op": "ADD",
      "path": "3"
    },
    "11049": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11342,
        11380
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11050": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11324
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "11052": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11325,
        11326
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11053": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11054": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11055": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11056": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "LT",
      "path": "3"
    },
    "11057": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B3C"
    },
    "11060": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11061": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B3C"
    },
    "11064": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "11067": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11315,
        11327
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11068": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11069": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11070": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11072": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11073": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11075": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11077": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11078": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11079": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11081": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "MUL",
      "path": "3"
    },
    "11082": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11327
      ],
      "op": "ADD",
      "path": "3"
    },
    "11083": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11336
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11085": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11315,
        11336
      ],
      "op": "ADD",
      "path": "3"
    },
    "11086": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11088": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11089": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11091": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "ADD",
      "path": "3"
    },
    "11092": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B5D"
    },
    "11095": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11096": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11097": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E2B"
    },
    "11100": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11298,
        11337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11101": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11102": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11104": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11105": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11107": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11108": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11109": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "SUB",
      "path": "3"
    },
    "11110": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "SUB",
      "path": "3"
    },
    "11111": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11112": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11113": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11114": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11116": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11298,
        11337
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11117": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11288,
        11338
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11118": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11288,
        11338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11119": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11288,
        11338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11120": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11288,
        11338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11122": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11288,
        11338
      ],
      "op": "ADD",
      "path": "3"
    },
    "11123": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11288,
        11338
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11124": {
      "branch": 151,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11288,
        11380
      ],
      "op": "SUB",
      "path": "3"
    },
    "11125": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11285,
        12333
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C86"
    },
    "11128": {
      "branch": 151,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11285,
        12333
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11129": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11131": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "11133": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11503,
        11504
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11134": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11135": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11136": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11137": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "LT",
      "path": "3"
    },
    "11138": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B8D"
    },
    "11141": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11142": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B8D"
    },
    "11145": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "11148": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11493,
        11505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11149": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11150": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11151": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11153": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11154": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11156": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11158": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11159": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11160": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11162": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "MUL",
      "path": "3"
    },
    "11163": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11493,
        11505
      ],
      "op": "ADD",
      "path": "3"
    },
    "11164": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11165": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11505
      ],
      "op": "POP",
      "path": "3"
    },
    "11166": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11523,
        11557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11168": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "11170": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11587,
        11588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11172": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "11174": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11175": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11586
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11176": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11177": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11586
      ],
      "op": "POP",
      "path": "3"
    },
    "11178": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11588
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BB3"
    },
    "11181": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11588
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11182": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11588
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11183": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11588
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BCE"
    },
    "11186": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11570,
        11588
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11187": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11570,
        11588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11188": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11189": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11190": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11191": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "LT",
      "path": "3"
    },
    "11192": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC3"
    },
    "11195": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11196": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC3"
    },
    "11199": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "11202": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11560,
        11589
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11203": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11204": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11205": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11207": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11208": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11210": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11212": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11213": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11214": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11216": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "MUL",
      "path": "3"
    },
    "11217": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11560,
        11589
      ],
      "op": "ADD",
      "path": "3"
    },
    "11218": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11523,
        11589
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11219": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11523,
        11589
      ],
      "op": "POP",
      "path": "3"
    },
    "11220": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11718,
        11735
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 85
    },
    "11221": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11705,
        11735
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11222": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11705,
        11735
      ],
      "op": "POP",
      "path": "3"
    },
    "11223": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11769
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 86,
      "value": "0x5"
    },
    "11225": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11787,
        11788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11227": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "11229": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11786
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11230": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11786
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11231": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11786
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11232": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11786
      ],
      "op": "POP",
      "path": "3"
    },
    "11233": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BEA"
    },
    "11236": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11788
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11237": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11788
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11238": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BCE"
    },
    "11241": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11770,
        11788
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11242": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11770,
        11788
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11243": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11244": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11245": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11246": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "LT",
      "path": "3"
    },
    "11247": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BFA"
    },
    "11250": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11251": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BFA"
    },
    "11254": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "11257": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11760,
        11789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11258": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11259": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11260": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11262": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11263": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11265": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11267": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11268": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11269": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11271": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "MUL",
      "path": "3"
    },
    "11272": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "ADD",
      "path": "3"
    },
    "11273": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11760,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11275": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11277": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11278": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "ADD",
      "path": "3"
    },
    "11279": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11281": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C1A"
    },
    "11284": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11285": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11286": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x304F"
    },
    "11289": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11753,
        11789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11290": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11291": {
      "op": "POP"
    },
    "11292": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11294": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "ADD",
      "path": "3"
    },
    "11295": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11296": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11301": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "11303": {
      "op": "SHL"
    },
    "11304": {
      "op": "SUB"
    },
    "11305": {
      "op": "NOT"
    },
    "11306": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "AND",
      "path": "3"
    },
    "11307": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11308": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11309": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12275
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 87,
      "value": "0x5"
    },
    "11311": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12276,
        12292
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11312": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12276,
        12292
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11313": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12276,
        12294
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C3C"
    },
    "11316": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12276,
        12294
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11317": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11319": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11753,
        11789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11320": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12276,
        12294
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BCE"
    },
    "11323": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        12276,
        12294
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11324": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12276,
        12294
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11325": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11326": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11327": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11328": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "LT",
      "path": "3"
    },
    "11329": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C4C"
    },
    "11332": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11333": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C4C"
    },
    "11336": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "11339": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        12266,
        12295
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11340": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11341": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11342": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11344": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11345": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11347": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11349": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11350": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11351": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11353": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "MUL",
      "path": "3"
    },
    "11354": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "ADD",
      "path": "3"
    },
    "11355": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12266,
        12295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11357": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11359": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11360": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "ADD",
      "path": "3"
    },
    "11361": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11363": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C6C"
    },
    "11366": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11367": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11368": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x304F"
    },
    "11371": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        12259,
        12295
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11372": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11373": {
      "op": "POP"
    },
    "11374": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11376": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "ADD",
      "path": "3"
    },
    "11377": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11378": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "11385": {
      "op": "SHL"
    },
    "11386": {
      "op": "SUB"
    },
    "11387": {
      "op": "NOT"
    },
    "11388": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "AND",
      "path": "3"
    },
    "11389": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11390": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12259,
        12295
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11391": {
      "op": "POP"
    },
    "11392": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12313,
        12318
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 88,
      "value": "0x2C8E"
    },
    "11395": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12313,
        12318
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11396": {
      "op": "POP"
    },
    "11397": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12313,
        12318
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11398": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11285,
        12333
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11399": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12356,
        12359
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 89,
      "value": "0x1"
    },
    "11401": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12356,
        12359
      ],
      "op": "ADD",
      "path": "3"
    },
    "11402": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11234,
        12371
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF8"
    },
    "11405": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11234,
        12371
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11406": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11234,
        12371
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11407": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11234,
        12371
      ],
      "op": "POP",
      "path": "3"
    },
    "11408": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        12377
      ],
      "op": "POP",
      "path": "3"
    },
    "11409": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "o",
      "offset": [
        11156,
        12377
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11410": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11411": {
      "fn": "Governance.getVotes",
      "offset": [
        5589,
        5604
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "11413": {
      "fn": "Governance.getVotes",
      "offset": [
        5637,
        5651
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 90,
      "value": "0x9"
    },
    "11415": {
      "fn": "Governance.getVotes",
      "offset": [
        5637,
        5651
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11416": {
      "fn": "Governance.getVotes",
      "offset": [
        5624,
        5634
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11417": {
      "branch": 152,
      "fn": "Governance.getVotes",
      "offset": [
        5624,
        5651
      ],
      "op": "LT",
      "path": "3"
    },
    "11418": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CD8"
    },
    "11421": {
      "branch": 152,
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11422": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11424": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11425": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11429": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11431": {
      "op": "SHL"
    },
    "11432": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11433": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11436": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11438": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11439": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "ADD",
      "path": "3"
    },
    "11440": {
      "op": "MSTORE"
    },
    "11441": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "11443": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11445": {
      "op": "DUP3"
    },
    "11446": {
      "op": "ADD"
    },
    "11447": {
      "op": "MSTORE"
    },
    "11448": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "11467": {
      "op": "SHL"
    },
    "11468": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11470": {
      "op": "DUP3"
    },
    "11471": {
      "op": "ADD"
    },
    "11472": {
      "op": "MSTORE"
    },
    "11473": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11475": {
      "op": "ADD"
    },
    "11476": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "11479": {
      "op": "JUMP"
    },
    "11480": {
      "fn": "Governance.getVotes",
      "offset": [
        5616,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11481": {
      "fn": "Governance.getVotes",
      "offset": [
        5682,
        5707
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11483": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5744
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11484": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5744
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11485": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5744
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11486": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "11488": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5744
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11490": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5744
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11491": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5744
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11493": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5744
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11494": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5744
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11495": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11497": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5760
      ],
      "op": "ADD",
      "path": "3"
    },
    "11498": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5760
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11499": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "11502": {
      "fn": "Governance.getVotes",
      "offset": [
        5723,
        5760
      ],
      "op": "AND",
      "path": "3"
    },
    "11503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11507": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11509": {
      "op": "SHL"
    },
    "11510": {
      "op": "SUB"
    },
    "11511": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11512": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "GT",
      "path": "3"
    },
    "11513": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11514": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D05"
    },
    "11517": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11518": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D05"
    },
    "11521": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x314E"
    },
    "11524": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5710,
        5761
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11525": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11526": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11528": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11529": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11530": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11531": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11532": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11533": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11534": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11536": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "MUL",
      "path": "3"
    },
    "11537": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11539": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "ADD",
      "path": "3"
    },
    "11540": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11541": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "ADD",
      "path": "3"
    },
    "11542": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11544": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11545": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11546": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11547": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D2E"
    },
    "11550": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11551": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11552": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11554": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "ADD",
      "path": "3"
    },
    "11555": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11557": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11558": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "MUL",
      "path": "3"
    },
    "11559": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11560": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "11561": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11562": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "11563": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "ADD",
      "path": "3"
    },
    "11564": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11565": {
      "op": "POP"
    },
    "11566": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11567": {
      "fn": "Governance.getVotes",
      "offset": [
        5710,
        5761
      ],
      "op": "POP",
      "path": "3"
    },
    "11568": {
      "fn": "Governance.getVotes",
      "offset": [
        5682,
        5761
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11569": {
      "fn": "Governance.getVotes",
      "offset": [
        5682,
        5761
      ],
      "op": "POP",
      "path": "3"
    },
    "11570": {
      "fn": "Governance.getVotes",
      "offset": [
        5775,
        5784
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11572": {
      "fn": "Governance.getVotes",
      "offset": [
        5771,
        5885
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11573": {
      "fn": "Governance.getVotes",
      "offset": [
        5793,
        5802
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11574": {
      "fn": "Governance.getVotes",
      "offset": [
        5793,
        5809
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11575": {
      "fn": "Governance.getVotes",
      "offset": [
        5790,
        5791
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11576": {
      "fn": "Governance.getVotes",
      "offset": [
        5790,
        5809
      ],
      "op": "LT",
      "path": "3"
    },
    "11577": {
      "fn": "Governance.getVotes",
      "offset": [
        5771,
        5885
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11578": {
      "fn": "Governance.getVotes",
      "offset": [
        5771,
        5885
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DB5"
    },
    "11581": {
      "fn": "Governance.getVotes",
      "offset": [
        5771,
        5885
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11582": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5853
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 91,
      "value": "0x8"
    },
    "11584": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11586": {
      "fn": "Governance.getVotes",
      "offset": [
        5854,
        5864
      ],
      "op": "DUP6",
      "path": "3"
    },
    "11587": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11588": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11589": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11591": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "ADD",
      "path": "3"
    },
    "11592": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11593": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11594": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11595": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11597": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "ADD",
      "path": "3"
    },
    "11598": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11600": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5865
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11601": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5871
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11603": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5871
      ],
      "op": "ADD",
      "path": "3"
    },
    "11604": {
      "fn": "Governance.getVotes",
      "offset": [
        5872,
        5873
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11605": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "11607": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11608": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "LT",
      "path": "3"
    },
    "11609": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D64"
    },
    "11612": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11613": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D64"
    },
    "11616": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "11619": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5844,
        5874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11620": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11621": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "11623": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11624": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11625": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11626": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "DIV",
      "path": "3"
    },
    "11627": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "ADD",
      "path": "3"
    },
    "11628": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11629": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11630": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "MOD",
      "path": "3"
    },
    "11631": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11633": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "MUL",
      "path": "3"
    },
    "11634": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11635": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11636": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11637": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "11640": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "EXP",
      "path": "3"
    },
    "11641": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11642": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "DIV",
      "path": "3"
    },
    "11643": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "11646": {
      "fn": "Governance.getVotes",
      "offset": [
        5844,
        5874
      ],
      "op": "AND",
      "path": "3"
    },
    "11647": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5838
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11648": {
      "fn": "Governance.getVotes",
      "offset": [
        5839,
        5840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11649": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11650": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11651": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11652": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "LT",
      "path": "3"
    },
    "11653": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D90"
    },
    "11656": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11657": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D90"
    },
    "11660": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391A"
    },
    "11663": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5829,
        5841
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11664": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11665": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFFF"
    },
    "11668": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11669": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5874
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11670": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5874
      ],
      "op": "AND",
      "path": "3"
    },
    "11671": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11673": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11674": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11675": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "MUL",
      "path": "3"
    },
    "11676": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11677": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11678": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11679": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "ADD",
      "path": "3"
    },
    "11680": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11681": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11682": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5841
      ],
      "op": "ADD",
      "path": "3"
    },
    "11683": {
      "fn": "Governance.getVotes",
      "offset": [
        5829,
        5874
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11684": {
      "fn": "Governance.getVotes",
      "offset": [
        5811,
        5814
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 92
    },
    "11685": {
      "fn": "Governance.getVotes",
      "offset": [
        5811,
        5814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DAD"
    },
    "11688": {
      "fn": "Governance.getVotes",
      "offset": [
        5811,
        5814
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11689": {
      "fn": "Governance.getVotes",
      "offset": [
        5811,
        5814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1C"
    },
    "11692": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5811,
        5814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11693": {
      "fn": "Governance.getVotes",
      "offset": [
        5811,
        5814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11694": {
      "fn": "Governance.getVotes",
      "offset": [
        5811,
        5814
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11695": {
      "fn": "Governance.getVotes",
      "offset": [
        5811,
        5814
      ],
      "op": "POP",
      "path": "3"
    },
    "11696": {
      "fn": "Governance.getVotes",
      "offset": [
        5811,
        5814
      ],
      "op": "POP",
      "path": "3"
    },
    "11697": {
      "fn": "Governance.getVotes",
      "offset": [
        5771,
        5885
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D34"
    },
    "11700": {
      "fn": "Governance.getVotes",
      "offset": [
        5771,
        5885
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11701": {
      "fn": "Governance.getVotes",
      "offset": [
        5771,
        5885
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11702": {
      "op": "POP"
    },
    "11703": {
      "fn": "Governance.getVotes",
      "offset": [
        5901,
        5910
      ],
      "op": "SWAP3",
      "path": "3",
      "statement": 93
    },
    "11704": {
      "fn": "Governance.getVotes",
      "offset": [
        5528,
        5917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11705": {
      "op": "POP"
    },
    "11706": {
      "op": "POP"
    },
    "11707": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        5528,
        5917
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11708": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11709": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11711": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11712": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DDF"
    },
    "11715": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DCB"
    },
    "11718": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "11719": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EFE"
    },
    "11722": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11723": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11724": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "11725": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11726": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DDA"
    },
    "11729": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11730": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11731": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11733": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11734": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DCE"
    },
    "11737": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11738": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11739": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F6C"
    },
    "11742": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11743": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11744": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 94
    },
    "11745": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11746": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11747": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11748": {
      "op": "POP"
    },
    "11749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11751": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11753": {
      "op": "SHL"
    },
    "11754": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11755": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "11756": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11758": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11759": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11760": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11761": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11762": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11763": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11764": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11765": {
      "branch": 153,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "11766": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E12"
    },
    "11769": {
      "branch": 153,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11770": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11772": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11773": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "11778": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "11780": {
      "op": "SHL"
    },
    "11781": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11782": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11783": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11785": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "11786": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11788": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11789": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11790": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11791": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "11792": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11793": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11794": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11795": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 95,
      "value": "0xF"
    },
    "11797": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11798": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11800": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11801": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11802": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11803": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11805": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11806": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11807": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11808": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "11809": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11811": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11812": {
      "op": "POP"
    },
    "11813": {
      "op": "POP"
    },
    "11814": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11816": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11817": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11818": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11819": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11820": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11821": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11822": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "11824": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11825": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "11826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11832": {
      "op": "SHL"
    },
    "11833": {
      "op": "SUB"
    },
    "11834": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 96
    },
    "11835": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11836": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "13"
    },
    "11837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11843": {
      "op": "SHL"
    },
    "11844": {
      "op": "SUB"
    },
    "11845": {
      "op": "NOT"
    },
    "11846": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "13"
    },
    "11847": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "13"
    },
    "11848": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11849": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "13"
    },
    "11850": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11851": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "11852": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "11853": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 97,
      "value": "0x40"
    },
    "11855": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11856": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11857": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "13"
    },
    "11858": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11859": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11860": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "13"
    },
    "11861": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11862": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11895": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11896": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11898": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11899": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "13"
    },
    "11900": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "13"
    },
    "11901": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "13"
    },
    "11902": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11903": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3287,
        3611
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11904": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3351,
        3364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11906": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3380,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 98,
      "value": "0x2E9A"
    },
    "11909": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3386,
        3391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11910": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 99
    },
    "11911": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11913": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11914": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11915": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11918": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11920": {
      "op": "SHL"
    },
    "11921": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11922": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11923": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "DIV",
      "path": "1"
    },
    "11924": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11925": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11926": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "SGT",
      "path": "1"
    },
    "11927": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11928": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11929": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5777,
        5899
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11930": {
      "branch": 154,
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3380,
        3392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11931": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11932": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EB8"
    },
    "11935": {
      "branch": 154,
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11936": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11938": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11939": {
      "op": "PUSH4",
      "value": "0x1ED95095"
    },
    "11944": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11946": {
      "op": "SHL"
    },
    "11947": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11948": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11949": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11951": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "ADD",
      "path": "1"
    },
    "11952": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11954": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11955": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11956": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11957": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SUB",
      "path": "1"
    },
    "11958": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11959": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11960": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11961": {
      "op": "POP"
    },
    "11962": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11963": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11964": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11966": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11967": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3418,
        3435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11969": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 100
    },
    "11970": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11971": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11972": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11974": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11975": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "DUP5",
      "path": "1"
    },
    "11976": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "ADD",
      "path": "1"
    },
    "11977": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11979": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11980": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11982": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11983": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11984": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11985": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11986": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 101
    },
    "11987": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11988": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11989": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 102
    },
    "11990": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11991": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12008": {
      "op": "NOT"
    },
    "12009": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "AND",
      "path": "1"
    },
    "12010": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "12011": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3580,
        3594
      ],
      "op": "ADD",
      "path": "1"
    },
    "12012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12016": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12018": {
      "op": "SHL"
    },
    "12019": {
      "op": "SUB"
    },
    "12020": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "AND",
      "path": "1"
    },
    "12021": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12022": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12023": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12024": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "OR",
      "path": "1"
    },
    "12025": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12026": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12027": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "12028": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12029": {
      "fn": "DoubleEndedQueue.popFront",
      "jump": "o",
      "offset": [
        3287,
        3611
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12030": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12031": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12037": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12039": {
      "op": "SHL"
    },
    "12040": {
      "op": "SUB"
    },
    "12041": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 103
    },
    "12042": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "12043": {
      "branch": 156,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12044": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F68"
    },
    "12047": {
      "branch": 156,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12048": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12050": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12057": {
      "op": "SHL"
    },
    "12058": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12059": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12062": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12064": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12065": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "12066": {
      "op": "MSTORE"
    },
    "12067": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "12069": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12071": {
      "op": "DUP3"
    },
    "12072": {
      "op": "ADD"
    },
    "12073": {
      "op": "MSTORE"
    },
    "12074": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "12107": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12109": {
      "op": "DUP3"
    },
    "12110": {
      "op": "ADD"
    },
    "12111": {
      "op": "MSTORE"
    },
    "12112": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "12121": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "12123": {
      "op": "SHL"
    },
    "12124": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12126": {
      "op": "DUP3"
    },
    "12127": {
      "op": "ADD"
    },
    "12128": {
      "op": "MSTORE"
    },
    "12129": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12131": {
      "op": "ADD"
    },
    "12132": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD75"
    },
    "12135": {
      "op": "JUMP"
    },
    "12136": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12137": {
      "op": "POP"
    },
    "12138": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 104
    },
    "12139": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12140": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12141": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12143": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12160": {
      "op": "NOT"
    },
    "12161": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 105
    },
    "12162": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "12163": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12164": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12165": {
      "branch": 157,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12166": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F9F"
    },
    "12169": {
      "branch": 157,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12170": {
      "op": "POP"
    },
    "12171": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12188": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12189": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "12190": {
      "branch": 158,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12191": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12192": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F68"
    },
    "12195": {
      "branch": 158,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12196": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12198": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12199": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12203": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12205": {
      "op": "SHL"
    },
    "12206": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12207": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12210": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12212": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12213": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "12214": {
      "op": "MSTORE"
    },
    "12215": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "12217": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12219": {
      "op": "DUP3"
    },
    "12220": {
      "op": "ADD"
    },
    "12221": {
      "op": "MSTORE"
    },
    "12222": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "12255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12257": {
      "op": "DUP3"
    },
    "12258": {
      "op": "ADD"
    },
    "12259": {
      "op": "MSTORE"
    },
    "12260": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "12268": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "12270": {
      "op": "SHL"
    },
    "12271": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12273": {
      "op": "DUP3"
    },
    "12274": {
      "op": "ADD"
    },
    "12275": {
      "op": "MSTORE"
    },
    "12276": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12278": {
      "op": "ADD"
    },
    "12279": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD75"
    },
    "12282": {
      "op": "JUMP"
    },
    "12283": {
      "op": "JUMPDEST"
    },
    "12284": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12286": {
      "op": "DUP1"
    },
    "12287": {
      "op": "MLOAD"
    },
    "12288": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "12291": {
      "op": "DUP2"
    },
    "12292": {
      "op": "ADD"
    },
    "12293": {
      "op": "DUP3"
    },
    "12294": {
      "op": "MSTORE"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12297": {
      "op": "DUP1"
    },
    "12298": {
      "op": "DUP3"
    },
    "12299": {
      "op": "MSTORE"
    },
    "12300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12304": {
      "op": "DUP4"
    },
    "12305": {
      "op": "ADD"
    },
    "12306": {
      "op": "DUP2"
    },
    "12307": {
      "op": "SWAP1"
    },
    "12308": {
      "op": "MSTORE"
    },
    "12309": {
      "op": "SWAP3"
    },
    "12310": {
      "op": "DUP3"
    },
    "12311": {
      "op": "ADD"
    },
    "12312": {
      "op": "DUP4"
    },
    "12313": {
      "op": "SWAP1"
    },
    "12314": {
      "op": "MSTORE"
    },
    "12315": {
      "op": "DUP2"
    },
    "12316": {
      "op": "ADD"
    },
    "12317": {
      "op": "DUP3"
    },
    "12318": {
      "op": "SWAP1"
    },
    "12319": {
      "op": "MSTORE"
    },
    "12320": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12322": {
      "op": "DUP2"
    },
    "12323": {
      "op": "ADD"
    },
    "12324": {
      "op": "DUP3"
    },
    "12325": {
      "op": "SWAP1"
    },
    "12326": {
      "op": "MSTORE"
    },
    "12327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12329": {
      "op": "DUP2"
    },
    "12330": {
      "op": "ADD"
    },
    "12331": {
      "op": "DUP3"
    },
    "12332": {
      "op": "SWAP1"
    },
    "12333": {
      "op": "MSTORE"
    },
    "12334": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12336": {
      "op": "DUP2"
    },
    "12337": {
      "op": "ADD"
    },
    "12338": {
      "op": "DUP3"
    },
    "12339": {
      "op": "SWAP1"
    },
    "12340": {
      "op": "MSTORE"
    },
    "12341": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12343": {
      "op": "DUP2"
    },
    "12344": {
      "op": "ADD"
    },
    "12345": {
      "op": "DUP3"
    },
    "12346": {
      "op": "SWAP1"
    },
    "12347": {
      "op": "MSTORE"
    },
    "12348": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12351": {
      "op": "DUP2"
    },
    "12352": {
      "op": "ADD"
    },
    "12353": {
      "op": "DUP3"
    },
    "12354": {
      "op": "SWAP1"
    },
    "12355": {
      "op": "MSTORE"
    },
    "12356": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "12359": {
      "op": "DUP2"
    },
    "12360": {
      "op": "ADD"
    },
    "12361": {
      "op": "SWAP2"
    },
    "12362": {
      "op": "SWAP1"
    },
    "12363": {
      "op": "SWAP2"
    },
    "12364": {
      "op": "MSTORE"
    },
    "12365": {
      "op": "SWAP1"
    },
    "12366": {
      "jump": "o",
      "op": "JUMP"
    },
    "12367": {
      "op": "JUMPDEST"
    },
    "12368": {
      "op": "POP"
    },
    "12369": {
      "op": "DUP1"
    },
    "12370": {
      "op": "SLOAD"
    },
    "12371": {
      "op": "PUSH2",
      "value": "0x305B"
    },
    "12374": {
      "op": "SWAP1"
    },
    "12375": {
      "op": "PUSH2",
      "value": "0x38E0"
    },
    "12378": {
      "jump": "i",
      "op": "JUMP"
    },
    "12379": {
      "op": "JUMPDEST"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12382": {
      "op": "DUP3"
    },
    "12383": {
      "op": "SSTORE"
    },
    "12384": {
      "op": "DUP1"
    },
    "12385": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12387": {
      "op": "LT"
    },
    "12388": {
      "op": "PUSH2",
      "value": "0x306B"
    },
    "12391": {
      "op": "JUMPI"
    },
    "12392": {
      "op": "POP"
    },
    "12393": {
      "op": "POP"
    },
    "12394": {
      "jump": "o",
      "op": "JUMP"
    },
    "12395": {
      "op": "JUMPDEST"
    },
    "12396": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12398": {
      "op": "ADD"
    },
    "12399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12401": {
      "op": "SWAP1"
    },
    "12402": {
      "op": "DIV"
    },
    "12403": {
      "op": "SWAP1"
    },
    "12404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12406": {
      "op": "MSTORE"
    },
    "12407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12411": {
      "op": "KECCAK256"
    },
    "12412": {
      "op": "SWAP1"
    },
    "12413": {
      "op": "DUP2"
    },
    "12414": {
      "op": "ADD"
    },
    "12415": {
      "op": "SWAP1"
    },
    "12416": {
      "op": "PUSH2",
      "value": "0x2922"
    },
    "12419": {
      "op": "SWAP2"
    },
    "12420": {
      "op": "SWAP1"
    },
    "12421": {
      "op": "JUMPDEST"
    },
    "12422": {
      "op": "DUP1"
    },
    "12423": {
      "op": "DUP3"
    },
    "12424": {
      "op": "GT"
    },
    "12425": {
      "op": "ISZERO"
    },
    "12426": {
      "op": "PUSH2",
      "value": "0x2F68"
    },
    "12429": {
      "op": "JUMPI"
    },
    "12430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12432": {
      "op": "DUP2"
    },
    "12433": {
      "op": "SSTORE"
    },
    "12434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12436": {
      "op": "ADD"
    },
    "12437": {
      "op": "PUSH2",
      "value": "0x3085"
    },
    "12440": {
      "op": "JUMP"
    },
    "12441": {
      "op": "JUMPDEST"
    },
    "12442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12446": {
      "op": "DUP3"
    },
    "12447": {
      "op": "DUP5"
    },
    "12448": {
      "op": "SUB"
    },
    "12449": {
      "op": "SLT"
    },
    "12450": {
      "op": "ISZERO"
    },
    "12451": {
      "op": "PUSH2",
      "value": "0x30AB"
    },
    "12454": {
      "op": "JUMPI"
    },
    "12455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12457": {
      "op": "DUP1"
    },
    "12458": {
      "op": "REVERT"
    },
    "12459": {
      "op": "JUMPDEST"
    },
    "12460": {
      "op": "POP"
    },
    "12461": {
      "op": "CALLDATALOAD"
    },
    "12462": {
      "op": "SWAP2"
    },
    "12463": {
      "op": "SWAP1"
    },
    "12464": {
      "op": "POP"
    },
    "12465": {
      "jump": "o",
      "op": "JUMP"
    },
    "12466": {
      "op": "JUMPDEST"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12469": {
      "op": "JUMPDEST"
    },
    "12470": {
      "op": "DUP4"
    },
    "12471": {
      "op": "DUP2"
    },
    "12472": {
      "op": "LT"
    },
    "12473": {
      "op": "ISZERO"
    },
    "12474": {
      "op": "PUSH2",
      "value": "0x30CD"
    },
    "12477": {
      "op": "JUMPI"
    },
    "12478": {
      "op": "DUP2"
    },
    "12479": {
      "op": "DUP2"
    },
    "12480": {
      "op": "ADD"
    },
    "12481": {
      "op": "MLOAD"
    },
    "12482": {
      "op": "DUP4"
    },
    "12483": {
      "op": "DUP3"
    },
    "12484": {
      "op": "ADD"
    },
    "12485": {
      "op": "MSTORE"
    },
    "12486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12488": {
      "op": "ADD"
    },
    "12489": {
      "op": "PUSH2",
      "value": "0x30B5"
    },
    "12492": {
      "op": "JUMP"
    },
    "12493": {
      "op": "JUMPDEST"
    },
    "12494": {
      "op": "DUP4"
    },
    "12495": {
      "op": "DUP2"
    },
    "12496": {
      "op": "GT"
    },
    "12497": {
      "op": "ISZERO"
    },
    "12498": {
      "op": "PUSH2",
      "value": "0x1279"
    },
    "12501": {
      "op": "JUMPI"
    },
    "12502": {
      "op": "POP"
    },
    "12503": {
      "op": "POP"
    },
    "12504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12506": {
      "op": "SWAP2"
    },
    "12507": {
      "op": "ADD"
    },
    "12508": {
      "op": "MSTORE"
    },
    "12509": {
      "jump": "o",
      "op": "JUMP"
    },
    "12510": {
      "op": "JUMPDEST"
    },
    "12511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12513": {
      "op": "DUP2"
    },
    "12514": {
      "op": "MLOAD"
    },
    "12515": {
      "op": "DUP1"
    },
    "12516": {
      "op": "DUP5"
    },
    "12517": {
      "op": "MSTORE"
    },
    "12518": {
      "op": "PUSH2",
      "value": "0x30F6"
    },
    "12521": {
      "op": "DUP2"
    },
    "12522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12524": {
      "op": "DUP7"
    },
    "12525": {
      "op": "ADD"
    },
    "12526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12528": {
      "op": "DUP7"
    },
    "12529": {
      "op": "ADD"
    },
    "12530": {
      "op": "PUSH2",
      "value": "0x30B2"
    },
    "12533": {
      "jump": "i",
      "op": "JUMP"
    },
    "12534": {
      "op": "JUMPDEST"
    },
    "12535": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12537": {
      "op": "ADD"
    },
    "12538": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12540": {
      "op": "NOT"
    },
    "12541": {
      "op": "AND"
    },
    "12542": {
      "op": "SWAP3"
    },
    "12543": {
      "op": "SWAP1"
    },
    "12544": {
      "op": "SWAP3"
    },
    "12545": {
      "op": "ADD"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12548": {
      "op": "ADD"
    },
    "12549": {
      "op": "SWAP3"
    },
    "12550": {
      "op": "SWAP2"
    },
    "12551": {
      "op": "POP"
    },
    "12552": {
      "op": "POP"
    },
    "12553": {
      "jump": "o",
      "op": "JUMP"
    },
    "12554": {
      "op": "JUMPDEST"
    },
    "12555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12557": {
      "op": "DUP2"
    },
    "12558": {
      "op": "MSTORE"
    },
    "12559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12561": {
      "op": "PUSH2",
      "value": "0x311D"
    },
    "12564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12566": {
      "op": "DUP4"
    },
    "12567": {
      "op": "ADD"
    },
    "12568": {
      "op": "DUP9"
    },
    "12569": {
      "op": "PUSH2",
      "value": "0x30DE"
    },
    "12572": {
      "jump": "i",
      "op": "JUMP"
    },
    "12573": {
      "op": "JUMPDEST"
    },
    "12574": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12577": {
      "op": "SWAP7"
    },
    "12578": {
      "op": "SWAP1"
    },
    "12579": {
      "op": "SWAP7"
    },
    "12580": {
      "op": "AND"
    },
    "12581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12583": {
      "op": "DUP4"
    },
    "12584": {
      "op": "ADD"
    },
    "12585": {
      "op": "MSTORE"
    },
    "12586": {
      "op": "POP"
    },
    "12587": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12593": {
      "op": "SWAP4"
    },
    "12594": {
      "op": "DUP5"
    },
    "12595": {
      "op": "AND"
    },
    "12596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12598": {
      "op": "DUP3"
    },
    "12599": {
      "op": "ADD"
    },
    "12600": {
      "op": "MSTORE"
    },
    "12601": {
      "op": "SWAP2"
    },
    "12602": {
      "op": "DUP4"
    },
    "12603": {
      "op": "AND"
    },
    "12604": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12606": {
      "op": "DUP4"
    },
    "12607": {
      "op": "ADD"
    },
    "12608": {
      "op": "MSTORE"
    },
    "12609": {
      "op": "SWAP1"
    },
    "12610": {
      "op": "SWAP2"
    },
    "12611": {
      "op": "AND"
    },
    "12612": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12614": {
      "op": "SWAP1"
    },
    "12615": {
      "op": "SWAP2"
    },
    "12616": {
      "op": "ADD"
    },
    "12617": {
      "op": "MSTORE"
    },
    "12618": {
      "op": "SWAP2"
    },
    "12619": {
      "op": "SWAP1"
    },
    "12620": {
      "op": "POP"
    },
    "12621": {
      "jump": "o",
      "op": "JUMP"
    },
    "12622": {
      "op": "JUMPDEST"
    },
    "12623": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12630": {
      "op": "SHL"
    },
    "12631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12633": {
      "op": "MSTORE"
    },
    "12634": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12636": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12638": {
      "op": "MSTORE"
    },
    "12639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12643": {
      "op": "REVERT"
    },
    "12644": {
      "op": "JUMPDEST"
    },
    "12645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12647": {
      "op": "MLOAD"
    },
    "12648": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12650": {
      "op": "DUP3"
    },
    "12651": {
      "op": "ADD"
    },
    "12652": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12654": {
      "op": "NOT"
    },
    "12655": {
      "op": "AND"
    },
    "12656": {
      "op": "DUP2"
    },
    "12657": {
      "op": "ADD"
    },
    "12658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12664": {
      "op": "SHL"
    },
    "12665": {
      "op": "SUB"
    },
    "12666": {
      "op": "DUP2"
    },
    "12667": {
      "op": "GT"
    },
    "12668": {
      "op": "DUP3"
    },
    "12669": {
      "op": "DUP3"
    },
    "12670": {
      "op": "LT"
    },
    "12671": {
      "op": "OR"
    },
    "12672": {
      "op": "ISZERO"
    },
    "12673": {
      "op": "PUSH2",
      "value": "0x318C"
    },
    "12676": {
      "op": "JUMPI"
    },
    "12677": {
      "op": "PUSH2",
      "value": "0x318C"
    },
    "12680": {
      "op": "PUSH2",
      "value": "0x314E"
    },
    "12683": {
      "jump": "i",
      "op": "JUMP"
    },
    "12684": {
      "op": "JUMPDEST"
    },
    "12685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12687": {
      "op": "MSTORE"
    },
    "12688": {
      "op": "SWAP2"
    },
    "12689": {
      "op": "SWAP1"
    },
    "12690": {
      "op": "POP"
    },
    "12691": {
      "jump": "o",
      "op": "JUMP"
    },
    "12692": {
      "op": "JUMPDEST"
    },
    "12693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12695": {
      "op": "DUP3"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12698": {
      "op": "DUP4"
    },
    "12699": {
      "op": "ADD"
    },
    "12700": {
      "op": "SLT"
    },
    "12701": {
      "op": "PUSH2",
      "value": "0x31A5"
    },
    "12704": {
      "op": "JUMPI"
    },
    "12705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12707": {
      "op": "DUP1"
    },
    "12708": {
      "op": "REVERT"
    },
    "12709": {
      "op": "JUMPDEST"
    },
    "12710": {
      "op": "DUP2"
    },
    "12711": {
      "op": "CALLDATALOAD"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12718": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12720": {
      "op": "SHL"
    },
    "12721": {
      "op": "SUB"
    },
    "12722": {
      "op": "DUP3"
    },
    "12723": {
      "op": "GT"
    },
    "12724": {
      "op": "ISZERO"
    },
    "12725": {
      "op": "PUSH2",
      "value": "0x31C0"
    },
    "12728": {
      "op": "JUMPI"
    },
    "12729": {
      "op": "PUSH2",
      "value": "0x31C0"
    },
    "12732": {
      "op": "PUSH2",
      "value": "0x314E"
    },
    "12735": {
      "jump": "i",
      "op": "JUMP"
    },
    "12736": {
      "op": "JUMPDEST"
    },
    "12737": {
      "op": "DUP2"
    },
    "12738": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12740": {
      "op": "SHL"
    },
    "12741": {
      "op": "PUSH2",
      "value": "0x31CF"
    },
    "12744": {
      "op": "DUP3"
    },
    "12745": {
      "op": "DUP3"
    },
    "12746": {
      "op": "ADD"
    },
    "12747": {
      "op": "PUSH2",
      "value": "0x3164"
    },
    "12750": {
      "jump": "i",
      "op": "JUMP"
    },
    "12751": {
      "op": "JUMPDEST"
    },
    "12752": {
      "op": "SWAP3"
    },
    "12753": {
      "op": "DUP4"
    },
    "12754": {
      "op": "MSTORE"
    },
    "12755": {
      "op": "DUP5"
    },
    "12756": {
      "op": "DUP2"
    },
    "12757": {
      "op": "ADD"
    },
    "12758": {
      "op": "DUP3"
    },
    "12759": {
      "op": "ADD"
    },
    "12760": {
      "op": "SWAP3"
    },
    "12761": {
      "op": "DUP3"
    },
    "12762": {
      "op": "DUP2"
    },
    "12763": {
      "op": "ADD"
    },
    "12764": {
      "op": "SWAP1"
    },
    "12765": {
      "op": "DUP8"
    },
    "12766": {
      "op": "DUP6"
    },
    "12767": {
      "op": "GT"
    },
    "12768": {
      "op": "ISZERO"
    },
    "12769": {
      "op": "PUSH2",
      "value": "0x31E9"
    },
    "12772": {
      "op": "JUMPI"
    },
    "12773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12775": {
      "op": "DUP1"
    },
    "12776": {
      "op": "REVERT"
    },
    "12777": {
      "op": "JUMPDEST"
    },
    "12778": {
      "op": "DUP4"
    },
    "12779": {
      "op": "DUP8"
    },
    "12780": {
      "op": "ADD"
    },
    "12781": {
      "op": "SWAP3"
    },
    "12782": {
      "op": "POP"
    },
    "12783": {
      "op": "JUMPDEST"
    },
    "12784": {
      "op": "DUP5"
    },
    "12785": {
      "op": "DUP4"
    },
    "12786": {
      "op": "LT"
    },
    "12787": {
      "op": "ISZERO"
    },
    "12788": {
      "op": "PUSH2",
      "value": "0x3208"
    },
    "12791": {
      "op": "JUMPI"
    },
    "12792": {
      "op": "DUP3"
    },
    "12793": {
      "op": "CALLDATALOAD"
    },
    "12794": {
      "op": "DUP3"
    },
    "12795": {
      "op": "MSTORE"
    },
    "12796": {
      "op": "SWAP2"
    },
    "12797": {
      "op": "DUP4"
    },
    "12798": {
      "op": "ADD"
    },
    "12799": {
      "op": "SWAP2"
    },
    "12800": {
      "op": "SWAP1"
    },
    "12801": {
      "op": "DUP4"
    },
    "12802": {
      "op": "ADD"
    },
    "12803": {
      "op": "SWAP1"
    },
    "12804": {
      "op": "PUSH2",
      "value": "0x31EF"
    },
    "12807": {
      "op": "JUMP"
    },
    "12808": {
      "op": "JUMPDEST"
    },
    "12809": {
      "op": "SWAP8"
    },
    "12810": {
      "op": "SWAP7"
    },
    "12811": {
      "op": "POP"
    },
    "12812": {
      "op": "POP"
    },
    "12813": {
      "op": "POP"
    },
    "12814": {
      "op": "POP"
    },
    "12815": {
      "op": "POP"
    },
    "12816": {
      "op": "POP"
    },
    "12817": {
      "op": "POP"
    },
    "12818": {
      "jump": "o",
      "op": "JUMP"
    },
    "12819": {
      "op": "JUMPDEST"
    },
    "12820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12822": {
      "op": "DUP1"
    },
    "12823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12825": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12827": {
      "op": "DUP5"
    },
    "12828": {
      "op": "DUP7"
    },
    "12829": {
      "op": "SUB"
    },
    "12830": {
      "op": "SLT"
    },
    "12831": {
      "op": "ISZERO"
    },
    "12832": {
      "op": "PUSH2",
      "value": "0x3228"
    },
    "12835": {
      "op": "JUMPI"
    },
    "12836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12838": {
      "op": "DUP1"
    },
    "12839": {
      "op": "REVERT"
    },
    "12840": {
      "op": "JUMPDEST"
    },
    "12841": {
      "op": "DUP4"
    },
    "12842": {
      "op": "CALLDATALOAD"
    },
    "12843": {
      "op": "SWAP3"
    },
    "12844": {
      "op": "POP"
    },
    "12845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12847": {
      "op": "DUP5"
    },
    "12848": {
      "op": "ADD"
    },
    "12849": {
      "op": "CALLDATALOAD"
    },
    "12850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12856": {
      "op": "SHL"
    },
    "12857": {
      "op": "SUB"
    },
    "12858": {
      "op": "DUP2"
    },
    "12859": {
      "op": "GT"
    },
    "12860": {
      "op": "ISZERO"
    },
    "12861": {
      "op": "PUSH2",
      "value": "0x3245"
    },
    "12864": {
      "op": "JUMPI"
    },
    "12865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12867": {
      "op": "DUP1"
    },
    "12868": {
      "op": "REVERT"
    },
    "12869": {
      "op": "JUMPDEST"
    },
    "12870": {
      "op": "PUSH2",
      "value": "0x3251"
    },
    "12873": {
      "op": "DUP7"
    },
    "12874": {
      "op": "DUP3"
    },
    "12875": {
      "op": "DUP8"
    },
    "12876": {
      "op": "ADD"
    },
    "12877": {
      "op": "PUSH2",
      "value": "0x3194"
    },
    "12880": {
      "jump": "i",
      "op": "JUMP"
    },
    "12881": {
      "op": "JUMPDEST"
    },
    "12882": {
      "op": "SWAP3"
    },
    "12883": {
      "op": "POP"
    },
    "12884": {
      "op": "POP"
    },
    "12885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12887": {
      "op": "DUP5"
    },
    "12888": {
      "op": "ADD"
    },
    "12889": {
      "op": "CALLDATALOAD"
    },
    "12890": {
      "op": "DUP1"
    },
    "12891": {
      "op": "ISZERO"
    },
    "12892": {
      "op": "ISZERO"
    },
    "12893": {
      "op": "DUP2"
    },
    "12894": {
      "op": "EQ"
    },
    "12895": {
      "op": "PUSH2",
      "value": "0x3267"
    },
    "12898": {
      "op": "JUMPI"
    },
    "12899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12901": {
      "op": "DUP1"
    },
    "12902": {
      "op": "REVERT"
    },
    "12903": {
      "op": "JUMPDEST"
    },
    "12904": {
      "op": "DUP1"
    },
    "12905": {
      "op": "SWAP2"
    },
    "12906": {
      "op": "POP"
    },
    "12907": {
      "op": "POP"
    },
    "12908": {
      "op": "SWAP3"
    },
    "12909": {
      "op": "POP"
    },
    "12910": {
      "op": "SWAP3"
    },
    "12911": {
      "op": "POP"
    },
    "12912": {
      "op": "SWAP3"
    },
    "12913": {
      "jump": "o",
      "op": "JUMP"
    },
    "12914": {
      "op": "JUMPDEST"
    },
    "12915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12917": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12920": {
      "op": "DUP1"
    },
    "12921": {
      "op": "DUP4"
    },
    "12922": {
      "op": "MSTORE"
    },
    "12923": {
      "op": "PUSH2",
      "value": "0x3286"
    },
    "12926": {
      "op": "DUP2"
    },
    "12927": {
      "op": "DUP5"
    },
    "12928": {
      "op": "ADD"
    },
    "12929": {
      "op": "DUP13"
    },
    "12930": {
      "op": "PUSH2",
      "value": "0x30DE"
    },
    "12933": {
      "jump": "i",
      "op": "JUMP"
    },
    "12934": {
      "op": "JUMPDEST"
    },
    "12935": {
      "op": "SWAP10"
    },
    "12936": {
      "op": "ISZERO"
    },
    "12937": {
      "op": "ISZERO"
    },
    "12938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12940": {
      "op": "DUP5"
    },
    "12941": {
      "op": "ADD"
    },
    "12942": {
      "op": "MSTORE"
    },
    "12943": {
      "op": "POP"
    },
    "12944": {
      "op": "POP"
    },
    "12945": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12951": {
      "op": "SWAP7"
    },
    "12952": {
      "op": "DUP8"
    },
    "12953": {
      "op": "AND"
    },
    "12954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12956": {
      "op": "DUP3"
    },
    "12957": {
      "op": "ADD"
    },
    "12958": {
      "op": "MSTORE"
    },
    "12959": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12961": {
      "op": "SWAP6"
    },
    "12962": {
      "op": "SWAP1"
    },
    "12963": {
      "op": "SWAP6"
    },
    "12964": {
      "op": "AND"
    },
    "12965": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12967": {
      "op": "DUP7"
    },
    "12968": {
      "op": "ADD"
    },
    "12969": {
      "op": "MSTORE"
    },
    "12970": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "12974": {
      "op": "SWAP4"
    },
    "12975": {
      "op": "SWAP1"
    },
    "12976": {
      "op": "SWAP4"
    },
    "12977": {
      "op": "AND"
    },
    "12978": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12980": {
      "op": "DUP6"
    },
    "12981": {
      "op": "ADD"
    },
    "12982": {
      "op": "MSTORE"
    },
    "12983": {
      "op": "SWAP1"
    },
    "12984": {
      "op": "DUP5"
    },
    "12985": {
      "op": "AND"
    },
    "12986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12988": {
      "op": "DUP5"
    },
    "12989": {
      "op": "ADD"
    },
    "12990": {
      "op": "MSTORE"
    },
    "12991": {
      "op": "SWAP1"
    },
    "12992": {
      "op": "SWAP3"
    },
    "12993": {
      "op": "AND"
    },
    "12994": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12996": {
      "op": "DUP3"
    },
    "12997": {
      "op": "ADD"
    },
    "12998": {
      "op": "MSTORE"
    },
    "12999": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13002": {
      "op": "SWAP1"
    },
    "13003": {
      "op": "SWAP2"
    },
    "13004": {
      "op": "AND"
    },
    "13005": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13007": {
      "op": "SWAP1"
    },
    "13008": {
      "op": "SWAP2"
    },
    "13009": {
      "op": "ADD"
    },
    "13010": {
      "op": "MSTORE"
    },
    "13011": {
      "op": "SWAP2"
    },
    "13012": {
      "op": "SWAP1"
    },
    "13013": {
      "op": "POP"
    },
    "13014": {
      "jump": "o",
      "op": "JUMP"
    },
    "13015": {
      "op": "JUMPDEST"
    },
    "13016": {
      "op": "DUP1"
    },
    "13017": {
      "op": "CALLDATALOAD"
    },
    "13018": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13024": {
      "op": "DUP2"
    },
    "13025": {
      "op": "AND"
    },
    "13026": {
      "op": "DUP2"
    },
    "13027": {
      "op": "EQ"
    },
    "13028": {
      "op": "PUSH2",
      "value": "0x32EC"
    },
    "13031": {
      "op": "JUMPI"
    },
    "13032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13034": {
      "op": "DUP1"
    },
    "13035": {
      "op": "REVERT"
    },
    "13036": {
      "op": "JUMPDEST"
    },
    "13037": {
      "op": "SWAP2"
    },
    "13038": {
      "op": "SWAP1"
    },
    "13039": {
      "op": "POP"
    },
    "13040": {
      "jump": "o",
      "op": "JUMP"
    },
    "13041": {
      "op": "JUMPDEST"
    },
    "13042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13046": {
      "op": "DUP3"
    },
    "13047": {
      "op": "DUP5"
    },
    "13048": {
      "op": "SUB"
    },
    "13049": {
      "op": "SLT"
    },
    "13050": {
      "op": "ISZERO"
    },
    "13051": {
      "op": "PUSH2",
      "value": "0x3303"
    },
    "13054": {
      "op": "JUMPI"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13057": {
      "op": "DUP1"
    },
    "13058": {
      "op": "REVERT"
    },
    "13059": {
      "op": "JUMPDEST"
    },
    "13060": {
      "op": "PUSH2",
      "value": "0x330C"
    },
    "13063": {
      "op": "DUP3"
    },
    "13064": {
      "op": "PUSH2",
      "value": "0x32D7"
    },
    "13067": {
      "jump": "i",
      "op": "JUMP"
    },
    "13068": {
      "op": "JUMPDEST"
    },
    "13069": {
      "op": "SWAP4"
    },
    "13070": {
      "op": "SWAP3"
    },
    "13071": {
      "op": "POP"
    },
    "13072": {
      "op": "POP"
    },
    "13073": {
      "op": "POP"
    },
    "13074": {
      "jump": "o",
      "op": "JUMP"
    },
    "13075": {
      "op": "JUMPDEST"
    },
    "13076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13078": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "13081": {
      "op": "DUP3"
    },
    "13082": {
      "op": "MLOAD"
    },
    "13083": {
      "op": "DUP2"
    },
    "13084": {
      "op": "DUP6"
    },
    "13085": {
      "op": "MSTORE"
    },
    "13086": {
      "op": "PUSH2",
      "value": "0x3329"
    },
    "13089": {
      "op": "DUP3"
    },
    "13090": {
      "op": "DUP7"
    },
    "13091": {
      "op": "ADD"
    },
    "13092": {
      "op": "DUP3"
    },
    "13093": {
      "op": "PUSH2",
      "value": "0x30DE"
    },
    "13096": {
      "jump": "i",
      "op": "JUMP"
    },
    "13097": {
      "op": "JUMPDEST"
    },
    "13098": {
      "op": "SWAP2"
    },
    "13099": {
      "op": "POP"
    },
    "13100": {
      "op": "POP"
    },
    "13101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13103": {
      "op": "DUP4"
    },
    "13104": {
      "op": "ADD"
    },
    "13105": {
      "op": "MLOAD"
    },
    "13106": {
      "op": "PUSH2",
      "value": "0x3344"
    },
    "13109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13111": {
      "op": "DUP7"
    },
    "13112": {
      "op": "ADD"
    },
    "13113": {
      "op": "DUP3"
    },
    "13114": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13120": {
      "op": "AND"
    },
    "13121": {
      "op": "SWAP1"
    },
    "13122": {
      "op": "MSTORE"
    },
    "13123": {
      "op": "JUMP"
    },
    "13124": {
      "op": "JUMPDEST"
    },
    "13125": {
      "op": "POP"
    },
    "13126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13128": {
      "op": "DUP4"
    },
    "13129": {
      "op": "ADD"
    },
    "13130": {
      "op": "MLOAD"
    },
    "13131": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13133": {
      "op": "DUP6"
    },
    "13134": {
      "op": "ADD"
    },
    "13135": {
      "op": "MSTORE"
    },
    "13136": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13138": {
      "op": "DUP4"
    },
    "13139": {
      "op": "ADD"
    },
    "13140": {
      "op": "MLOAD"
    },
    "13141": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13143": {
      "op": "DUP6"
    },
    "13144": {
      "op": "ADD"
    },
    "13145": {
      "op": "MSTORE"
    },
    "13146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13148": {
      "op": "DUP4"
    },
    "13149": {
      "op": "ADD"
    },
    "13150": {
      "op": "MLOAD"
    },
    "13151": {
      "op": "PUSH2",
      "value": "0x336D"
    },
    "13154": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13156": {
      "op": "DUP7"
    },
    "13157": {
      "op": "ADD"
    },
    "13158": {
      "op": "DUP3"
    },
    "13159": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13161": {
      "op": "AND"
    },
    "13162": {
      "op": "SWAP1"
    },
    "13163": {
      "op": "MSTORE"
    },
    "13164": {
      "op": "JUMP"
    },
    "13165": {
      "op": "JUMPDEST"
    },
    "13166": {
      "op": "POP"
    },
    "13167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13169": {
      "op": "DUP4"
    },
    "13170": {
      "op": "ADD"
    },
    "13171": {
      "op": "MLOAD"
    },
    "13172": {
      "op": "PUSH2",
      "value": "0x3384"
    },
    "13175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13177": {
      "op": "DUP7"
    },
    "13178": {
      "op": "ADD"
    },
    "13179": {
      "op": "DUP3"
    },
    "13180": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13184": {
      "op": "AND"
    },
    "13185": {
      "op": "SWAP1"
    },
    "13186": {
      "op": "MSTORE"
    },
    "13187": {
      "op": "JUMP"
    },
    "13188": {
      "op": "JUMPDEST"
    },
    "13189": {
      "op": "POP"
    },
    "13190": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13192": {
      "op": "DUP4"
    },
    "13193": {
      "op": "ADD"
    },
    "13194": {
      "op": "MLOAD"
    },
    "13195": {
      "op": "PUSH2",
      "value": "0x339F"
    },
    "13198": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13200": {
      "op": "DUP7"
    },
    "13201": {
      "op": "ADD"
    },
    "13202": {
      "op": "DUP3"
    },
    "13203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13207": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "13209": {
      "op": "SHL"
    },
    "13210": {
      "op": "SUB"
    },
    "13211": {
      "op": "AND"
    },
    "13212": {
      "op": "SWAP1"
    },
    "13213": {
      "op": "MSTORE"
    },
    "13214": {
      "op": "JUMP"
    },
    "13215": {
      "op": "JUMPDEST"
    },
    "13216": {
      "op": "POP"
    },
    "13217": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13219": {
      "op": "DUP4"
    },
    "13220": {
      "op": "ADD"
    },
    "13221": {
      "op": "MLOAD"
    },
    "13222": {
      "op": "PUSH2",
      "value": "0x33B5"
    },
    "13225": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13227": {
      "op": "DUP7"
    },
    "13228": {
      "op": "ADD"
    },
    "13229": {
      "op": "DUP3"
    },
    "13230": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13233": {
      "op": "AND"
    },
    "13234": {
      "op": "SWAP1"
    },
    "13235": {
      "op": "MSTORE"
    },
    "13236": {
      "op": "JUMP"
    },
    "13237": {
      "op": "JUMPDEST"
    },
    "13238": {
      "op": "POP"
    },
    "13239": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13242": {
      "op": "DUP4"
    },
    "13243": {
      "op": "DUP2"
    },
    "13244": {
      "op": "ADD"
    },
    "13245": {
      "op": "MLOAD"
    },
    "13246": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13249": {
      "op": "AND"
    },
    "13250": {
      "op": "SWAP1"
    },
    "13251": {
      "op": "DUP6"
    },
    "13252": {
      "op": "ADD"
    },
    "13253": {
      "op": "MSTORE"
    },
    "13254": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "13257": {
      "op": "DUP1"
    },
    "13258": {
      "op": "DUP5"
    },
    "13259": {
      "op": "ADD"
    },
    "13260": {
      "op": "MLOAD"
    },
    "13261": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13267": {
      "op": "DUP2"
    },
    "13268": {
      "op": "AND"
    },
    "13269": {
      "op": "DUP3"
    },
    "13270": {
      "op": "DUP8"
    },
    "13271": {
      "op": "ADD"
    },
    "13272": {
      "op": "MSTORE"
    },
    "13273": {
      "op": "PUSH2",
      "value": "0x1ADB"
    },
    "13276": {
      "op": "JUMP"
    },
    "13277": {
      "op": "JUMPDEST"
    },
    "13278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13280": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13282": {
      "op": "DUP3"
    },
    "13283": {
      "op": "ADD"
    },
    "13284": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13286": {
      "op": "DUP4"
    },
    "13287": {
      "op": "MSTORE"
    },
    "13288": {
      "op": "DUP1"
    },
    "13289": {
      "op": "DUP6"
    },
    "13290": {
      "op": "MLOAD"
    },
    "13291": {
      "op": "DUP1"
    },
    "13292": {
      "op": "DUP4"
    },
    "13293": {
      "op": "MSTORE"
    },
    "13294": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13296": {
      "op": "DUP6"
    },
    "13297": {
      "op": "ADD"
    },
    "13298": {
      "op": "SWAP2"
    },
    "13299": {
      "op": "POP"
    },
    "13300": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13302": {
      "op": "DUP2"
    },
    "13303": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13305": {
      "op": "SHL"
    },
    "13306": {
      "op": "DUP7"
    },
    "13307": {
      "op": "ADD"
    },
    "13308": {
      "op": "ADD"
    },
    "13309": {
      "op": "SWAP3"
    },
    "13310": {
      "op": "POP"
    },
    "13311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13313": {
      "op": "DUP1"
    },
    "13314": {
      "op": "DUP9"
    },
    "13315": {
      "op": "ADD"
    },
    "13316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13318": {
      "op": "JUMPDEST"
    },
    "13319": {
      "op": "DUP4"
    },
    "13320": {
      "op": "DUP2"
    },
    "13321": {
      "op": "LT"
    },
    "13322": {
      "op": "ISZERO"
    },
    "13323": {
      "op": "PUSH2",
      "value": "0x3434"
    },
    "13326": {
      "op": "JUMPI"
    },
    "13327": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "13329": {
      "op": "NOT"
    },
    "13330": {
      "op": "DUP9"
    },
    "13331": {
      "op": "DUP8"
    },
    "13332": {
      "op": "SUB"
    },
    "13333": {
      "op": "ADD"
    },
    "13334": {
      "op": "DUP6"
    },
    "13335": {
      "op": "MSTORE"
    },
    "13336": {
      "op": "PUSH2",
      "value": "0x3422"
    },
    "13339": {
      "op": "DUP7"
    },
    "13340": {
      "op": "DUP4"
    },
    "13341": {
      "op": "MLOAD"
    },
    "13342": {
      "op": "PUSH2",
      "value": "0x3313"
    },
    "13345": {
      "jump": "i",
      "op": "JUMP"
    },
    "13346": {
      "op": "JUMPDEST"
    },
    "13347": {
      "op": "SWAP6"
    },
    "13348": {
      "op": "POP"
    },
    "13349": {
      "op": "SWAP4"
    },
    "13350": {
      "op": "DUP3"
    },
    "13351": {
      "op": "ADD"
    },
    "13352": {
      "op": "SWAP4"
    },
    "13353": {
      "op": "SWAP1"
    },
    "13354": {
      "op": "DUP3"
    },
    "13355": {
      "op": "ADD"
    },
    "13356": {
      "op": "SWAP1"
    },
    "13357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13359": {
      "op": "ADD"
    },
    "13360": {
      "op": "PUSH2",
      "value": "0x3406"
    },
    "13363": {
      "op": "JUMP"
    },
    "13364": {
      "op": "JUMPDEST"
    },
    "13365": {
      "op": "POP"
    },
    "13366": {
      "op": "POP"
    },
    "13367": {
      "op": "DUP6"
    },
    "13368": {
      "op": "DUP5"
    },
    "13369": {
      "op": "SUB"
    },
    "13370": {
      "op": "DUP2"
    },
    "13371": {
      "op": "DUP8"
    },
    "13372": {
      "op": "ADD"
    },
    "13373": {
      "op": "MSTORE"
    },
    "13374": {
      "op": "DUP7"
    },
    "13375": {
      "op": "MLOAD"
    },
    "13376": {
      "op": "DUP1"
    },
    "13377": {
      "op": "DUP6"
    },
    "13378": {
      "op": "MSTORE"
    },
    "13379": {
      "op": "DUP8"
    },
    "13380": {
      "op": "DUP3"
    },
    "13381": {
      "op": "ADD"
    },
    "13382": {
      "op": "SWAP5"
    },
    "13383": {
      "op": "DUP3"
    },
    "13384": {
      "op": "ADD"
    },
    "13385": {
      "op": "SWAP4"
    },
    "13386": {
      "op": "POP"
    },
    "13387": {
      "op": "SWAP2"
    },
    "13388": {
      "op": "POP"
    },
    "13389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13391": {
      "op": "JUMPDEST"
    },
    "13392": {
      "op": "DUP3"
    },
    "13393": {
      "op": "DUP2"
    },
    "13394": {
      "op": "LT"
    },
    "13395": {
      "op": "ISZERO"
    },
    "13396": {
      "op": "PUSH2",
      "value": "0x346B"
    },
    "13399": {
      "op": "JUMPI"
    },
    "13400": {
      "op": "DUP5"
    },
    "13401": {
      "op": "MLOAD"
    },
    "13402": {
      "op": "DUP5"
    },
    "13403": {
      "op": "MSTORE"
    },
    "13404": {
      "op": "SWAP4"
    },
    "13405": {
      "op": "DUP2"
    },
    "13406": {
      "op": "ADD"
    },
    "13407": {
      "op": "SWAP4"
    },
    "13408": {
      "op": "SWAP3"
    },
    "13409": {
      "op": "DUP2"
    },
    "13410": {
      "op": "ADD"
    },
    "13411": {
      "op": "SWAP3"
    },
    "13412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13414": {
      "op": "ADD"
    },
    "13415": {
      "op": "PUSH2",
      "value": "0x344F"
    },
    "13418": {
      "op": "JUMP"
    },
    "13419": {
      "op": "JUMPDEST"
    },
    "13420": {
      "op": "POP"
    },
    "13421": {
      "op": "SWAP2"
    },
    "13422": {
      "op": "SWAP8"
    },
    "13423": {
      "op": "SWAP7"
    },
    "13424": {
      "op": "POP"
    },
    "13425": {
      "op": "POP"
    },
    "13426": {
      "op": "POP"
    },
    "13427": {
      "op": "POP"
    },
    "13428": {
      "op": "POP"
    },
    "13429": {
      "op": "POP"
    },
    "13430": {
      "op": "POP"
    },
    "13431": {
      "jump": "o",
      "op": "JUMP"
    },
    "13432": {
      "op": "JUMPDEST"
    },
    "13433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13435": {
      "op": "DUP1"
    },
    "13436": {
      "op": "DUP4"
    },
    "13437": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13439": {
      "op": "DUP5"
    },
    "13440": {
      "op": "ADD"
    },
    "13441": {
      "op": "SLT"
    },
    "13442": {
      "op": "PUSH2",
      "value": "0x348A"
    },
    "13445": {
      "op": "JUMPI"
    },
    "13446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13448": {
      "op": "DUP1"
    },
    "13449": {
      "op": "REVERT"
    },
    "13450": {
      "op": "JUMPDEST"
    },
    "13451": {
      "op": "POP"
    },
    "13452": {
      "op": "DUP2"
    },
    "13453": {
      "op": "CALLDATALOAD"
    },
    "13454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13458": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13460": {
      "op": "SHL"
    },
    "13461": {
      "op": "SUB"
    },
    "13462": {
      "op": "DUP2"
    },
    "13463": {
      "op": "GT"
    },
    "13464": {
      "op": "ISZERO"
    },
    "13465": {
      "op": "PUSH2",
      "value": "0x34A1"
    },
    "13468": {
      "op": "JUMPI"
    },
    "13469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13471": {
      "op": "DUP1"
    },
    "13472": {
      "op": "REVERT"
    },
    "13473": {
      "op": "JUMPDEST"
    },
    "13474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13476": {
      "op": "DUP4"
    },
    "13477": {
      "op": "ADD"
    },
    "13478": {
      "op": "SWAP2"
    },
    "13479": {
      "op": "POP"
    },
    "13480": {
      "op": "DUP4"
    },
    "13481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13483": {
      "op": "DUP3"
    },
    "13484": {
      "op": "DUP6"
    },
    "13485": {
      "op": "ADD"
    },
    "13486": {
      "op": "ADD"
    },
    "13487": {
      "op": "GT"
    },
    "13488": {
      "op": "ISZERO"
    },
    "13489": {
      "op": "PUSH2",
      "value": "0x34B9"
    },
    "13492": {
      "op": "JUMPI"
    },
    "13493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13495": {
      "op": "DUP1"
    },
    "13496": {
      "op": "REVERT"
    },
    "13497": {
      "op": "JUMPDEST"
    },
    "13498": {
      "op": "SWAP3"
    },
    "13499": {
      "op": "POP"
    },
    "13500": {
      "op": "SWAP3"
    },
    "13501": {
      "op": "SWAP1"
    },
    "13502": {
      "op": "POP"
    },
    "13503": {
      "jump": "o",
      "op": "JUMP"
    },
    "13504": {
      "op": "JUMPDEST"
    },
    "13505": {
      "op": "DUP1"
    },
    "13506": {
      "op": "CALLDATALOAD"
    },
    "13507": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13511": {
      "op": "DUP2"
    },
    "13512": {
      "op": "AND"
    },
    "13513": {
      "op": "DUP2"
    },
    "13514": {
      "op": "EQ"
    },
    "13515": {
      "op": "PUSH2",
      "value": "0x32EC"
    },
    "13518": {
      "op": "JUMPI"
    },
    "13519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13521": {
      "op": "DUP1"
    },
    "13522": {
      "op": "REVERT"
    },
    "13523": {
      "op": "JUMPDEST"
    },
    "13524": {
      "op": "DUP1"
    },
    "13525": {
      "op": "CALLDATALOAD"
    },
    "13526": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13529": {
      "op": "DUP2"
    },
    "13530": {
      "op": "AND"
    },
    "13531": {
      "op": "DUP2"
    },
    "13532": {
      "op": "EQ"
    },
    "13533": {
      "op": "PUSH2",
      "value": "0x32EC"
    },
    "13536": {
      "op": "JUMPI"
    },
    "13537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13539": {
      "op": "DUP1"
    },
    "13540": {
      "op": "REVERT"
    },
    "13541": {
      "op": "JUMPDEST"
    },
    "13542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13544": {
      "op": "DUP1"
    },
    "13545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13547": {
      "op": "DUP1"
    },
    "13548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13550": {
      "op": "DUP1"
    },
    "13551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13555": {
      "op": "DUP9"
    },
    "13556": {
      "op": "DUP11"
    },
    "13557": {
      "op": "SUB"
    },
    "13558": {
      "op": "SLT"
    },
    "13559": {
      "op": "ISZERO"
    },
    "13560": {
      "op": "PUSH2",
      "value": "0x3500"
    },
    "13563": {
      "op": "JUMPI"
    },
    "13564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13566": {
      "op": "DUP1"
    },
    "13567": {
      "op": "REVERT"
    },
    "13568": {
      "op": "JUMPDEST"
    },
    "13569": {
      "op": "DUP8"
    },
    "13570": {
      "op": "CALLDATALOAD"
    },
    "13571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13575": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13577": {
      "op": "SHL"
    },
    "13578": {
      "op": "SUB"
    },
    "13579": {
      "op": "DUP2"
    },
    "13580": {
      "op": "GT"
    },
    "13581": {
      "op": "ISZERO"
    },
    "13582": {
      "op": "PUSH2",
      "value": "0x3516"
    },
    "13585": {
      "op": "JUMPI"
    },
    "13586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13588": {
      "op": "DUP1"
    },
    "13589": {
      "op": "REVERT"
    },
    "13590": {
      "op": "JUMPDEST"
    },
    "13591": {
      "op": "PUSH2",
      "value": "0x3522"
    },
    "13594": {
      "op": "DUP11"
    },
    "13595": {
      "op": "DUP3"
    },
    "13596": {
      "op": "DUP12"
    },
    "13597": {
      "op": "ADD"
    },
    "13598": {
      "op": "PUSH2",
      "value": "0x3478"
    },
    "13601": {
      "jump": "i",
      "op": "JUMP"
    },
    "13602": {
      "op": "JUMPDEST"
    },
    "13603": {
      "op": "SWAP1"
    },
    "13604": {
      "op": "SWAP9"
    },
    "13605": {
      "op": "POP"
    },
    "13606": {
      "op": "SWAP7"
    },
    "13607": {
      "op": "POP"
    },
    "13608": {
      "op": "POP"
    },
    "13609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13611": {
      "op": "DUP9"
    },
    "13612": {
      "op": "ADD"
    },
    "13613": {
      "op": "CALLDATALOAD"
    },
    "13614": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13616": {
      "op": "DUP2"
    },
    "13617": {
      "op": "AND"
    },
    "13618": {
      "op": "DUP2"
    },
    "13619": {
      "op": "EQ"
    },
    "13620": {
      "op": "PUSH2",
      "value": "0x353C"
    },
    "13623": {
      "op": "JUMPI"
    },
    "13624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13626": {
      "op": "DUP1"
    },
    "13627": {
      "op": "REVERT"
    },
    "13628": {
      "op": "JUMPDEST"
    },
    "13629": {
      "op": "SWAP5"
    },
    "13630": {
      "op": "POP"
    },
    "13631": {
      "op": "PUSH2",
      "value": "0x354A"
    },
    "13634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13636": {
      "op": "DUP10"
    },
    "13637": {
      "op": "ADD"
    },
    "13638": {
      "op": "PUSH2",
      "value": "0x34C0"
    },
    "13641": {
      "jump": "i",
      "op": "JUMP"
    },
    "13642": {
      "op": "JUMPDEST"
    },
    "13643": {
      "op": "SWAP4"
    },
    "13644": {
      "op": "POP"
    },
    "13645": {
      "op": "PUSH2",
      "value": "0x3558"
    },
    "13648": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13650": {
      "op": "DUP10"
    },
    "13651": {
      "op": "ADD"
    },
    "13652": {
      "op": "PUSH2",
      "value": "0x32D7"
    },
    "13655": {
      "jump": "i",
      "op": "JUMP"
    },
    "13656": {
      "op": "JUMPDEST"
    },
    "13657": {
      "op": "SWAP3"
    },
    "13658": {
      "op": "POP"
    },
    "13659": {
      "op": "PUSH2",
      "value": "0x3566"
    },
    "13662": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13664": {
      "op": "DUP10"
    },
    "13665": {
      "op": "ADD"
    },
    "13666": {
      "op": "PUSH2",
      "value": "0x32D7"
    },
    "13669": {
      "jump": "i",
      "op": "JUMP"
    },
    "13670": {
      "op": "JUMPDEST"
    },
    "13671": {
      "op": "SWAP2"
    },
    "13672": {
      "op": "POP"
    },
    "13673": {
      "op": "PUSH2",
      "value": "0x3574"
    },
    "13676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13678": {
      "op": "DUP10"
    },
    "13679": {
      "op": "ADD"
    },
    "13680": {
      "op": "PUSH2",
      "value": "0x34D3"
    },
    "13683": {
      "jump": "i",
      "op": "JUMP"
    },
    "13684": {
      "op": "JUMPDEST"
    },
    "13685": {
      "op": "SWAP1"
    },
    "13686": {
      "op": "POP"
    },
    "13687": {
      "op": "SWAP3"
    },
    "13688": {
      "op": "SWAP6"
    },
    "13689": {
      "op": "SWAP9"
    },
    "13690": {
      "op": "SWAP2"
    },
    "13691": {
      "op": "SWAP5"
    },
    "13692": {
      "op": "SWAP8"
    },
    "13693": {
      "op": "POP"
    },
    "13694": {
      "op": "SWAP3"
    },
    "13695": {
      "op": "SWAP6"
    },
    "13696": {
      "op": "POP"
    },
    "13697": {
      "jump": "o",
      "op": "JUMP"
    },
    "13698": {
      "op": "JUMPDEST"
    },
    "13699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13701": {
      "op": "DUP1"
    },
    "13702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13704": {
      "op": "DUP4"
    },
    "13705": {
      "op": "DUP6"
    },
    "13706": {
      "op": "SUB"
    },
    "13707": {
      "op": "SLT"
    },
    "13708": {
      "op": "ISZERO"
    },
    "13709": {
      "op": "PUSH2",
      "value": "0x3595"
    },
    "13712": {
      "op": "JUMPI"
    },
    "13713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13715": {
      "op": "DUP1"
    },
    "13716": {
      "op": "REVERT"
    },
    "13717": {
      "op": "JUMPDEST"
    },
    "13718": {
      "op": "POP"
    },
    "13719": {
      "op": "POP"
    },
    "13720": {
      "op": "DUP1"
    },
    "13721": {
      "op": "CALLDATALOAD"
    },
    "13722": {
      "op": "SWAP3"
    },
    "13723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13725": {
      "op": "SWAP1"
    },
    "13726": {
      "op": "SWAP2"
    },
    "13727": {
      "op": "ADD"
    },
    "13728": {
      "op": "CALLDATALOAD"
    },
    "13729": {
      "op": "SWAP2"
    },
    "13730": {
      "op": "POP"
    },
    "13731": {
      "jump": "o",
      "op": "JUMP"
    },
    "13732": {
      "op": "JUMPDEST"
    },
    "13733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13739": {
      "op": "SHL"
    },
    "13740": {
      "op": "SUB"
    },
    "13741": {
      "op": "DUP2"
    },
    "13742": {
      "op": "AND"
    },
    "13743": {
      "op": "DUP2"
    },
    "13744": {
      "op": "EQ"
    },
    "13745": {
      "op": "PUSH2",
      "value": "0x2922"
    },
    "13748": {
      "op": "JUMPI"
    },
    "13749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13751": {
      "op": "DUP1"
    },
    "13752": {
      "op": "REVERT"
    },
    "13753": {
      "op": "JUMPDEST"
    },
    "13754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13758": {
      "op": "DUP3"
    },
    "13759": {
      "op": "DUP5"
    },
    "13760": {
      "op": "SUB"
    },
    "13761": {
      "op": "SLT"
    },
    "13762": {
      "op": "ISZERO"
    },
    "13763": {
      "op": "PUSH2",
      "value": "0x35CB"
    },
    "13766": {
      "op": "JUMPI"
    },
    "13767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13769": {
      "op": "DUP1"
    },
    "13770": {
      "op": "REVERT"
    },
    "13771": {
      "op": "JUMPDEST"
    },
    "13772": {
      "op": "DUP2"
    },
    "13773": {
      "op": "CALLDATALOAD"
    },
    "13774": {
      "op": "PUSH2",
      "value": "0x330C"
    },
    "13777": {
      "op": "DUP2"
    },
    "13778": {
      "op": "PUSH2",
      "value": "0x35A4"
    },
    "13781": {
      "jump": "i",
      "op": "JUMP"
    },
    "13782": {
      "op": "JUMPDEST"
    },
    "13783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13785": {
      "op": "DUP3"
    },
    "13786": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13788": {
      "op": "DUP4"
    },
    "13789": {
      "op": "ADD"
    },
    "13790": {
      "op": "SLT"
    },
    "13791": {
      "op": "PUSH2",
      "value": "0x35E7"
    },
    "13794": {
      "op": "JUMPI"
    },
    "13795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13797": {
      "op": "DUP1"
    },
    "13798": {
      "op": "REVERT"
    },
    "13799": {
      "op": "JUMPDEST"
    },
    "13800": {
      "op": "DUP2"
    },
    "13801": {
      "op": "CALLDATALOAD"
    },
    "13802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13806": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13808": {
      "op": "SHL"
    },
    "13809": {
      "op": "SUB"
    },
    "13810": {
      "op": "DUP2"
    },
    "13811": {
      "op": "GT"
    },
    "13812": {
      "op": "ISZERO"
    },
    "13813": {
      "op": "PUSH2",
      "value": "0x3600"
    },
    "13816": {
      "op": "JUMPI"
    },
    "13817": {
      "op": "PUSH2",
      "value": "0x3600"
    },
    "13820": {
      "op": "PUSH2",
      "value": "0x314E"
    },
    "13823": {
      "jump": "i",
      "op": "JUMP"
    },
    "13824": {
      "op": "JUMPDEST"
    },
    "13825": {
      "op": "PUSH2",
      "value": "0x3613"
    },
    "13828": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13830": {
      "op": "DUP3"
    },
    "13831": {
      "op": "ADD"
    },
    "13832": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13834": {
      "op": "NOT"
    },
    "13835": {
      "op": "AND"
    },
    "13836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13838": {
      "op": "ADD"
    },
    "13839": {
      "op": "PUSH2",
      "value": "0x3164"
    },
    "13842": {
      "jump": "i",
      "op": "JUMP"
    },
    "13843": {
      "op": "JUMPDEST"
    },
    "13844": {
      "op": "DUP2"
    },
    "13845": {
      "op": "DUP2"
    },
    "13846": {
      "op": "MSTORE"
    },
    "13847": {
      "op": "DUP5"
    },
    "13848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13850": {
      "op": "DUP4"
    },
    "13851": {
      "op": "DUP7"
    },
    "13852": {
      "op": "ADD"
    },
    "13853": {
      "op": "ADD"
    },
    "13854": {
      "op": "GT"
    },
    "13855": {
      "op": "ISZERO"
    },
    "13856": {
      "op": "PUSH2",
      "value": "0x3628"
    },
    "13859": {
      "op": "JUMPI"
    },
    "13860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13862": {
      "op": "DUP1"
    },
    "13863": {
      "op": "REVERT"
    },
    "13864": {
      "op": "JUMPDEST"
    },
    "13865": {
      "op": "DUP2"
    },
    "13866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13868": {
      "op": "DUP6"
    },
    "13869": {
      "op": "ADD"
    },
    "13870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13872": {
      "op": "DUP4"
    },
    "13873": {
      "op": "ADD"
    },
    "13874": {
      "op": "CALLDATACOPY"
    },
    "13875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13877": {
      "op": "SWAP2"
    },
    "13878": {
      "op": "DUP2"
    },
    "13879": {
      "op": "ADD"
    },
    "13880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13882": {
      "op": "ADD"
    },
    "13883": {
      "op": "SWAP2"
    },
    "13884": {
      "op": "SWAP1"
    },
    "13885": {
      "op": "SWAP2"
    },
    "13886": {
      "op": "MSTORE"
    },
    "13887": {
      "op": "SWAP4"
    },
    "13888": {
      "op": "SWAP3"
    },
    "13889": {
      "op": "POP"
    },
    "13890": {
      "op": "POP"
    },
    "13891": {
      "op": "POP"
    },
    "13892": {
      "jump": "o",
      "op": "JUMP"
    },
    "13893": {
      "op": "JUMPDEST"
    },
    "13894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13896": {
      "op": "DUP1"
    },
    "13897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13899": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13901": {
      "op": "DUP5"
    },
    "13902": {
      "op": "DUP7"
    },
    "13903": {
      "op": "SUB"
    },
    "13904": {
      "op": "SLT"
    },
    "13905": {
      "op": "ISZERO"
    },
    "13906": {
      "op": "PUSH2",
      "value": "0x365A"
    },
    "13909": {
      "op": "JUMPI"
    },
    "13910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13912": {
      "op": "DUP1"
    },
    "13913": {
      "op": "REVERT"
    },
    "13914": {
      "op": "JUMPDEST"
    },
    "13915": {
      "op": "DUP4"
    },
    "13916": {
      "op": "CALLDATALOAD"
    },
    "13917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13921": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13923": {
      "op": "SHL"
    },
    "13924": {
      "op": "SUB"
    },
    "13925": {
      "op": "DUP2"
    },
    "13926": {
      "op": "GT"
    },
    "13927": {
      "op": "ISZERO"
    },
    "13928": {
      "op": "PUSH2",
      "value": "0x3670"
    },
    "13931": {
      "op": "JUMPI"
    },
    "13932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13934": {
      "op": "DUP1"
    },
    "13935": {
      "op": "REVERT"
    },
    "13936": {
      "op": "JUMPDEST"
    },
    "13937": {
      "op": "PUSH2",
      "value": "0x367C"
    },
    "13940": {
      "op": "DUP7"
    },
    "13941": {
      "op": "DUP3"
    },
    "13942": {
      "op": "DUP8"
    },
    "13943": {
      "op": "ADD"
    },
    "13944": {
      "op": "PUSH2",
      "value": "0x35D6"
    },
    "13947": {
      "jump": "i",
      "op": "JUMP"
    },
    "13948": {
      "op": "JUMPDEST"
    },
    "13949": {
      "op": "SWAP4"
    },
    "13950": {
      "op": "POP"
    },
    "13951": {
      "op": "POP"
    },
    "13952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13954": {
      "op": "DUP5"
    },
    "13955": {
      "op": "ADD"
    },
    "13956": {
      "op": "CALLDATALOAD"
    },
    "13957": {
      "op": "SWAP2"
    },
    "13958": {
      "op": "POP"
    },
    "13959": {
      "op": "PUSH2",
      "value": "0x3692"
    },
    "13962": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13964": {
      "op": "DUP6"
    },
    "13965": {
      "op": "ADD"
    },
    "13966": {
      "op": "PUSH2",
      "value": "0x32D7"
    },
    "13969": {
      "jump": "i",
      "op": "JUMP"
    },
    "13970": {
      "op": "JUMPDEST"
    },
    "13971": {
      "op": "SWAP1"
    },
    "13972": {
      "op": "POP"
    },
    "13973": {
      "op": "SWAP3"
    },
    "13974": {
      "op": "POP"
    },
    "13975": {
      "op": "SWAP3"
    },
    "13976": {
      "op": "POP"
    },
    "13977": {
      "op": "SWAP3"
    },
    "13978": {
      "jump": "o",
      "op": "JUMP"
    },
    "13979": {
      "op": "JUMPDEST"
    },
    "13980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13982": {
      "op": "DUP1"
    },
    "13983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13985": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13987": {
      "op": "DUP5"
    },
    "13988": {
      "op": "DUP7"
    },
    "13989": {
      "op": "SUB"
    },
    "13990": {
      "op": "SLT"
    },
    "13991": {
      "op": "ISZERO"
    },
    "13992": {
      "op": "PUSH2",
      "value": "0x36B0"
    },
    "13995": {
      "op": "JUMPI"
    },
    "13996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13998": {
      "op": "DUP1"
    },
    "13999": {
      "op": "REVERT"
    },
    "14000": {
      "op": "JUMPDEST"
    },
    "14001": {
      "op": "POP"
    },
    "14002": {
      "op": "POP"
    },
    "14003": {
      "op": "DUP2"
    },
    "14004": {
      "op": "CALLDATALOAD"
    },
    "14005": {
      "op": "SWAP4"
    },
    "14006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14008": {
      "op": "DUP4"
    },
    "14009": {
      "op": "ADD"
    },
    "14010": {
      "op": "CALLDATALOAD"
    },
    "14011": {
      "op": "SWAP4"
    },
    "14012": {
      "op": "POP"
    },
    "14013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14015": {
      "op": "SWAP1"
    },
    "14016": {
      "op": "SWAP3"
    },
    "14017": {
      "op": "ADD"
    },
    "14018": {
      "op": "CALLDATALOAD"
    },
    "14019": {
      "op": "SWAP2"
    },
    "14020": {
      "op": "SWAP1"
    },
    "14021": {
      "op": "POP"
    },
    "14022": {
      "jump": "o",
      "op": "JUMP"
    },
    "14023": {
      "op": "JUMPDEST"
    },
    "14024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14026": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "14029": {
      "op": "DUP1"
    },
    "14030": {
      "op": "DUP4"
    },
    "14031": {
      "op": "MSTORE"
    },
    "14032": {
      "op": "PUSH2",
      "value": "0x36DB"
    },
    "14035": {
      "op": "DUP2"
    },
    "14036": {
      "op": "DUP5"
    },
    "14037": {
      "op": "ADD"
    },
    "14038": {
      "op": "DUP15"
    },
    "14039": {
      "op": "PUSH2",
      "value": "0x30DE"
    },
    "14042": {
      "jump": "i",
      "op": "JUMP"
    },
    "14043": {
      "op": "JUMPDEST"
    },
    "14044": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14050": {
      "op": "SWAP13"
    },
    "14051": {
      "op": "DUP14"
    },
    "14052": {
      "op": "AND"
    },
    "14053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14055": {
      "op": "DUP6"
    },
    "14056": {
      "op": "ADD"
    },
    "14057": {
      "op": "MSTORE"
    },
    "14058": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14060": {
      "op": "DUP5"
    },
    "14061": {
      "op": "ADD"
    },
    "14062": {
      "op": "SWAP12"
    },
    "14063": {
      "op": "SWAP1"
    },
    "14064": {
      "op": "SWAP12"
    },
    "14065": {
      "op": "MSTORE"
    },
    "14066": {
      "op": "POP"
    },
    "14067": {
      "op": "POP"
    },
    "14068": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14070": {
      "op": "DUP2"
    },
    "14071": {
      "op": "ADD"
    },
    "14072": {
      "op": "SWAP8"
    },
    "14073": {
      "op": "SWAP1"
    },
    "14074": {
      "op": "SWAP8"
    },
    "14075": {
      "op": "MSTORE"
    },
    "14076": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14078": {
      "op": "SWAP6"
    },
    "14079": {
      "op": "SWAP1"
    },
    "14080": {
      "op": "SWAP6"
    },
    "14081": {
      "op": "AND"
    },
    "14082": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14084": {
      "op": "DUP8"
    },
    "14085": {
      "op": "ADD"
    },
    "14086": {
      "op": "MSTORE"
    },
    "14087": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14091": {
      "op": "SWAP4"
    },
    "14092": {
      "op": "SWAP1"
    },
    "14093": {
      "op": "SWAP4"
    },
    "14094": {
      "op": "AND"
    },
    "14095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14097": {
      "op": "DUP7"
    },
    "14098": {
      "op": "ADD"
    },
    "14099": {
      "op": "MSTORE"
    },
    "14100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14104": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "14106": {
      "op": "SHL"
    },
    "14107": {
      "op": "SUB"
    },
    "14108": {
      "op": "SWAP2"
    },
    "14109": {
      "op": "SWAP1"
    },
    "14110": {
      "op": "SWAP2"
    },
    "14111": {
      "op": "AND"
    },
    "14112": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14114": {
      "op": "DUP6"
    },
    "14115": {
      "op": "ADD"
    },
    "14116": {
      "op": "MSTORE"
    },
    "14117": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14120": {
      "op": "SWAP1"
    },
    "14121": {
      "op": "DUP2"
    },
    "14122": {
      "op": "AND"
    },
    "14123": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14125": {
      "op": "DUP6"
    },
    "14126": {
      "op": "ADD"
    },
    "14127": {
      "op": "MSTORE"
    },
    "14128": {
      "op": "AND"
    },
    "14129": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "14132": {
      "op": "DUP4"
    },
    "14133": {
      "op": "ADD"
    },
    "14134": {
      "op": "MSTORE"
    },
    "14135": {
      "op": "SWAP1"
    },
    "14136": {
      "op": "SWAP3"
    },
    "14137": {
      "op": "AND"
    },
    "14138": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "14141": {
      "op": "SWAP1"
    },
    "14142": {
      "op": "SWAP3"
    },
    "14143": {
      "op": "ADD"
    },
    "14144": {
      "op": "SWAP2"
    },
    "14145": {
      "op": "SWAP1"
    },
    "14146": {
      "op": "SWAP2"
    },
    "14147": {
      "op": "MSTORE"
    },
    "14148": {
      "op": "SWAP2"
    },
    "14149": {
      "op": "SWAP1"
    },
    "14150": {
      "op": "POP"
    },
    "14151": {
      "jump": "o",
      "op": "JUMP"
    },
    "14152": {
      "op": "JUMPDEST"
    },
    "14153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14155": {
      "op": "DUP2"
    },
    "14156": {
      "op": "MSTORE"
    },
    "14157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14159": {
      "op": "PUSH2",
      "value": "0x330C"
    },
    "14162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14164": {
      "op": "DUP4"
    },
    "14165": {
      "op": "ADD"
    },
    "14166": {
      "op": "DUP5"
    },
    "14167": {
      "op": "PUSH2",
      "value": "0x3313"
    },
    "14170": {
      "jump": "i",
      "op": "JUMP"
    },
    "14171": {
      "op": "JUMPDEST"
    },
    "14172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14176": {
      "op": "DUP1"
    },
    "14177": {
      "op": "DUP4"
    },
    "14178": {
      "op": "ADD"
    },
    "14179": {
      "op": "DUP2"
    },
    "14180": {
      "op": "DUP5"
    },
    "14181": {
      "op": "MSTORE"
    },
    "14182": {
      "op": "DUP1"
    },
    "14183": {
      "op": "DUP6"
    },
    "14184": {
      "op": "MLOAD"
    },
    "14185": {
      "op": "DUP1"
    },
    "14186": {
      "op": "DUP4"
    },
    "14187": {
      "op": "MSTORE"
    },
    "14188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14190": {
      "op": "DUP7"
    },
    "14191": {
      "op": "ADD"
    },
    "14192": {
      "op": "SWAP2"
    },
    "14193": {
      "op": "POP"
    },
    "14194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14196": {
      "op": "DUP2"
    },
    "14197": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14199": {
      "op": "SHL"
    },
    "14200": {
      "op": "DUP8"
    },
    "14201": {
      "op": "ADD"
    },
    "14202": {
      "op": "ADD"
    },
    "14203": {
      "op": "SWAP3"
    },
    "14204": {
      "op": "POP"
    },
    "14205": {
      "op": "DUP4"
    },
    "14206": {
      "op": "DUP8"
    },
    "14207": {
      "op": "ADD"
    },
    "14208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14210": {
      "op": "JUMPDEST"
    },
    "14211": {
      "op": "DUP3"
    },
    "14212": {
      "op": "DUP2"
    },
    "14213": {
      "op": "LT"
    },
    "14214": {
      "op": "ISZERO"
    },
    "14215": {
      "op": "PUSH2",
      "value": "0x37B0"
    },
    "14218": {
      "op": "JUMPI"
    },
    "14219": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "14221": {
      "op": "NOT"
    },
    "14222": {
      "op": "DUP9"
    },
    "14223": {
      "op": "DUP7"
    },
    "14224": {
      "op": "SUB"
    },
    "14225": {
      "op": "ADD"
    },
    "14226": {
      "op": "DUP5"
    },
    "14227": {
      "op": "MSTORE"
    },
    "14228": {
      "op": "PUSH2",
      "value": "0x379E"
    },
    "14231": {
      "op": "DUP6"
    },
    "14232": {
      "op": "DUP4"
    },
    "14233": {
      "op": "MLOAD"
    },
    "14234": {
      "op": "PUSH2",
      "value": "0x30DE"
    },
    "14237": {
      "jump": "i",
      "op": "JUMP"
    },
    "14238": {
      "op": "JUMPDEST"
    },
    "14239": {
      "op": "SWAP5"
    },
    "14240": {
      "op": "POP"
    },
    "14241": {
      "op": "SWAP3"
    },
    "14242": {
      "op": "DUP6"
    },
    "14243": {
      "op": "ADD"
    },
    "14244": {
      "op": "SWAP3"
    },
    "14245": {
      "op": "SWAP1"
    },
    "14246": {
      "op": "DUP6"
    },
    "14247": {
      "op": "ADD"
    },
    "14248": {
      "op": "SWAP1"
    },
    "14249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14251": {
      "op": "ADD"
    },
    "14252": {
      "op": "PUSH2",
      "value": "0x3782"
    },
    "14255": {
      "op": "JUMP"
    },
    "14256": {
      "op": "JUMPDEST"
    },
    "14257": {
      "op": "POP"
    },
    "14258": {
      "op": "SWAP3"
    },
    "14259": {
      "op": "SWAP8"
    },
    "14260": {
      "op": "SWAP7"
    },
    "14261": {
      "op": "POP"
    },
    "14262": {
      "op": "POP"
    },
    "14263": {
      "op": "POP"
    },
    "14264": {
      "op": "POP"
    },
    "14265": {
      "op": "POP"
    },
    "14266": {
      "op": "POP"
    },
    "14267": {
      "op": "POP"
    },
    "14268": {
      "jump": "o",
      "op": "JUMP"
    },
    "14269": {
      "op": "JUMPDEST"
    },
    "14270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14272": {
      "op": "DUP1"
    },
    "14273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14275": {
      "op": "DUP1"
    },
    "14276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14278": {
      "op": "DUP1"
    },
    "14279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14281": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14283": {
      "op": "DUP9"
    },
    "14284": {
      "op": "DUP11"
    },
    "14285": {
      "op": "SUB"
    },
    "14286": {
      "op": "SLT"
    },
    "14287": {
      "op": "ISZERO"
    },
    "14288": {
      "op": "PUSH2",
      "value": "0x37D8"
    },
    "14291": {
      "op": "JUMPI"
    },
    "14292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14294": {
      "op": "DUP1"
    },
    "14295": {
      "op": "REVERT"
    },
    "14296": {
      "op": "JUMPDEST"
    },
    "14297": {
      "op": "DUP8"
    },
    "14298": {
      "op": "CALLDATALOAD"
    },
    "14299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14305": {
      "op": "SHL"
    },
    "14306": {
      "op": "SUB"
    },
    "14307": {
      "op": "DUP2"
    },
    "14308": {
      "op": "GT"
    },
    "14309": {
      "op": "ISZERO"
    },
    "14310": {
      "op": "PUSH2",
      "value": "0x37EE"
    },
    "14313": {
      "op": "JUMPI"
    },
    "14314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14316": {
      "op": "DUP1"
    },
    "14317": {
      "op": "REVERT"
    },
    "14318": {
      "op": "JUMPDEST"
    },
    "14319": {
      "op": "PUSH2",
      "value": "0x37FA"
    },
    "14322": {
      "op": "DUP11"
    },
    "14323": {
      "op": "DUP3"
    },
    "14324": {
      "op": "DUP12"
    },
    "14325": {
      "op": "ADD"
    },
    "14326": {
      "op": "PUSH2",
      "value": "0x3478"
    },
    "14329": {
      "jump": "i",
      "op": "JUMP"
    },
    "14330": {
      "op": "JUMPDEST"
    },
    "14331": {
      "op": "SWAP1"
    },
    "14332": {
      "op": "SWAP9"
    },
    "14333": {
      "op": "POP"
    },
    "14334": {
      "op": "SWAP7"
    },
    "14335": {
      "op": "POP"
    },
    "14336": {
      "op": "PUSH2",
      "value": "0x353C"
    },
    "14339": {
      "op": "SWAP1"
    },
    "14340": {
      "op": "POP"
    },
    "14341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14343": {
      "op": "DUP10"
    },
    "14344": {
      "op": "ADD"
    },
    "14345": {
      "op": "PUSH2",
      "value": "0x34D3"
    },
    "14348": {
      "jump": "i",
      "op": "JUMP"
    },
    "14349": {
      "op": "JUMPDEST"
    },
    "14350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14352": {
      "op": "DUP1"
    },
    "14353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14355": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14357": {
      "op": "DUP5"
    },
    "14358": {
      "op": "DUP7"
    },
    "14359": {
      "op": "SUB"
    },
    "14360": {
      "op": "SLT"
    },
    "14361": {
      "op": "ISZERO"
    },
    "14362": {
      "op": "PUSH2",
      "value": "0x3822"
    },
    "14365": {
      "op": "JUMPI"
    },
    "14366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14368": {
      "op": "DUP1"
    },
    "14369": {
      "op": "REVERT"
    },
    "14370": {
      "op": "JUMPDEST"
    },
    "14371": {
      "op": "DUP4"
    },
    "14372": {
      "op": "CALLDATALOAD"
    },
    "14373": {
      "op": "SWAP3"
    },
    "14374": {
      "op": "POP"
    },
    "14375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14377": {
      "op": "DUP5"
    },
    "14378": {
      "op": "ADD"
    },
    "14379": {
      "op": "CALLDATALOAD"
    },
    "14380": {
      "op": "SWAP2"
    },
    "14381": {
      "op": "POP"
    },
    "14382": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14384": {
      "op": "DUP5"
    },
    "14385": {
      "op": "ADD"
    },
    "14386": {
      "op": "CALLDATALOAD"
    },
    "14387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14391": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14393": {
      "op": "SHL"
    },
    "14394": {
      "op": "SUB"
    },
    "14395": {
      "op": "DUP2"
    },
    "14396": {
      "op": "GT"
    },
    "14397": {
      "op": "ISZERO"
    },
    "14398": {
      "op": "PUSH2",
      "value": "0x3846"
    },
    "14401": {
      "op": "JUMPI"
    },
    "14402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14404": {
      "op": "DUP1"
    },
    "14405": {
      "op": "REVERT"
    },
    "14406": {
      "op": "JUMPDEST"
    },
    "14407": {
      "op": "PUSH2",
      "value": "0x3852"
    },
    "14410": {
      "op": "DUP7"
    },
    "14411": {
      "op": "DUP3"
    },
    "14412": {
      "op": "DUP8"
    },
    "14413": {
      "op": "ADD"
    },
    "14414": {
      "op": "PUSH2",
      "value": "0x3194"
    },
    "14417": {
      "jump": "i",
      "op": "JUMP"
    },
    "14418": {
      "op": "JUMPDEST"
    },
    "14419": {
      "op": "SWAP2"
    },
    "14420": {
      "op": "POP"
    },
    "14421": {
      "op": "POP"
    },
    "14422": {
      "op": "SWAP3"
    },
    "14423": {
      "op": "POP"
    },
    "14424": {
      "op": "SWAP3"
    },
    "14425": {
      "op": "POP"
    },
    "14426": {
      "op": "SWAP3"
    },
    "14427": {
      "jump": "o",
      "op": "JUMP"
    },
    "14428": {
      "op": "JUMPDEST"
    },
    "14429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14433": {
      "op": "DUP3"
    },
    "14434": {
      "op": "DUP5"
    },
    "14435": {
      "op": "SUB"
    },
    "14436": {
      "op": "SLT"
    },
    "14437": {
      "op": "ISZERO"
    },
    "14438": {
      "op": "PUSH2",
      "value": "0x386E"
    },
    "14441": {
      "op": "JUMPI"
    },
    "14442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14444": {
      "op": "DUP1"
    },
    "14445": {
      "op": "REVERT"
    },
    "14446": {
      "op": "JUMPDEST"
    },
    "14447": {
      "op": "DUP2"
    },
    "14448": {
      "op": "CALLDATALOAD"
    },
    "14449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14453": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14455": {
      "op": "SHL"
    },
    "14456": {
      "op": "SUB"
    },
    "14457": {
      "op": "DUP2"
    },
    "14458": {
      "op": "GT"
    },
    "14459": {
      "op": "ISZERO"
    },
    "14460": {
      "op": "PUSH2",
      "value": "0x3884"
    },
    "14463": {
      "op": "JUMPI"
    },
    "14464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14466": {
      "op": "DUP1"
    },
    "14467": {
      "op": "REVERT"
    },
    "14468": {
      "op": "JUMPDEST"
    },
    "14469": {
      "op": "PUSH2",
      "value": "0x3890"
    },
    "14472": {
      "op": "DUP5"
    },
    "14473": {
      "op": "DUP3"
    },
    "14474": {
      "op": "DUP6"
    },
    "14475": {
      "op": "ADD"
    },
    "14476": {
      "op": "PUSH2",
      "value": "0x35D6"
    },
    "14479": {
      "jump": "i",
      "op": "JUMP"
    },
    "14480": {
      "op": "JUMPDEST"
    },
    "14481": {
      "op": "SWAP5"
    },
    "14482": {
      "op": "SWAP4"
    },
    "14483": {
      "op": "POP"
    },
    "14484": {
      "op": "POP"
    },
    "14485": {
      "op": "POP"
    },
    "14486": {
      "op": "POP"
    },
    "14487": {
      "jump": "o",
      "op": "JUMP"
    },
    "14488": {
      "op": "JUMPDEST"
    },
    "14489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14491": {
      "op": "DUP1"
    },
    "14492": {
      "op": "DUP3"
    },
    "14493": {
      "op": "MSTORE"
    },
    "14494": {
      "op": "DUP3"
    },
    "14495": {
      "op": "MLOAD"
    },
    "14496": {
      "op": "DUP3"
    },
    "14497": {
      "op": "DUP3"
    },
    "14498": {
      "op": "ADD"
    },
    "14499": {
      "op": "DUP2"
    },
    "14500": {
      "op": "SWAP1"
    },
    "14501": {
      "op": "MSTORE"
    },
    "14502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14504": {
      "op": "SWAP2"
    },
    "14505": {
      "op": "SWAP1"
    },
    "14506": {
      "op": "DUP5"
    },
    "14507": {
      "op": "DUP3"
    },
    "14508": {
      "op": "ADD"
    },
    "14509": {
      "op": "SWAP1"
    },
    "14510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14512": {
      "op": "DUP6"
    },
    "14513": {
      "op": "ADD"
    },
    "14514": {
      "op": "SWAP1"
    },
    "14515": {
      "op": "DUP5"
    },
    "14516": {
      "op": "JUMPDEST"
    },
    "14517": {
      "op": "DUP2"
    },
    "14518": {
      "op": "DUP2"
    },
    "14519": {
      "op": "LT"
    },
    "14520": {
      "op": "ISZERO"
    },
    "14521": {
      "op": "PUSH2",
      "value": "0x38D4"
    },
    "14524": {
      "op": "JUMPI"
    },
    "14525": {
      "op": "DUP4"
    },
    "14526": {
      "op": "MLOAD"
    },
    "14527": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14530": {
      "op": "AND"
    },
    "14531": {
      "op": "DUP4"
    },
    "14532": {
      "op": "MSTORE"
    },
    "14533": {
      "op": "SWAP3"
    },
    "14534": {
      "op": "DUP5"
    },
    "14535": {
      "op": "ADD"
    },
    "14536": {
      "op": "SWAP3"
    },
    "14537": {
      "op": "SWAP2"
    },
    "14538": {
      "op": "DUP5"
    },
    "14539": {
      "op": "ADD"
    },
    "14540": {
      "op": "SWAP2"
    },
    "14541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14543": {
      "op": "ADD"
    },
    "14544": {
      "op": "PUSH2",
      "value": "0x38B4"
    },
    "14547": {
      "op": "JUMP"
    },
    "14548": {
      "op": "JUMPDEST"
    },
    "14549": {
      "op": "POP"
    },
    "14550": {
      "op": "SWAP1"
    },
    "14551": {
      "op": "SWAP7"
    },
    "14552": {
      "op": "SWAP6"
    },
    "14553": {
      "op": "POP"
    },
    "14554": {
      "op": "POP"
    },
    "14555": {
      "op": "POP"
    },
    "14556": {
      "op": "POP"
    },
    "14557": {
      "op": "POP"
    },
    "14558": {
      "op": "POP"
    },
    "14559": {
      "jump": "o",
      "op": "JUMP"
    },
    "14560": {
      "op": "JUMPDEST"
    },
    "14561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14563": {
      "op": "DUP2"
    },
    "14564": {
      "op": "DUP2"
    },
    "14565": {
      "op": "SHR"
    },
    "14566": {
      "op": "SWAP1"
    },
    "14567": {
      "op": "DUP3"
    },
    "14568": {
      "op": "AND"
    },
    "14569": {
      "op": "DUP1"
    },
    "14570": {
      "op": "PUSH2",
      "value": "0x38F4"
    },
    "14573": {
      "op": "JUMPI"
    },
    "14574": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14576": {
      "op": "DUP3"
    },
    "14577": {
      "op": "AND"
    },
    "14578": {
      "op": "SWAP2"
    },
    "14579": {
      "op": "POP"
    },
    "14580": {
      "op": "JUMPDEST"
    },
    "14581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14583": {
      "op": "DUP3"
    },
    "14584": {
      "op": "LT"
    },
    "14585": {
      "op": "DUP2"
    },
    "14586": {
      "op": "SUB"
    },
    "14587": {
      "op": "PUSH2",
      "value": "0x3914"
    },
    "14590": {
      "op": "JUMPI"
    },
    "14591": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14596": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14598": {
      "op": "SHL"
    },
    "14599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14601": {
      "op": "MSTORE"
    },
    "14602": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14604": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14606": {
      "op": "MSTORE"
    },
    "14607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14611": {
      "op": "REVERT"
    },
    "14612": {
      "op": "JUMPDEST"
    },
    "14613": {
      "op": "POP"
    },
    "14614": {
      "op": "SWAP2"
    },
    "14615": {
      "op": "SWAP1"
    },
    "14616": {
      "op": "POP"
    },
    "14617": {
      "jump": "o",
      "op": "JUMP"
    },
    "14618": {
      "op": "JUMPDEST"
    },
    "14619": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14624": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14626": {
      "op": "SHL"
    },
    "14627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14629": {
      "op": "MSTORE"
    },
    "14630": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14632": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14634": {
      "op": "MSTORE"
    },
    "14635": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14639": {
      "op": "REVERT"
    },
    "14640": {
      "op": "JUMPDEST"
    },
    "14641": {
      "op": "DUP2"
    },
    "14642": {
      "op": "MLOAD"
    },
    "14643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14645": {
      "op": "SWAP1"
    },
    "14646": {
      "op": "DUP3"
    },
    "14647": {
      "op": "SWAP1"
    },
    "14648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14650": {
      "op": "DUP1"
    },
    "14651": {
      "op": "DUP7"
    },
    "14652": {
      "op": "ADD"
    },
    "14653": {
      "op": "DUP5"
    },
    "14654": {
      "op": "JUMPDEST"
    },
    "14655": {
      "op": "DUP4"
    },
    "14656": {
      "op": "DUP2"
    },
    "14657": {
      "op": "LT"
    },
    "14658": {
      "op": "ISZERO"
    },
    "14659": {
      "op": "PUSH2",
      "value": "0x395A"
    },
    "14662": {
      "op": "JUMPI"
    },
    "14663": {
      "op": "DUP2"
    },
    "14664": {
      "op": "MLOAD"
    },
    "14665": {
      "op": "DUP6"
    },
    "14666": {
      "op": "MSTORE"
    },
    "14667": {
      "op": "SWAP4"
    },
    "14668": {
      "op": "DUP3"
    },
    "14669": {
      "op": "ADD"
    },
    "14670": {
      "op": "SWAP4"
    },
    "14671": {
      "op": "SWAP1"
    },
    "14672": {
      "op": "DUP3"
    },
    "14673": {
      "op": "ADD"
    },
    "14674": {
      "op": "SWAP1"
    },
    "14675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14677": {
      "op": "ADD"
    },
    "14678": {
      "op": "PUSH2",
      "value": "0x393E"
    },
    "14681": {
      "op": "JUMP"
    },
    "14682": {
      "op": "JUMPDEST"
    },
    "14683": {
      "op": "POP"
    },
    "14684": {
      "op": "SWAP3"
    },
    "14685": {
      "op": "SWAP7"
    },
    "14686": {
      "op": "SWAP6"
    },
    "14687": {
      "op": "POP"
    },
    "14688": {
      "op": "POP"
    },
    "14689": {
      "op": "POP"
    },
    "14690": {
      "op": "POP"
    },
    "14691": {
      "op": "POP"
    },
    "14692": {
      "op": "POP"
    },
    "14693": {
      "jump": "o",
      "op": "JUMP"
    },
    "14694": {
      "op": "JUMPDEST"
    },
    "14695": {
      "op": "DUP5"
    },
    "14696": {
      "op": "DUP2"
    },
    "14697": {
      "op": "MSTORE"
    },
    "14698": {
      "op": "DUP4"
    },
    "14699": {
      "op": "ISZERO"
    },
    "14700": {
      "op": "ISZERO"
    },
    "14701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14703": {
      "op": "DUP3"
    },
    "14704": {
      "op": "ADD"
    },
    "14705": {
      "op": "MSTORE"
    },
    "14706": {
      "op": "DUP3"
    },
    "14707": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14709": {
      "op": "DUP3"
    },
    "14710": {
      "op": "ADD"
    },
    "14711": {
      "op": "MSTORE"
    },
    "14712": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14714": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14716": {
      "op": "DUP3"
    },
    "14717": {
      "op": "ADD"
    },
    "14718": {
      "op": "MSTORE"
    },
    "14719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14721": {
      "op": "PUSH2",
      "value": "0x398D"
    },
    "14724": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14726": {
      "op": "DUP4"
    },
    "14727": {
      "op": "ADD"
    },
    "14728": {
      "op": "DUP5"
    },
    "14729": {
      "op": "PUSH2",
      "value": "0x30DE"
    },
    "14732": {
      "jump": "i",
      "op": "JUMP"
    },
    "14733": {
      "op": "JUMPDEST"
    },
    "14734": {
      "op": "SWAP7"
    },
    "14735": {
      "op": "SWAP6"
    },
    "14736": {
      "op": "POP"
    },
    "14737": {
      "op": "POP"
    },
    "14738": {
      "op": "POP"
    },
    "14739": {
      "op": "POP"
    },
    "14740": {
      "op": "POP"
    },
    "14741": {
      "op": "POP"
    },
    "14742": {
      "jump": "o",
      "op": "JUMP"
    },
    "14743": {
      "op": "JUMPDEST"
    },
    "14744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14746": {
      "op": "DUP1"
    },
    "14747": {
      "op": "DUP3"
    },
    "14748": {
      "op": "MSTORE"
    },
    "14749": {
      "op": "DUP2"
    },
    "14750": {
      "op": "DUP2"
    },
    "14751": {
      "op": "ADD"
    },
    "14752": {
      "op": "MSTORE"
    },
    "14753": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14788": {
      "op": "DUP3"
    },
    "14789": {
      "op": "ADD"
    },
    "14790": {
      "op": "MSTORE"
    },
    "14791": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14793": {
      "op": "ADD"
    },
    "14794": {
      "op": "SWAP1"
    },
    "14795": {
      "jump": "o",
      "op": "JUMP"
    },
    "14796": {
      "op": "JUMPDEST"
    },
    "14797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14799": {
      "op": "DUP2"
    },
    "14800": {
      "op": "MSTORE"
    },
    "14801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14803": {
      "op": "PUSH2",
      "value": "0x330C"
    },
    "14806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14808": {
      "op": "DUP4"
    },
    "14809": {
      "op": "ADD"
    },
    "14810": {
      "op": "DUP5"
    },
    "14811": {
      "op": "PUSH2",
      "value": "0x30DE"
    },
    "14814": {
      "jump": "i",
      "op": "JUMP"
    },
    "14815": {
      "op": "JUMPDEST"
    },
    "14816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14818": {
      "op": "DUP2"
    },
    "14819": {
      "op": "SLOAD"
    },
    "14820": {
      "op": "PUSH2",
      "value": "0x39EC"
    },
    "14823": {
      "op": "DUP2"
    },
    "14824": {
      "op": "PUSH2",
      "value": "0x38E0"
    },
    "14827": {
      "jump": "i",
      "op": "JUMP"
    },
    "14828": {
      "op": "JUMPDEST"
    },
    "14829": {
      "op": "DUP1"
    },
    "14830": {
      "op": "DUP6"
    },
    "14831": {
      "op": "MSTORE"
    },
    "14832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14836": {
      "op": "DUP4"
    },
    "14837": {
      "op": "DUP2"
    },
    "14838": {
      "op": "AND"
    },
    "14839": {
      "op": "DUP1"
    },
    "14840": {
      "op": "ISZERO"
    },
    "14841": {
      "op": "PUSH2",
      "value": "0x3A09"
    },
    "14844": {
      "op": "JUMPI"
    },
    "14845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14847": {
      "op": "DUP2"
    },
    "14848": {
      "op": "EQ"
    },
    "14849": {
      "op": "PUSH2",
      "value": "0x3A23"
    },
    "14852": {
      "op": "JUMPI"
    },
    "14853": {
      "op": "PUSH2",
      "value": "0x3A51"
    },
    "14856": {
      "op": "JUMP"
    },
    "14857": {
      "op": "JUMPDEST"
    },
    "14858": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14860": {
      "op": "NOT"
    },
    "14861": {
      "op": "DUP6"
    },
    "14862": {
      "op": "AND"
    },
    "14863": {
      "op": "DUP9"
    },
    "14864": {
      "op": "DUP5"
    },
    "14865": {
      "op": "ADD"
    },
    "14866": {
      "op": "MSTORE"
    },
    "14867": {
      "op": "DUP4"
    },
    "14868": {
      "op": "ISZERO"
    },
    "14869": {
      "op": "ISZERO"
    },
    "14870": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14872": {
      "op": "SHL"
    },
    "14873": {
      "op": "DUP9"
    },
    "14874": {
      "op": "ADD"
    },
    "14875": {
      "op": "DUP4"
    },
    "14876": {
      "op": "ADD"
    },
    "14877": {
      "op": "SWAP6"
    },
    "14878": {
      "op": "POP"
    },
    "14879": {
      "op": "PUSH2",
      "value": "0x3A51"
    },
    "14882": {
      "op": "JUMP"
    },
    "14883": {
      "op": "JUMPDEST"
    },
    "14884": {
      "op": "DUP7"
    },
    "14885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14887": {
      "op": "MSTORE"
    },
    "14888": {
      "op": "DUP3"
    },
    "14889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14891": {
      "op": "KECCAK256"
    },
    "14892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14894": {
      "op": "JUMPDEST"
    },
    "14895": {
      "op": "DUP6"
    },
    "14896": {
      "op": "DUP2"
    },
    "14897": {
      "op": "LT"
    },
    "14898": {
      "op": "ISZERO"
    },
    "14899": {
      "op": "PUSH2",
      "value": "0x3A49"
    },
    "14902": {
      "op": "JUMPI"
    },
    "14903": {
      "op": "DUP2"
    },
    "14904": {
      "op": "SLOAD"
    },
    "14905": {
      "op": "DUP11"
    },
    "14906": {
      "op": "DUP3"
    },
    "14907": {
      "op": "ADD"
    },
    "14908": {
      "op": "DUP7"
    },
    "14909": {
      "op": "ADD"
    },
    "14910": {
      "op": "MSTORE"
    },
    "14911": {
      "op": "SWAP1"
    },
    "14912": {
      "op": "DUP4"
    },
    "14913": {
      "op": "ADD"
    },
    "14914": {
      "op": "SWAP1"
    },
    "14915": {
      "op": "DUP5"
    },
    "14916": {
      "op": "ADD"
    },
    "14917": {
      "op": "PUSH2",
      "value": "0x3A2E"
    },
    "14920": {
      "op": "JUMP"
    },
    "14921": {
      "op": "JUMPDEST"
    },
    "14922": {
      "op": "DUP10"
    },
    "14923": {
      "op": "ADD"
    },
    "14924": {
      "op": "DUP5"
    },
    "14925": {
      "op": "ADD"
    },
    "14926": {
      "op": "SWAP7"
    },
    "14927": {
      "op": "POP"
    },
    "14928": {
      "op": "POP"
    },
    "14929": {
      "op": "JUMPDEST"
    },
    "14930": {
      "op": "POP"
    },
    "14931": {
      "op": "POP"
    },
    "14932": {
      "op": "POP"
    },
    "14933": {
      "op": "POP"
    },
    "14934": {
      "op": "POP"
    },
    "14935": {
      "op": "SWAP3"
    },
    "14936": {
      "op": "SWAP2"
    },
    "14937": {
      "op": "POP"
    },
    "14938": {
      "op": "POP"
    },
    "14939": {
      "jump": "o",
      "op": "JUMP"
    },
    "14940": {
      "op": "JUMPDEST"
    },
    "14941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14943": {
      "op": "DUP2"
    },
    "14944": {
      "op": "MSTORE"
    },
    "14945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14947": {
      "op": "PUSH2",
      "value": "0x330C"
    },
    "14950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14952": {
      "op": "DUP4"
    },
    "14953": {
      "op": "ADD"
    },
    "14954": {
      "op": "DUP5"
    },
    "14955": {
      "op": "PUSH2",
      "value": "0x39DF"
    },
    "14958": {
      "jump": "i",
      "op": "JUMP"
    },
    "14959": {
      "op": "JUMPDEST"
    },
    "14960": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14962": {
      "op": "DUP3"
    },
    "14963": {
      "op": "GT"
    },
    "14964": {
      "op": "ISZERO"
    },
    "14965": {
      "op": "PUSH2",
      "value": "0x3AB9"
    },
    "14968": {
      "op": "JUMPI"
    },
    "14969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14971": {
      "op": "DUP2"
    },
    "14972": {
      "op": "DUP2"
    },
    "14973": {
      "op": "MSTORE"
    },
    "14974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14976": {
      "op": "DUP2"
    },
    "14977": {
      "op": "KECCAK256"
    },
    "14978": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14980": {
      "op": "DUP6"
    },
    "14981": {
      "op": "ADD"
    },
    "14982": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14984": {
      "op": "SHR"
    },
    "14985": {
      "op": "DUP2"
    },
    "14986": {
      "op": "ADD"
    },
    "14987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14989": {
      "op": "DUP7"
    },
    "14990": {
      "op": "LT"
    },
    "14991": {
      "op": "ISZERO"
    },
    "14992": {
      "op": "PUSH2",
      "value": "0x3A96"
    },
    "14995": {
      "op": "JUMPI"
    },
    "14996": {
      "op": "POP"
    },
    "14997": {
      "op": "DUP1"
    },
    "14998": {
      "op": "JUMPDEST"
    },
    "14999": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15001": {
      "op": "DUP6"
    },
    "15002": {
      "op": "ADD"
    },
    "15003": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15005": {
      "op": "SHR"
    },
    "15006": {
      "op": "DUP3"
    },
    "15007": {
      "op": "ADD"
    },
    "15008": {
      "op": "SWAP2"
    },
    "15009": {
      "op": "POP"
    },
    "15010": {
      "op": "JUMPDEST"
    },
    "15011": {
      "op": "DUP2"
    },
    "15012": {
      "op": "DUP2"
    },
    "15013": {
      "op": "LT"
    },
    "15014": {
      "op": "ISZERO"
    },
    "15015": {
      "op": "PUSH2",
      "value": "0x3AB5"
    },
    "15018": {
      "op": "JUMPI"
    },
    "15019": {
      "op": "DUP3"
    },
    "15020": {
      "op": "DUP2"
    },
    "15021": {
      "op": "SSTORE"
    },
    "15022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15024": {
      "op": "ADD"
    },
    "15025": {
      "op": "PUSH2",
      "value": "0x3AA2"
    },
    "15028": {
      "op": "JUMP"
    },
    "15029": {
      "op": "JUMPDEST"
    },
    "15030": {
      "op": "POP"
    },
    "15031": {
      "op": "POP"
    },
    "15032": {
      "op": "POP"
    },
    "15033": {
      "op": "JUMPDEST"
    },
    "15034": {
      "op": "POP"
    },
    "15035": {
      "op": "POP"
    },
    "15036": {
      "op": "POP"
    },
    "15037": {
      "jump": "o",
      "op": "JUMP"
    },
    "15038": {
      "op": "JUMPDEST"
    },
    "15039": {
      "op": "DUP2"
    },
    "15040": {
      "op": "MLOAD"
    },
    "15041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15045": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15047": {
      "op": "SHL"
    },
    "15048": {
      "op": "SUB"
    },
    "15049": {
      "op": "DUP2"
    },
    "15050": {
      "op": "GT"
    },
    "15051": {
      "op": "ISZERO"
    },
    "15052": {
      "op": "PUSH2",
      "value": "0x3AD7"
    },
    "15055": {
      "op": "JUMPI"
    },
    "15056": {
      "op": "PUSH2",
      "value": "0x3AD7"
    },
    "15059": {
      "op": "PUSH2",
      "value": "0x314E"
    },
    "15062": {
      "jump": "i",
      "op": "JUMP"
    },
    "15063": {
      "op": "JUMPDEST"
    },
    "15064": {
      "op": "PUSH2",
      "value": "0x3AEB"
    },
    "15067": {
      "op": "DUP2"
    },
    "15068": {
      "op": "PUSH2",
      "value": "0x3AE5"
    },
    "15071": {
      "op": "DUP5"
    },
    "15072": {
      "op": "SLOAD"
    },
    "15073": {
      "op": "PUSH2",
      "value": "0x38E0"
    },
    "15076": {
      "jump": "i",
      "op": "JUMP"
    },
    "15077": {
      "op": "JUMPDEST"
    },
    "15078": {
      "op": "DUP5"
    },
    "15079": {
      "op": "PUSH2",
      "value": "0x3A6F"
    },
    "15082": {
      "jump": "i",
      "op": "JUMP"
    },
    "15083": {
      "op": "JUMPDEST"
    },
    "15084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15086": {
      "op": "DUP1"
    },
    "15087": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15089": {
      "op": "DUP4"
    },
    "15090": {
      "op": "GT"
    },
    "15091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15093": {
      "op": "DUP2"
    },
    "15094": {
      "op": "EQ"
    },
    "15095": {
      "op": "PUSH2",
      "value": "0x3B20"
    },
    "15098": {
      "op": "JUMPI"
    },
    "15099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15101": {
      "op": "DUP5"
    },
    "15102": {
      "op": "ISZERO"
    },
    "15103": {
      "op": "PUSH2",
      "value": "0x3B08"
    },
    "15106": {
      "op": "JUMPI"
    },
    "15107": {
      "op": "POP"
    },
    "15108": {
      "op": "DUP6"
    },
    "15109": {
      "op": "DUP4"
    },
    "15110": {
      "op": "ADD"
    },
    "15111": {
      "op": "MLOAD"
    },
    "15112": {
      "op": "JUMPDEST"
    },
    "15113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15115": {
      "op": "NOT"
    },
    "15116": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15118": {
      "op": "DUP7"
    },
    "15119": {
      "op": "SWAP1"
    },
    "15120": {
      "op": "SHL"
    },
    "15121": {
      "op": "SHR"
    },
    "15122": {
      "op": "NOT"
    },
    "15123": {
      "op": "AND"
    },
    "15124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15126": {
      "op": "DUP6"
    },
    "15127": {
      "op": "SWAP1"
    },
    "15128": {
      "op": "SHL"
    },
    "15129": {
      "op": "OR"
    },
    "15130": {
      "op": "DUP6"
    },
    "15131": {
      "op": "SSTORE"
    },
    "15132": {
      "op": "PUSH2",
      "value": "0x3AB5"
    },
    "15135": {
      "op": "JUMP"
    },
    "15136": {
      "op": "JUMPDEST"
    },
    "15137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15139": {
      "op": "DUP6"
    },
    "15140": {
      "op": "DUP2"
    },
    "15141": {
      "op": "MSTORE"
    },
    "15142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15144": {
      "op": "DUP2"
    },
    "15145": {
      "op": "KECCAK256"
    },
    "15146": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15148": {
      "op": "NOT"
    },
    "15149": {
      "op": "DUP7"
    },
    "15150": {
      "op": "AND"
    },
    "15151": {
      "op": "SWAP2"
    },
    "15152": {
      "op": "JUMPDEST"
    },
    "15153": {
      "op": "DUP3"
    },
    "15154": {
      "op": "DUP2"
    },
    "15155": {
      "op": "LT"
    },
    "15156": {
      "op": "ISZERO"
    },
    "15157": {
      "op": "PUSH2",
      "value": "0x3B4F"
    },
    "15160": {
      "op": "JUMPI"
    },
    "15161": {
      "op": "DUP9"
    },
    "15162": {
      "op": "DUP7"
    },
    "15163": {
      "op": "ADD"
    },
    "15164": {
      "op": "MLOAD"
    },
    "15165": {
      "op": "DUP3"
    },
    "15166": {
      "op": "SSTORE"
    },
    "15167": {
      "op": "SWAP5"
    },
    "15168": {
      "op": "DUP5"
    },
    "15169": {
      "op": "ADD"
    },
    "15170": {
      "op": "SWAP5"
    },
    "15171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15173": {
      "op": "SWAP1"
    },
    "15174": {
      "op": "SWAP2"
    },
    "15175": {
      "op": "ADD"
    },
    "15176": {
      "op": "SWAP1"
    },
    "15177": {
      "op": "DUP5"
    },
    "15178": {
      "op": "ADD"
    },
    "15179": {
      "op": "PUSH2",
      "value": "0x3B30"
    },
    "15182": {
      "op": "JUMP"
    },
    "15183": {
      "op": "JUMPDEST"
    },
    "15184": {
      "op": "POP"
    },
    "15185": {
      "op": "DUP6"
    },
    "15186": {
      "op": "DUP3"
    },
    "15187": {
      "op": "LT"
    },
    "15188": {
      "op": "ISZERO"
    },
    "15189": {
      "op": "PUSH2",
      "value": "0x3B6D"
    },
    "15192": {
      "op": "JUMPI"
    },
    "15193": {
      "op": "DUP8"
    },
    "15194": {
      "op": "DUP6"
    },
    "15195": {
      "op": "ADD"
    },
    "15196": {
      "op": "MLOAD"
    },
    "15197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15199": {
      "op": "NOT"
    },
    "15200": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15202": {
      "op": "DUP9"
    },
    "15203": {
      "op": "SWAP1"
    },
    "15204": {
      "op": "SHL"
    },
    "15205": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "15207": {
      "op": "AND"
    },
    "15208": {
      "op": "SHR"
    },
    "15209": {
      "op": "NOT"
    },
    "15210": {
      "op": "AND"
    },
    "15211": {
      "op": "DUP2"
    },
    "15212": {
      "op": "SSTORE"
    },
    "15213": {
      "op": "JUMPDEST"
    },
    "15214": {
      "op": "POP"
    },
    "15215": {
      "op": "POP"
    },
    "15216": {
      "op": "POP"
    },
    "15217": {
      "op": "POP"
    },
    "15218": {
      "op": "POP"
    },
    "15219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15221": {
      "op": "SWAP1"
    },
    "15222": {
      "op": "DUP2"
    },
    "15223": {
      "op": "SHL"
    },
    "15224": {
      "op": "ADD"
    },
    "15225": {
      "op": "SWAP1"
    },
    "15226": {
      "op": "SSTORE"
    },
    "15227": {
      "op": "POP"
    },
    "15228": {
      "jump": "o",
      "op": "JUMP"
    },
    "15229": {
      "op": "JUMPDEST"
    },
    "15230": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15235": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15237": {
      "op": "SHL"
    },
    "15238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15240": {
      "op": "MSTORE"
    },
    "15241": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "15243": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15245": {
      "op": "MSTORE"
    },
    "15246": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15250": {
      "op": "REVERT"
    },
    "15251": {
      "op": "JUMPDEST"
    },
    "15252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15254": {
      "op": "DUP3"
    },
    "15255": {
      "op": "NOT"
    },
    "15256": {
      "op": "DUP3"
    },
    "15257": {
      "op": "GT"
    },
    "15258": {
      "op": "ISZERO"
    },
    "15259": {
      "op": "PUSH2",
      "value": "0x3BA6"
    },
    "15262": {
      "op": "JUMPI"
    },
    "15263": {
      "op": "PUSH2",
      "value": "0x3BA6"
    },
    "15266": {
      "op": "PUSH2",
      "value": "0x3B7D"
    },
    "15269": {
      "jump": "i",
      "op": "JUMP"
    },
    "15270": {
      "op": "JUMPDEST"
    },
    "15271": {
      "op": "POP"
    },
    "15272": {
      "op": "ADD"
    },
    "15273": {
      "op": "SWAP1"
    },
    "15274": {
      "jump": "o",
      "op": "JUMP"
    },
    "15275": {
      "op": "JUMPDEST"
    },
    "15276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15278": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15281": {
      "op": "DUP4"
    },
    "15282": {
      "op": "DUP2"
    },
    "15283": {
      "op": "AND"
    },
    "15284": {
      "op": "SWAP1"
    },
    "15285": {
      "op": "DUP4"
    },
    "15286": {
      "op": "AND"
    },
    "15287": {
      "op": "DUP2"
    },
    "15288": {
      "op": "DUP2"
    },
    "15289": {
      "op": "LT"
    },
    "15290": {
      "op": "ISZERO"
    },
    "15291": {
      "op": "PUSH2",
      "value": "0x3BC6"
    },
    "15294": {
      "op": "JUMPI"
    },
    "15295": {
      "op": "PUSH2",
      "value": "0x3BC6"
    },
    "15298": {
      "op": "PUSH2",
      "value": "0x3B7D"
    },
    "15301": {
      "jump": "i",
      "op": "JUMP"
    },
    "15302": {
      "op": "JUMPDEST"
    },
    "15303": {
      "op": "SUB"
    },
    "15304": {
      "op": "SWAP4"
    },
    "15305": {
      "op": "SWAP3"
    },
    "15306": {
      "op": "POP"
    },
    "15307": {
      "op": "POP"
    },
    "15308": {
      "op": "POP"
    },
    "15309": {
      "jump": "o",
      "op": "JUMP"
    },
    "15310": {
      "op": "JUMPDEST"
    },
    "15311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15313": {
      "op": "DUP3"
    },
    "15314": {
      "op": "DUP3"
    },
    "15315": {
      "op": "LT"
    },
    "15316": {
      "op": "ISZERO"
    },
    "15317": {
      "op": "PUSH2",
      "value": "0x3BE0"
    },
    "15320": {
      "op": "JUMPI"
    },
    "15321": {
      "op": "PUSH2",
      "value": "0x3BE0"
    },
    "15324": {
      "op": "PUSH2",
      "value": "0x3B7D"
    },
    "15327": {
      "jump": "i",
      "op": "JUMP"
    },
    "15328": {
      "op": "JUMPDEST"
    },
    "15329": {
      "op": "POP"
    },
    "15330": {
      "op": "SUB"
    },
    "15331": {
      "op": "SWAP1"
    },
    "15332": {
      "jump": "o",
      "op": "JUMP"
    },
    "15333": {
      "op": "JUMPDEST"
    },
    "15334": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15340": {
      "op": "DUP6"
    },
    "15341": {
      "op": "AND"
    },
    "15342": {
      "op": "DUP2"
    },
    "15343": {
      "op": "MSTORE"
    },
    "15344": {
      "op": "DUP4"
    },
    "15345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15347": {
      "op": "DUP3"
    },
    "15348": {
      "op": "ADD"
    },
    "15349": {
      "op": "MSTORE"
    },
    "15350": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15352": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15354": {
      "op": "DUP3"
    },
    "15355": {
      "op": "ADD"
    },
    "15356": {
      "op": "MSTORE"
    },
    "15357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15359": {
      "op": "PUSH2",
      "value": "0x3C0B"
    },
    "15362": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15364": {
      "op": "DUP4"
    },
    "15365": {
      "op": "ADD"
    },
    "15366": {
      "op": "DUP6"
    },
    "15367": {
      "op": "PUSH2",
      "value": "0x30DE"
    },
    "15370": {
      "jump": "i",
      "op": "JUMP"
    },
    "15371": {
      "op": "JUMPDEST"
    },
    "15372": {
      "op": "SWAP1"
    },
    "15373": {
      "op": "POP"
    },
    "15374": {
      "op": "DUP3"
    },
    "15375": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15377": {
      "op": "DUP4"
    },
    "15378": {
      "op": "ADD"
    },
    "15379": {
      "op": "MSTORE"
    },
    "15380": {
      "op": "SWAP6"
    },
    "15381": {
      "op": "SWAP5"
    },
    "15382": {
      "op": "POP"
    },
    "15383": {
      "op": "POP"
    },
    "15384": {
      "op": "POP"
    },
    "15385": {
      "op": "POP"
    },
    "15386": {
      "op": "POP"
    },
    "15387": {
      "jump": "o",
      "op": "JUMP"
    },
    "15388": {
      "op": "JUMPDEST"
    },
    "15389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15393": {
      "op": "DUP3"
    },
    "15394": {
      "op": "ADD"
    },
    "15395": {
      "op": "PUSH2",
      "value": "0x3C2E"
    },
    "15398": {
      "op": "JUMPI"
    },
    "15399": {
      "op": "PUSH2",
      "value": "0x3C2E"
    },
    "15402": {
      "op": "PUSH2",
      "value": "0x3B7D"
    },
    "15405": {
      "jump": "i",
      "op": "JUMP"
    },
    "15406": {
      "op": "JUMPDEST"
    },
    "15407": {
      "op": "POP"
    },
    "15408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15410": {
      "op": "ADD"
    },
    "15411": {
      "op": "SWAP1"
    },
    "15412": {
      "jump": "o",
      "op": "JUMP"
    },
    "15413": {
      "op": "JUMPDEST"
    },
    "15414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15418": {
      "op": "DUP3"
    },
    "15419": {
      "op": "DUP5"
    },
    "15420": {
      "op": "SUB"
    },
    "15421": {
      "op": "SLT"
    },
    "15422": {
      "op": "ISZERO"
    },
    "15423": {
      "op": "PUSH2",
      "value": "0x3C47"
    },
    "15426": {
      "op": "JUMPI"
    },
    "15427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15429": {
      "op": "DUP1"
    },
    "15430": {
      "op": "REVERT"
    },
    "15431": {
      "op": "JUMPDEST"
    },
    "15432": {
      "op": "DUP2"
    },
    "15433": {
      "op": "MLOAD"
    },
    "15434": {
      "op": "PUSH2",
      "value": "0x330C"
    },
    "15437": {
      "op": "DUP2"
    },
    "15438": {
      "op": "PUSH2",
      "value": "0x35A4"
    },
    "15441": {
      "jump": "i",
      "op": "JUMP"
    },
    "15442": {
      "op": "JUMPDEST"
    },
    "15443": {
      "op": "DUP3"
    },
    "15444": {
      "op": "DUP2"
    },
    "15445": {
      "op": "LT"
    },
    "15446": {
      "op": "ISZERO"
    },
    "15447": {
      "op": "PUSH2",
      "value": "0x3C72"
    },
    "15450": {
      "op": "JUMPI"
    },
    "15451": {
      "op": "DUP7"
    },
    "15452": {
      "op": "DUP6"
    },
    "15453": {
      "op": "ADD"
    },
    "15454": {
      "op": "CALLDATALOAD"
    },
    "15455": {
      "op": "DUP3"
    },
    "15456": {
      "op": "SSTORE"
    },
    "15457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15459": {
      "op": "SWAP5"
    },
    "15460": {
      "op": "DUP6"
    },
    "15461": {
      "op": "ADD"
    },
    "15462": {
      "op": "SWAP5"
    },
    "15463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15465": {
      "op": "SWAP1"
    },
    "15466": {
      "op": "SWAP3"
    },
    "15467": {
      "op": "ADD"
    },
    "15468": {
      "op": "SWAP2"
    },
    "15469": {
      "op": "ADD"
    },
    "15470": {
      "op": "PUSH2",
      "value": "0x3C52"
    },
    "15473": {
      "op": "JUMP"
    },
    "15474": {
      "op": "JUMPDEST"
    },
    "15475": {
      "op": "POP"
    },
    "15476": {
      "op": "DUP7"
    },
    "15477": {
      "op": "DUP3"
    },
    "15478": {
      "op": "LT"
    },
    "15479": {
      "op": "ISZERO"
    },
    "15480": {
      "op": "PUSH2",
      "value": "0x3C8F"
    },
    "15483": {
      "op": "JUMPI"
    },
    "15484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15486": {
      "op": "NOT"
    },
    "15487": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "15489": {
      "op": "DUP9"
    },
    "15490": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15492": {
      "op": "SHL"
    },
    "15493": {
      "op": "AND"
    },
    "15494": {
      "op": "SHR"
    },
    "15495": {
      "op": "NOT"
    },
    "15496": {
      "op": "DUP5"
    },
    "15497": {
      "op": "DUP8"
    },
    "15498": {
      "op": "ADD"
    },
    "15499": {
      "op": "CALLDATALOAD"
    },
    "15500": {
      "op": "AND"
    },
    "15501": {
      "op": "DUP2"
    },
    "15502": {
      "op": "SSTORE"
    },
    "15503": {
      "op": "JUMPDEST"
    },
    "15504": {
      "op": "POP"
    },
    "15505": {
      "op": "POP"
    },
    "15506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15508": {
      "op": "DUP6"
    },
    "15509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15511": {
      "op": "SHL"
    },
    "15512": {
      "op": "ADD"
    },
    "15513": {
      "op": "DUP4"
    },
    "15514": {
      "op": "SSTORE"
    },
    "15515": {
      "op": "POP"
    },
    "15516": {
      "op": "POP"
    },
    "15517": {
      "op": "POP"
    },
    "15518": {
      "op": "POP"
    },
    "15519": {
      "op": "POP"
    },
    "15520": {
      "jump": "o",
      "op": "JUMP"
    },
    "15521": {
      "op": "JUMPDEST"
    },
    "15522": {
      "op": "DUP4"
    },
    "15523": {
      "op": "DUP2"
    },
    "15524": {
      "op": "MSTORE"
    },
    "15525": {
      "op": "DUP3"
    },
    "15526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15528": {
      "op": "DUP3"
    },
    "15529": {
      "op": "ADD"
    },
    "15530": {
      "op": "MSTORE"
    },
    "15531": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15535": {
      "op": "DUP3"
    },
    "15536": {
      "op": "ADD"
    },
    "15537": {
      "op": "MSTORE"
    },
    "15538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15540": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15543": {
      "op": "DUP1"
    },
    "15544": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15546": {
      "op": "DUP5"
    },
    "15547": {
      "op": "ADD"
    },
    "15548": {
      "op": "MSTORE"
    },
    "15549": {
      "op": "PUSH2",
      "value": "0x3CCA"
    },
    "15552": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "15555": {
      "op": "DUP5"
    },
    "15556": {
      "op": "ADD"
    },
    "15557": {
      "op": "DUP6"
    },
    "15558": {
      "op": "PUSH2",
      "value": "0x39DF"
    },
    "15561": {
      "jump": "i",
      "op": "JUMP"
    },
    "15562": {
      "op": "JUMPDEST"
    },
    "15563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15565": {
      "op": "DUP6"
    },
    "15566": {
      "op": "ADD"
    },
    "15567": {
      "op": "SLOAD"
    },
    "15568": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15574": {
      "op": "AND"
    },
    "15575": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15581": {
      "op": "DUP2"
    },
    "15582": {
      "op": "AND"
    },
    "15583": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15585": {
      "op": "DUP7"
    },
    "15586": {
      "op": "ADD"
    },
    "15587": {
      "op": "MSTORE"
    },
    "15588": {
      "op": "POP"
    },
    "15589": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15591": {
      "op": "DUP6"
    },
    "15592": {
      "op": "ADD"
    },
    "15593": {
      "op": "SLOAD"
    },
    "15594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15596": {
      "op": "DUP6"
    },
    "15597": {
      "op": "ADD"
    },
    "15598": {
      "op": "MSTORE"
    },
    "15599": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15601": {
      "op": "DUP6"
    },
    "15602": {
      "op": "ADD"
    },
    "15603": {
      "op": "SLOAD"
    },
    "15604": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15606": {
      "op": "DUP6"
    },
    "15607": {
      "op": "ADD"
    },
    "15608": {
      "op": "MSTORE"
    },
    "15609": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15611": {
      "op": "DUP6"
    },
    "15612": {
      "op": "ADD"
    },
    "15613": {
      "op": "SLOAD"
    },
    "15614": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15616": {
      "op": "DUP2"
    },
    "15617": {
      "op": "AND"
    },
    "15618": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15620": {
      "op": "DUP7"
    },
    "15621": {
      "op": "ADD"
    },
    "15622": {
      "op": "MSTORE"
    },
    "15623": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "15625": {
      "op": "DUP2"
    },
    "15626": {
      "op": "SWAP1"
    },
    "15627": {
      "op": "SHR"
    },
    "15628": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "15632": {
      "op": "AND"
    },
    "15633": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15636": {
      "op": "DUP7"
    },
    "15637": {
      "op": "ADD"
    },
    "15638": {
      "op": "MSTORE"
    },
    "15639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15641": {
      "op": "DUP2"
    },
    "15642": {
      "op": "SWAP1"
    },
    "15643": {
      "op": "SHR"
    },
    "15644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15648": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15650": {
      "op": "SHL"
    },
    "15651": {
      "op": "SUB"
    },
    "15652": {
      "op": "AND"
    },
    "15653": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15656": {
      "op": "DUP7"
    },
    "15657": {
      "op": "ADD"
    },
    "15658": {
      "op": "MSTORE"
    },
    "15659": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15662": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "15664": {
      "op": "DUP3"
    },
    "15665": {
      "op": "SWAP1"
    },
    "15666": {
      "op": "SHR"
    },
    "15667": {
      "op": "DUP2"
    },
    "15668": {
      "op": "AND"
    },
    "15669": {
      "op": "DUP5"
    },
    "15670": {
      "op": "DUP8"
    },
    "15671": {
      "op": "ADD"
    },
    "15672": {
      "op": "MSTORE"
    },
    "15673": {
      "op": "PUSH2",
      "value": "0x3D4E"
    },
    "15676": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "15679": {
      "op": "DUP8"
    },
    "15680": {
      "op": "ADD"
    },
    "15681": {
      "op": "DUP3"
    },
    "15682": {
      "op": "DUP5"
    },
    "15683": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15685": {
      "op": "SHR"
    },
    "15686": {
      "op": "AND"
    },
    "15687": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15690": {
      "op": "AND"
    },
    "15691": {
      "op": "SWAP1"
    },
    "15692": {
      "op": "MSTORE"
    },
    "15693": {
      "op": "JUMP"
    },
    "15694": {
      "op": "JUMPDEST"
    },
    "15695": {
      "op": "POP"
    },
    "15696": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "15698": {
      "op": "DUP2"
    },
    "15699": {
      "op": "SWAP1"
    },
    "15700": {
      "op": "SHR"
    },
    "15701": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15707": {
      "op": "AND"
    },
    "15708": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "15711": {
      "op": "DUP7"
    },
    "15712": {
      "op": "ADD"
    },
    "15713": {
      "op": "MSTORE"
    },
    "15714": {
      "op": "POP"
    },
    "15715": {
      "op": "SWAP7"
    },
    "15716": {
      "op": "SWAP6"
    },
    "15717": {
      "op": "POP"
    },
    "15718": {
      "op": "POP"
    },
    "15719": {
      "op": "POP"
    },
    "15720": {
      "op": "POP"
    },
    "15721": {
      "op": "POP"
    },
    "15722": {
      "op": "POP"
    },
    "15723": {
      "jump": "o",
      "op": "JUMP"
    },
    "15724": {
      "op": "JUMPDEST"
    },
    "15725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15731": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15733": {
      "op": "SHL"
    },
    "15734": {
      "op": "SUB"
    },
    "15735": {
      "op": "DUP1"
    },
    "15736": {
      "op": "DUP5"
    },
    "15737": {
      "op": "AND"
    },
    "15738": {
      "op": "DUP1"
    },
    "15739": {
      "op": "PUSH2",
      "value": "0x3D94"
    },
    "15742": {
      "op": "JUMPI"
    },
    "15743": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15748": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15750": {
      "op": "SHL"
    },
    "15751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15753": {
      "op": "MSTORE"
    },
    "15754": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "15756": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15758": {
      "op": "MSTORE"
    },
    "15759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15763": {
      "op": "REVERT"
    },
    "15764": {
      "op": "JUMPDEST"
    },
    "15765": {
      "op": "SWAP3"
    },
    "15766": {
      "op": "AND"
    },
    "15767": {
      "op": "SWAP2"
    },
    "15768": {
      "op": "SWAP1"
    },
    "15769": {
      "op": "SWAP2"
    },
    "15770": {
      "op": "DIV"
    },
    "15771": {
      "op": "SWAP3"
    },
    "15772": {
      "op": "SWAP2"
    },
    "15773": {
      "op": "POP"
    },
    "15774": {
      "op": "POP"
    },
    "15775": {
      "jump": "o",
      "op": "JUMP"
    },
    "15776": {
      "op": "JUMPDEST"
    },
    "15777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15779": {
      "op": "DUP1"
    },
    "15780": {
      "op": "DUP3"
    },
    "15781": {
      "op": "MSTORE"
    },
    "15782": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "15784": {
      "op": "SWAP1"
    },
    "15785": {
      "op": "DUP3"
    },
    "15786": {
      "op": "ADD"
    },
    "15787": {
      "op": "MSTORE"
    },
    "15788": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "15809": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "15811": {
      "op": "SHL"
    },
    "15812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15814": {
      "op": "DUP3"
    },
    "15815": {
      "op": "ADD"
    },
    "15816": {
      "op": "MSTORE"
    },
    "15817": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15819": {
      "op": "ADD"
    },
    "15820": {
      "op": "SWAP1"
    },
    "15821": {
      "jump": "o",
      "op": "JUMP"
    },
    "15822": {
      "op": "JUMPDEST"
    },
    "15823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15825": {
      "op": "DUP1"
    },
    "15826": {
      "op": "DUP3"
    },
    "15827": {
      "op": "SLT"
    },
    "15828": {
      "op": "DUP1"
    },
    "15829": {
      "op": "ISZERO"
    },
    "15830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15834": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15836": {
      "op": "SHL"
    },
    "15837": {
      "op": "SUB"
    },
    "15838": {
      "op": "DUP5"
    },
    "15839": {
      "op": "SWAP1"
    },
    "15840": {
      "op": "SUB"
    },
    "15841": {
      "op": "DUP6"
    },
    "15842": {
      "op": "SGT"
    },
    "15843": {
      "op": "AND"
    },
    "15844": {
      "op": "ISZERO"
    },
    "15845": {
      "op": "PUSH2",
      "value": "0x3DF0"
    },
    "15848": {
      "op": "JUMPI"
    },
    "15849": {
      "op": "PUSH2",
      "value": "0x3DF0"
    },
    "15852": {
      "op": "PUSH2",
      "value": "0x3B7D"
    },
    "15855": {
      "jump": "i",
      "op": "JUMP"
    },
    "15856": {
      "op": "JUMPDEST"
    },
    "15857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15859": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15861": {
      "op": "SHL"
    },
    "15862": {
      "op": "DUP4"
    },
    "15863": {
      "op": "SWAP1"
    },
    "15864": {
      "op": "SUB"
    },
    "15865": {
      "op": "DUP5"
    },
    "15866": {
      "op": "SLT"
    },
    "15867": {
      "op": "DUP2"
    },
    "15868": {
      "op": "AND"
    },
    "15869": {
      "op": "ISZERO"
    },
    "15870": {
      "op": "PUSH2",
      "value": "0x3E09"
    },
    "15873": {
      "op": "JUMPI"
    },
    "15874": {
      "op": "PUSH2",
      "value": "0x3E09"
    },
    "15877": {
      "op": "PUSH2",
      "value": "0x3B7D"
    },
    "15880": {
      "jump": "i",
      "op": "JUMP"
    },
    "15881": {
      "op": "JUMPDEST"
    },
    "15882": {
      "op": "POP"
    },
    "15883": {
      "op": "POP"
    },
    "15884": {
      "op": "ADD"
    },
    "15885": {
      "op": "SWAP1"
    },
    "15886": {
      "jump": "o",
      "op": "JUMP"
    },
    "15887": {
      "op": "JUMPDEST"
    },
    "15888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15890": {
      "op": "DUP3"
    },
    "15891": {
      "op": "MLOAD"
    },
    "15892": {
      "op": "PUSH2",
      "value": "0x3E21"
    },
    "15895": {
      "op": "DUP2"
    },
    "15896": {
      "op": "DUP5"
    },
    "15897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15899": {
      "op": "DUP8"
    },
    "15900": {
      "op": "ADD"
    },
    "15901": {
      "op": "PUSH2",
      "value": "0x30B2"
    },
    "15904": {
      "jump": "i",
      "op": "JUMP"
    },
    "15905": {
      "op": "JUMPDEST"
    },
    "15906": {
      "op": "SWAP2"
    },
    "15907": {
      "op": "SWAP1"
    },
    "15908": {
      "op": "SWAP2"
    },
    "15909": {
      "op": "ADD"
    },
    "15910": {
      "op": "SWAP3"
    },
    "15911": {
      "op": "SWAP2"
    },
    "15912": {
      "op": "POP"
    },
    "15913": {
      "op": "POP"
    },
    "15914": {
      "jump": "o",
      "op": "JUMP"
    },
    "15915": {
      "op": "JUMPDEST"
    },
    "15916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15918": {
      "op": "DUP1"
    },
    "15919": {
      "op": "DUP4"
    },
    "15920": {
      "op": "SLOAD"
    },
    "15921": {
      "op": "PUSH2",
      "value": "0x3E39"
    },
    "15924": {
      "op": "DUP2"
    },
    "15925": {
      "op": "PUSH2",
      "value": "0x38E0"
    },
    "15928": {
      "jump": "i",
      "op": "JUMP"
    },
    "15929": {
      "op": "JUMPDEST"
    },
    "15930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15932": {
      "op": "DUP3"
    },
    "15933": {
      "op": "DUP2"
    },
    "15934": {
      "op": "AND"
    },
    "15935": {
      "op": "DUP1"
    },
    "15936": {
      "op": "ISZERO"
    },
    "15937": {
      "op": "PUSH2",
      "value": "0x3E51"
    },
    "15940": {
      "op": "JUMPI"
    },
    "15941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15943": {
      "op": "DUP2"
    },
    "15944": {
      "op": "EQ"
    },
    "15945": {
      "op": "PUSH2",
      "value": "0x3E66"
    },
    "15948": {
      "op": "JUMPI"
    },
    "15949": {
      "op": "PUSH2",
      "value": "0x395A"
    },
    "15952": {
      "op": "JUMP"
    },
    "15953": {
      "op": "JUMPDEST"
    },
    "15954": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15956": {
      "op": "NOT"
    },
    "15957": {
      "op": "DUP5"
    },
    "15958": {
      "op": "AND"
    },
    "15959": {
      "op": "DUP8"
    },
    "15960": {
      "op": "MSTORE"
    },
    "15961": {
      "op": "DUP3"
    },
    "15962": {
      "op": "ISZERO"
    },
    "15963": {
      "op": "ISZERO"
    },
    "15964": {
      "op": "DUP4"
    },
    "15965": {
      "op": "MUL"
    },
    "15966": {
      "op": "DUP8"
    },
    "15967": {
      "op": "ADD"
    },
    "15968": {
      "op": "SWAP5"
    },
    "15969": {
      "op": "POP"
    },
    "15970": {
      "op": "PUSH2",
      "value": "0x395A"
    },
    "15973": {
      "op": "JUMP"
    },
    "15974": {
      "op": "JUMPDEST"
    },
    "15975": {
      "op": "DUP8"
    },
    "15976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15978": {
      "op": "MSTORE"
    },
    "15979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15981": {
      "op": "DUP1"
    },
    "15982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15984": {
      "op": "KECCAK256"
    },
    "15985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15987": {
      "op": "JUMPDEST"
    },
    "15988": {
      "op": "DUP6"
    },
    "15989": {
      "op": "DUP2"
    },
    "15990": {
      "op": "LT"
    },
    "15991": {
      "op": "ISZERO"
    },
    "15992": {
      "op": "PUSH2",
      "value": "0x3E8C"
    },
    "15995": {
      "op": "JUMPI"
    },
    "15996": {
      "op": "DUP2"
    },
    "15997": {
      "op": "SLOAD"
    },
    "15998": {
      "op": "DUP11"
    },
    "15999": {
      "op": "DUP3"
    },
    "16000": {
      "op": "ADD"
    },
    "16001": {
      "op": "MSTORE"
    },
    "16002": {
      "op": "SWAP1"
    },
    "16003": {
      "op": "DUP5"
    },
    "16004": {
      "op": "ADD"
    },
    "16005": {
      "op": "SWAP1"
    },
    "16006": {
      "op": "DUP3"
    },
    "16007": {
      "op": "ADD"
    },
    "16008": {
      "op": "PUSH2",
      "value": "0x3E73"
    },
    "16011": {
      "op": "JUMP"
    },
    "16012": {
      "op": "JUMPDEST"
    },
    "16013": {
      "op": "POP"
    },
    "16014": {
      "op": "POP"
    },
    "16015": {
      "op": "POP"
    },
    "16016": {
      "op": "SWAP6"
    },
    "16017": {
      "op": "SWAP1"
    },
    "16018": {
      "op": "SWAP2"
    },
    "16019": {
      "op": "ADD"
    },
    "16020": {
      "op": "SWAP7"
    },
    "16021": {
      "op": "SWAP6"
    },
    "16022": {
      "op": "POP"
    },
    "16023": {
      "op": "POP"
    },
    "16024": {
      "op": "POP"
    },
    "16025": {
      "op": "POP"
    },
    "16026": {
      "op": "POP"
    },
    "16027": {
      "op": "POP"
    },
    "16028": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d988551dd9abd8aab48d6b85dbde5cdafbbcd367",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport './WizardTower.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n    WizardTower wizardTower;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksWaitingConfirmation;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 public totalTasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint40 taskVerificationTimeBonus = 1 days; // 1 day\n    uint256 boardSeats = 3;\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId, Task myTask);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n    event TaskCompleted(uint256 wizardId, uint256 taskId, string IPFSHash, uint256 data);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n    // todo -- update this function as we know long have board but have roles that can assign tasks to other roles\n    function isCallerOnBoard() public view returns (bool) {\n//        for(uint256 i =1; i <= boardSeats;){\n//            if(wizardsNFT.ownerOf(wizardTower.getWizardOnFloor(i)) == msg.sender ){\n//                return true;\n//            }\n//            unchecked{++i;}\n//        }\n//        return false;\n        return false;\n    }\n\n    // todo -- update this function as we know long have board but have roles that can assign tasks to other roles\n    function isMyWizardOnBoard(uint256 _wizId) public view returns (bool) {\n//        if(wizardsNFT.ownerOf(_wizId)==msg.sender && wizardTower.isOnTheTower(_wizId) && wizardTower.getFloorGivenWizard(_wizId) <=boardSeats){\n//            return true;\n//        }\n        return false;\n    }\n\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- delete tasktype function\n\n    function areTasksAvailableToConfirm(uint256 _wizId) external view returns (bool) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n//        uint256 taskId;\n\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            myTask = tasks[uint256(DoubleEndedQueue.at(tasksWaitingConfirmation,i))];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n\n    function getTasksAssignedToWiz(uint40 _wizId) external view returns (Task[] memory, uint256[] memory) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n        uint256 count=0;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                unchecked{++count;}\n            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            Task[] memory myReturn= new Task[](1);\n            uint256[] memory myReturnUint= new uint256[](1);\n//            myReturn[0].NFTID=0;\n//            myReturn[0] = \"\";\n            return (myReturn, myReturnUint);\n        }\n\n        uint256 counter = 0;\n        Task[] memory myTasks = new Task[](count);\n        uint256[] memory myTaskIds = new uint256[](count);\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                myTasks[counter] = myTask;\n                myTaskIds[counter] = taskId;\n                unchecked{++counter;}\n                if(counter>count){break;}\n            }\n            unchecked{++i;}\n        }\n        return (myTasks, myTaskIds);\n    }\n\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes(uint40 _wizId) external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n//            else {\n//                string[] memory myReturn= new string[](1);\n//                myReturn[0] = \"\";\n//                return myReturn;\n//            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            string[] memory myReturn= new string[](1);\n            myReturn[0] = \"\";\n            return myReturn;\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[counter] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    function deleteTaskTypeByIPFSHash(string memory _IPFSHash) external {\n        for(uint256 i=0; i<taskTypes.length;){\n            if(keccak256(abi.encodePacked(taskTypes[i].IPFSHash)) == keccak256(abi.encodePacked(_IPFSHash))){\n//                taskTypes[i] = taskTypes[taskTypes.length-1];\n                TaskType storage myTaskType = taskTypes[i];\n                TaskType storage displacedTaskType = taskTypes[taskTypes.length-1];\n//                myTaskType.nextActiveTimeThreshold = displacedTaskType.nextActiveTimeThreshold;\n                myTaskType = displacedTaskType;\n                delete taskTypes[taskTypes.length-1];\n                // todo see if this works at all\n//        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n//        string IPFSHash; // holds description\n//        bool paused;\n//        uint40 proposalID; // proposal ID or 0 if task\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus;\n//        uint40 begTimestamp;\n//        uint40 endTimestamp;\n//        uint16 availableSlots;\n\n\n                delete taskTypes[taskTypes.length-1];\n                break;\n            }\n            unchecked{++i;}\n        }\n    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft, address _wizardTower){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n        wizardTower = WizardTower(_wizardTower);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizId) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n\n        // todo --implement randomness\n        // uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n//                taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n//                myTask = tasks[taskId];\n\n                // update task\n                myTask.verifierID = uint16(_wizId);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[taskId] = myTask;\n                emit VerificationAssigned(_wizId, taskId, tasks[taskId]);\n            }\n            unchecked{++i;}\n        }\n//        emit VerificationAssigned(_wizId, taskId);\n    }\n\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizId) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length;){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizId, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksWaitingConfirmation, bytes32(totalTasksAttempted));\n                tasks[totalTasksAttempted] = myTask;\n                totalTasksAttempted+=1;\n\n                // update TaskTypes\n                taskTypes[i].nextActiveTimeThreshold[_wizId] = block.timestamp + 1 days;\n                taskTypes[i].availableSlots = taskTypes[i].availableSlots - 1;\n\n                emit TaskCompleted(_wizId,totalTasksAttempted -1, _IPFSHash, block.timestamp);\n                break;\n            }\n            unchecked{++i;}\n        }\n        // failed\n\n\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task memory myTask = tasks[_taskID];\n//        uint256 count = 0;\n        bool deleteTaskFlag = true;\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n            wizardsNFT.increaseProtectedUntilTimestamp(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.increaseProtectedUntilTimestamp(myTask.verifierID, taskVerificationTimeBonus);\n\n            // myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n\n            if(myTask.refuterID==0){\n                myTask.refuterID=uint16(_wizId);\n                myTask.refuterHash=myHash;\n                tasks[_taskID] = myTask;\n                deleteTaskFlag = false;\n            }\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.increaseProtectedUntilTimestamp(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.increaseProtectedUntilTimestamp(_wizId, taskVerificationTimeBonus);\n\n                // myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n\n            // delete task from double ended queue\n        if(deleteTaskFlag){\n            uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n//            Task memory myTask;\n\n            // delete task from doubleEndedQueue\n            for(uint256 i =0; i < totalTasksSubmitted; ){\n                if( uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i))==_taskID){\n                    bytes32 prevFront = DoubleEndedQueue.popFront(tasksWaitingConfirmation);\n                    if(i!=0){ // add back on if we weren't meant to remove front\n                        tasksWaitingConfirmation._data[int128(tasksWaitingConfirmation._begin + int(i))] = prevFront;\n                    }\n                }\n                unchecked{++i;}\n            }\n        }\n\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        // check caller against top 3 wizards on tower\n        require(isCallerOnBoard(), \"Must be on the board\");\n//        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "771:23520:3:-:0;;;2978:5;2951:32;;3003:41;;;-1:-1:-1;;3003:41:3;3038:6;3003:41;;;3080:1;3059:22;;12585:247;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:14;1778:7;:22;889:23:13;679:10:7;889:9:13;:23::i;:::-;12686:10:3;:26;;-1:-1:-1;;;;;12686:26:3;;;-1:-1:-1;;;;;;12686:26:3;;;;;;;12722:11;:39;;;;;;;;;;;771:23520;;2101:173:13;2176:6;;;-1:-1:-1;;;;;2193:17:13;;;-1:-1:-1;;;;;;2193:17:13;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:177:29:-;93:13;;-1:-1:-1;;;;;135:31:29;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;771:23520:3;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}