{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/helpers/SimpleToken.sol",
    "12": "contracts/interfaces/IERC20.sol",
    "13": "contracts/interfaces/IERC20Metadata.sol",
    "4": "contracts/helpers/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/helpers/SimpleToken.sol",
    "exportedSymbols": {
      "Context": [
        3112
      ],
      "ERC20": [
        2073
      ],
      "IERC20": [
        2345
      ],
      "IERC20Metadata": [
        2128
      ],
      "SimpleToken": [
        2107
      ]
    },
    "id": 2108,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1489,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 1490,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2108,
        "sourceUnit": 2346,
        "src": "64:34:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20Metadata.sol",
        "file": "../interfaces/IERC20Metadata.sol",
        "id": 1491,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2108,
        "sourceUnit": 2129,
        "src": "99:42:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./Context.sol",
        "id": 1492,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2108,
        "sourceUnit": 3113,
        "src": "142:23:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1494,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3112,
              "src": "1600:7:10"
            },
            "id": 1495,
            "nodeType": "InheritanceSpecifier",
            "src": "1600:7:10"
          },
          {
            "baseName": {
              "id": 1496,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2128,
              "src": "1609:14:10"
            },
            "id": 1497,
            "nodeType": "InheritanceSpecifier",
            "src": "1609:14:10"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1493,
          "nodeType": "StructuredDocumentation",
          "src": "409:1172:10",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 2073,
        "linearizedBaseContracts": [
          2073,
          2128,
          2345,
          3112
        ],
        "name": "ERC20",
        "nameLocation": "1591:5:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1501,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1666:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 2073,
            "src": "1630:45:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1500,
              "keyType": {
                "id": 1498,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1638:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1630:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1499,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1649:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1507,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1738:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 2073,
            "src": "1682:67:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1506,
              "keyType": {
                "id": 1502,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1690:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1682:47:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1505,
                "keyType": {
                  "id": 1503,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1709:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1701:27:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1504,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1720:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1509,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1772:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 2073,
            "src": "1756:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1508,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1756:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1511,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1806:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 2073,
            "src": "1791:20:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1510,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1791:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1513,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1832:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 2073,
            "src": "1817:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1512,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1817:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1529,
              "nodeType": "Block",
              "src": "2205:57:10",
              "statements": [
                {
                  "expression": {
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1521,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1511,
                      "src": "2215:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1522,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "2223:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2215:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1524,
                  "nodeType": "ExpressionStatement",
                  "src": "2215:13:10"
                },
                {
                  "expression": {
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1525,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1513,
                      "src": "2238:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1526,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1518,
                      "src": "2248:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2238:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "2238:17:10"
                }
              ]
            },
            "documentation": {
              "id": 1514,
              "nodeType": "StructuredDocumentation",
              "src": "1846:298:10",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 1530,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2175:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1530,
                  "src": "2161:19:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2161:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1518,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2196:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1530,
                  "src": "2182:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2182:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2160:44:10"
            },
            "returnParameters": {
              "id": 1520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2205:0:10"
            },
            "scope": 2073,
            "src": "2149:113:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2117
            ],
            "body": {
              "id": 1539,
              "nodeType": "Block",
              "src": "2396:29:10",
              "statements": [
                {
                  "expression": {
                    "id": 1537,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1511,
                    "src": "2413:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1536,
                  "id": 1538,
                  "nodeType": "Return",
                  "src": "2406:12:10"
                }
              ]
            },
            "documentation": {
              "id": 1531,
              "nodeType": "StructuredDocumentation",
              "src": "2268:54:10",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 1540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2336:4:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1533,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2363:8:10"
            },
            "parameters": {
              "id": 1532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2340:2:10"
            },
            "returnParameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1540,
                  "src": "2381:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1534,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2381:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2380:15:10"
            },
            "scope": 2073,
            "src": "2327:98:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2122
            ],
            "body": {
              "id": 1549,
              "nodeType": "Block",
              "src": "2609:31:10",
              "statements": [
                {
                  "expression": {
                    "id": 1547,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1513,
                    "src": "2626:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1546,
                  "id": 1548,
                  "nodeType": "Return",
                  "src": "2619:14:10"
                }
              ]
            },
            "documentation": {
              "id": 1541,
              "nodeType": "StructuredDocumentation",
              "src": "2431:102:10",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 1550,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2547:6:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1543,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2576:8:10"
            },
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2553:2:10"
            },
            "returnParameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1545,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1550,
                  "src": "2594:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2593:15:10"
            },
            "scope": 2073,
            "src": "2538:102:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2127
            ],
            "body": {
              "id": 1559,
              "nodeType": "Block",
              "src": "3329:26:10",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3346:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 1556,
                  "id": 1558,
                  "nodeType": "Return",
                  "src": "3339:9:10"
                }
              ]
            },
            "documentation": {
              "id": 1551,
              "nodeType": "StructuredDocumentation",
              "src": "2646:613:10",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 1560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3273:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1553,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3304:8:10"
            },
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3281:2:10"
            },
            "returnParameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "3322:5:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3322:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3321:7:10"
            },
            "scope": 2073,
            "src": "3264:91:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2278
            ],
            "body": {
              "id": 1569,
              "nodeType": "Block",
              "src": "3485:36:10",
              "statements": [
                {
                  "expression": {
                    "id": 1567,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1509,
                    "src": "3502:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1566,
                  "id": 1568,
                  "nodeType": "Return",
                  "src": "3495:19:10"
                }
              ]
            },
            "documentation": {
              "id": 1561,
              "nodeType": "StructuredDocumentation",
              "src": "3361:49:10",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 1570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3424:11:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3458:8:10"
            },
            "parameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3435:2:10"
            },
            "returnParameters": {
              "id": 1566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1570,
                  "src": "3476:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3476:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3475:9:10"
            },
            "scope": 2073,
            "src": "3415:106:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2285
            ],
            "body": {
              "id": 1583,
              "nodeType": "Block",
              "src": "3662:42:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1579,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1501,
                      "src": "3679:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1581,
                    "indexExpression": {
                      "id": 1580,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1573,
                      "src": "3689:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3679:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1578,
                  "id": 1582,
                  "nodeType": "Return",
                  "src": "3672:25:10"
                }
              ]
            },
            "documentation": {
              "id": 1571,
              "nodeType": "StructuredDocumentation",
              "src": "3527:47:10",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3588:9:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1575,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3635:8:10"
            },
            "parameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1573,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3606:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "3598:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3597:17:10"
            },
            "returnParameters": {
              "id": 1578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "3653:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3653:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3652:9:10"
            },
            "scope": 2073,
            "src": "3579:125:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2294
            ],
            "body": {
              "id": 1608,
              "nodeType": "Block",
              "src": "3985:104:10",
              "statements": [
                {
                  "assignments": [
                    1596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1596,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4003:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1608,
                      "src": "3995:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1595,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3995:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1599,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1597,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3102,
                      "src": "4011:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4011:12:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3995:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1601,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "4043:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1602,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1587,
                        "src": "4050:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1603,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "4054:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1600,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1834,
                      "src": "4033:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4033:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1605,
                  "nodeType": "ExpressionStatement",
                  "src": "4033:28:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4078:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1594,
                  "id": 1607,
                  "nodeType": "Return",
                  "src": "4071:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1585,
              "nodeType": "StructuredDocumentation",
              "src": "3710:185:10",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 1609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3909:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1591,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3961:8:10"
            },
            "parameters": {
              "id": 1590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1587,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3926:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "3918:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3918:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1589,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3938:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "3930:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3917:28:10"
            },
            "returnParameters": {
              "id": 1594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1593,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "3979:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1592,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3979:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3978:6:10"
            },
            "scope": 2073,
            "src": "3900:189:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2303
            ],
            "body": {
              "id": 1626,
              "nodeType": "Block",
              "src": "4245:51:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1620,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
                        "src": "4262:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1622,
                      "indexExpression": {
                        "id": 1621,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "4274:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4262:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1624,
                    "indexExpression": {
                      "id": 1623,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1614,
                      "src": "4281:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4262:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1619,
                  "id": 1625,
                  "nodeType": "Return",
                  "src": "4255:34:10"
                }
              ]
            },
            "documentation": {
              "id": 1610,
              "nodeType": "StructuredDocumentation",
              "src": "4095:47:10",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 1627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "4156:9:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1616,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4218:8:10"
            },
            "parameters": {
              "id": 1615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1612,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4174:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1627,
                  "src": "4166:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4166:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1614,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4189:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1627,
                  "src": "4181:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4181:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4165:32:10"
            },
            "returnParameters": {
              "id": 1619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1627,
                  "src": "4236:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4236:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4235:9:10"
            },
            "scope": 2073,
            "src": "4147:149:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2312
            ],
            "body": {
              "id": 1651,
              "nodeType": "Block",
              "src": "4693:108:10",
              "statements": [
                {
                  "assignments": [
                    1639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1639,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4711:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1651,
                      "src": "4703:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1638,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4703:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1642,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1640,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3102,
                      "src": "4719:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4719:12:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4703:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1644,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "4750:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1645,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1630,
                        "src": "4757:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1646,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1632,
                        "src": "4766:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1643,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2007,
                      "src": "4741:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4741:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1648,
                  "nodeType": "ExpressionStatement",
                  "src": "4741:32:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4790:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1637,
                  "id": 1650,
                  "nodeType": "Return",
                  "src": "4783:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1628,
              "nodeType": "StructuredDocumentation",
              "src": "4302:297:10",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 1652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4613:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1634,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4669:8:10"
            },
            "parameters": {
              "id": 1633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1630,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4629:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "4621:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4621:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1632,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4646:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "4638:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4638:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4620:33:10"
            },
            "returnParameters": {
              "id": 1637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "4687:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1635,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4686:6:10"
            },
            "scope": 2073,
            "src": "4604:197:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2323
            ],
            "body": {
              "id": 1684,
              "nodeType": "Block",
              "src": "5496:153:10",
              "statements": [
                {
                  "assignments": [
                    1666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1666,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "5514:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1684,
                      "src": "5506:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1665,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5506:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1669,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1667,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3102,
                      "src": "5524:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5524:12:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5506:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1671,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "5562:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1672,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1666,
                        "src": "5568:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1673,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1659,
                        "src": "5577:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1670,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "5546:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5546:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "5546:38:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1677,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "5604:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1678,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1657,
                        "src": "5610:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1679,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1659,
                        "src": "5614:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1676,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1834,
                      "src": "5594:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5594:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1681,
                  "nodeType": "ExpressionStatement",
                  "src": "5594:27:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5638:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1664,
                  "id": 1683,
                  "nodeType": "Return",
                  "src": "5631:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1653,
              "nodeType": "StructuredDocumentation",
              "src": "4807:551:10",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 1685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5372:12:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1661,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5472:8:10"
            },
            "parameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1655,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5402:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1685,
                  "src": "5394:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1657,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5424:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1685,
                  "src": "5416:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5416:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1659,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5444:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1685,
                  "src": "5436:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5436:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5384:72:10"
            },
            "returnParameters": {
              "id": 1664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1685,
                  "src": "5490:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1662,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5490:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5489:6:10"
            },
            "scope": 2073,
            "src": "5363:286:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1714,
              "nodeType": "Block",
              "src": "6138:142:10",
              "statements": [
                {
                  "assignments": [
                    1696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1696,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6156:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "6148:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1695,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6148:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1699,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1697,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3102,
                      "src": "6164:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6164:12:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6148:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1701,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1696,
                        "src": "6195:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1702,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1688,
                        "src": "6202:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1703,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1507,
                              "src": "6211:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1705,
                            "indexExpression": {
                              "id": 1704,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1696,
                              "src": "6223:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6211:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1707,
                          "indexExpression": {
                            "id": 1706,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1688,
                            "src": "6230:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6211:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1708,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1690,
                          "src": "6241:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6211:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1700,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2007,
                      "src": "6186:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6186:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1711,
                  "nodeType": "ExpressionStatement",
                  "src": "6186:66:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6269:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1694,
                  "id": 1713,
                  "nodeType": "Return",
                  "src": "6262:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1686,
              "nodeType": "StructuredDocumentation",
              "src": "5655:384:10",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 1715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "6053:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6079:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "6071:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6071:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1690,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "6096:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "6088:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6088:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6070:37:10"
            },
            "returnParameters": {
              "id": 1694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1693,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "6132:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1692,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6132:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6131:6:10"
            },
            "scope": 2073,
            "src": "6044:236:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1756,
              "nodeType": "Block",
              "src": "6866:330:10",
              "statements": [
                {
                  "assignments": [
                    1726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1726,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6884:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1756,
                      "src": "6876:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1725,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6876:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1729,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1727,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3102,
                      "src": "6892:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6892:12:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6876:28:10"
                },
                {
                  "assignments": [
                    1731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1731,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6922:16:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1756,
                      "src": "6914:24:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1730,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6914:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1737,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1732,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
                        "src": "6941:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1734,
                      "indexExpression": {
                        "id": 1733,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1726,
                        "src": "6953:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6941:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1736,
                    "indexExpression": {
                      "id": 1735,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1718,
                      "src": "6960:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6941:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6914:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1739,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1731,
                          "src": "6986:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1740,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1720,
                          "src": "7006:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6986:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 1742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7023:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 1738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6978:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6978:85:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1744,
                  "nodeType": "ExpressionStatement",
                  "src": "6978:85:10"
                },
                {
                  "id": 1753,
                  "nodeType": "UncheckedBlock",
                  "src": "7073:95:10",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1746,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1726,
                            "src": "7106:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1747,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1718,
                            "src": "7113:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1748,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1731,
                              "src": "7122:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1749,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "7141:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7122:34:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1745,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2007,
                          "src": "7097:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7097:60:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1752,
                      "nodeType": "ExpressionStatement",
                      "src": "7097:60:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7185:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1724,
                  "id": 1755,
                  "nodeType": "Return",
                  "src": "7178:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1716,
              "nodeType": "StructuredDocumentation",
              "src": "6286:476:10",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 1757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6776:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6802:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1757,
                  "src": "6794:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6794:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6819:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1757,
                  "src": "6811:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6811:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6793:42:10"
            },
            "returnParameters": {
              "id": 1724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1723,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1757,
                  "src": "6860:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1722,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6860:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6859:6:10"
            },
            "scope": 2073,
            "src": "6767:429:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1833,
              "nodeType": "Block",
              "src": "7767:543:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1768,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1760,
                          "src": "7785:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7801:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7793:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1769,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7793:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7793:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7785:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 1774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7805:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 1767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7777:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7777:68:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1776,
                  "nodeType": "ExpressionStatement",
                  "src": "7777:68:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1778,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1762,
                          "src": "7863:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7877:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7869:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1779,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7869:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7869:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7863:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7881:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 1777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7855:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7855:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1786,
                  "nodeType": "ExpressionStatement",
                  "src": "7855:64:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1788,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "7951:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1789,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "7957:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1790,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1764,
                        "src": "7961:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1787,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2061,
                      "src": "7930:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7930:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1792,
                  "nodeType": "ExpressionStatement",
                  "src": "7930:38:10"
                },
                {
                  "assignments": [
                    1794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1794,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "7987:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1833,
                      "src": "7979:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7979:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1798,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1795,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1501,
                      "src": "8001:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1797,
                    "indexExpression": {
                      "id": 1796,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1760,
                      "src": "8011:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8001:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7979:37:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1800,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1794,
                          "src": "8034:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1801,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1764,
                          "src": "8049:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8034:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 1803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8057:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 1799,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8026:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8026:72:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1805,
                  "nodeType": "ExpressionStatement",
                  "src": "8026:72:10"
                },
                {
                  "id": 1814,
                  "nodeType": "UncheckedBlock",
                  "src": "8108:73:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1806,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1501,
                            "src": "8132:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1808,
                          "indexExpression": {
                            "id": 1807,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1760,
                            "src": "8142:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8132:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1809,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1794,
                            "src": "8150:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1810,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1764,
                            "src": "8164:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8150:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8132:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1813,
                      "nodeType": "ExpressionStatement",
                      "src": "8132:38:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1815,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1501,
                        "src": "8190:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1817,
                      "indexExpression": {
                        "id": 1816,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "8200:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8190:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1818,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1764,
                      "src": "8207:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8190:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "8190:23:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1822,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "8238:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1823,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "8244:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1824,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1764,
                        "src": "8248:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1821,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2331,
                      "src": "8229:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8229:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1826,
                  "nodeType": "EmitStatement",
                  "src": "8224:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1828,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1760,
                        "src": "8286:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1829,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "8292:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1830,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1764,
                        "src": "8296:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1827,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2072,
                      "src": "8266:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1832,
                  "nodeType": "ExpressionStatement",
                  "src": "8266:37:10"
                }
              ]
            },
            "documentation": {
              "id": 1758,
              "nodeType": "StructuredDocumentation",
              "src": "7202:452:10",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 1834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7668:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1760,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7695:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1834,
                  "src": "7687:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7687:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1762,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7717:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1834,
                  "src": "7709:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7709:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1764,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7737:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1834,
                  "src": "7729:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7729:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7677:72:10"
            },
            "returnParameters": {
              "id": 1766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7767:0:10"
            },
            "scope": 2073,
            "src": "7659:651:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1889,
              "nodeType": "Block",
              "src": "8651:324:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1843,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "8669:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8688:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8680:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1844,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8680:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8680:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8669:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8692:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 1842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8661:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8661:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1851,
                  "nodeType": "ExpressionStatement",
                  "src": "8661:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8766:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8758:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1853,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8758:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8758:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1857,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8770:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1858,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "8779:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1852,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2061,
                      "src": "8737:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8737:49:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1860,
                  "nodeType": "ExpressionStatement",
                  "src": "8737:49:10"
                },
                {
                  "expression": {
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1861,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1509,
                      "src": "8797:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1862,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1839,
                      "src": "8813:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8797:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1864,
                  "nodeType": "ExpressionStatement",
                  "src": "8797:22:10"
                },
                {
                  "expression": {
                    "id": 1869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1865,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1501,
                        "src": "8829:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1867,
                      "indexExpression": {
                        "id": 1866,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8839:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8829:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1868,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1839,
                      "src": "8851:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8829:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1870,
                  "nodeType": "ExpressionStatement",
                  "src": "8829:28:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8889:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8881:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1872,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8881:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8881:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1876,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8893:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1877,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "8902:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1871,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2331,
                      "src": "8872:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8872:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1879,
                  "nodeType": "EmitStatement",
                  "src": "8867:42:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8948:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8940:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1881,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8940:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8940:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1885,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8952:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1886,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "8961:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1880,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2072,
                      "src": "8920:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8920:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1888,
                  "nodeType": "ExpressionStatement",
                  "src": "8920:48:10"
                }
              ]
            },
            "documentation": {
              "id": 1835,
              "nodeType": "StructuredDocumentation",
              "src": "8316:265:10",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 1890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8595:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1837,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8609:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1890,
                  "src": "8601:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8601:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1839,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8626:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1890,
                  "src": "8618:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8618:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8600:33:10"
            },
            "returnParameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8651:0:10"
            },
            "scope": 2073,
            "src": "8586:389:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1961,
              "nodeType": "Block",
              "src": "9360:511:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1899,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1893,
                          "src": "9378:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9397:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9389:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1900,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9389:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9389:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9378:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9401:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 1898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9370:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9370:67:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1907,
                  "nodeType": "ExpressionStatement",
                  "src": "9370:67:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1909,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1893,
                        "src": "9469:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9486:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9478:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1910,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9478:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9478:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1914,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1895,
                        "src": "9490:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1908,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2061,
                      "src": "9448:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9448:49:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1916,
                  "nodeType": "ExpressionStatement",
                  "src": "9448:49:10"
                },
                {
                  "assignments": [
                    1918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1918,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9516:14:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1961,
                      "src": "9508:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1917,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9508:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1922,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1919,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1501,
                      "src": "9533:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1921,
                    "indexExpression": {
                      "id": 1920,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1893,
                      "src": "9543:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9533:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9508:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1924,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1918,
                          "src": "9569:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1925,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1895,
                          "src": "9587:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9569:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9595:36:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 1923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9561:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9561:71:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1929,
                  "nodeType": "ExpressionStatement",
                  "src": "9561:71:10"
                },
                {
                  "id": 1938,
                  "nodeType": "UncheckedBlock",
                  "src": "9642:79:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1930,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1501,
                            "src": "9666:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1932,
                          "indexExpression": {
                            "id": 1931,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1893,
                            "src": "9676:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9666:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1933,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "9687:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1934,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1895,
                            "src": "9704:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9687:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9666:44:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1937,
                      "nodeType": "ExpressionStatement",
                      "src": "9666:44:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1939,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1509,
                      "src": "9730:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1940,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1895,
                      "src": "9746:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9730:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1942,
                  "nodeType": "ExpressionStatement",
                  "src": "9730:22:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1944,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1893,
                        "src": "9777:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9794:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9786:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1945,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9786:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9786:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1949,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1895,
                        "src": "9798:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1943,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2331,
                      "src": "9768:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9768:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1951,
                  "nodeType": "EmitStatement",
                  "src": "9763:42:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1953,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1893,
                        "src": "9836:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9853:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9845:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1954,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9845:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9845:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1958,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1895,
                        "src": "9857:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1952,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2072,
                      "src": "9816:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9816:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1960,
                  "nodeType": "ExpressionStatement",
                  "src": "9816:48:10"
                }
              ]
            },
            "documentation": {
              "id": 1891,
              "nodeType": "StructuredDocumentation",
              "src": "8981:309:10",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 1962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9304:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9318:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1962,
                  "src": "9310:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9310:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9335:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1962,
                  "src": "9327:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9327:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9309:33:10"
            },
            "returnParameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9360:0:10"
            },
            "scope": 2073,
            "src": "9295:576:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2006,
              "nodeType": "Block",
              "src": "10407:257:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1973,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1965,
                          "src": "10425:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10442:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10434:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1974,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10434:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10434:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10425:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 1979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10446:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 1972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10417:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10417:68:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1981,
                  "nodeType": "ExpressionStatement",
                  "src": "10417:68:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1983,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1967,
                          "src": "10503:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10522:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10514:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1984,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10514:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10514:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10503:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 1989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10526:36:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 1982,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10495:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10495:68:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1991,
                  "nodeType": "ExpressionStatement",
                  "src": "10495:68:10"
                },
                {
                  "expression": {
                    "id": 1998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1992,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1507,
                          "src": "10574:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1995,
                        "indexExpression": {
                          "id": 1993,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1965,
                          "src": "10586:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10574:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1996,
                      "indexExpression": {
                        "id": 1994,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1967,
                        "src": "10593:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10574:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1997,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "10604:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10574:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1999,
                  "nodeType": "ExpressionStatement",
                  "src": "10574:36:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2001,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1965,
                        "src": "10634:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2002,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1967,
                        "src": "10641:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2003,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "10650:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2000,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2339,
                      "src": "10625:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10625:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2005,
                  "nodeType": "EmitStatement",
                  "src": "10620:37:10"
                }
              ]
            },
            "documentation": {
              "id": 1963,
              "nodeType": "StructuredDocumentation",
              "src": "9877:412:10",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 2007,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10303:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1965,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10329:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "10321:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10321:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1967,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10352:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "10344:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10344:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10377:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "10369:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10369:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10311:78:10"
            },
            "returnParameters": {
              "id": 1971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10407:0:10"
            },
            "scope": 2073,
            "src": "10294:370:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2049,
              "nodeType": "Block",
              "src": "11061:321:10",
              "statements": [
                {
                  "assignments": [
                    2018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2018,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "11079:16:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2049,
                      "src": "11071:24:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11071:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2023,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2020,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "11108:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2021,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2012,
                        "src": "11115:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2019,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1627,
                      "src": "11098:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11098:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11071:52:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2024,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2018,
                      "src": "11137:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11162:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2026,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11162:7:10",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 2025,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "11157:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11157:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 2029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "11157:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11137:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2048,
                  "nodeType": "IfStatement",
                  "src": "11133:243:10",
                  "trueBody": {
                    "id": 2047,
                    "nodeType": "Block",
                    "src": "11176:200:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2032,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2018,
                                "src": "11198:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2033,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2014,
                                "src": "11218:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11198:26:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 2035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11226:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 2031,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11190:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11190:68:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2037,
                        "nodeType": "ExpressionStatement",
                        "src": "11190:68:10"
                      },
                      {
                        "id": 2046,
                        "nodeType": "UncheckedBlock",
                        "src": "11272:94:10",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2039,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2010,
                                  "src": "11309:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2040,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2012,
                                  "src": "11316:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2043,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2041,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2018,
                                    "src": "11325:16:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2042,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2014,
                                    "src": "11344:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11325:25:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2038,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2007,
                                "src": "11300:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 2044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11300:51:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2045,
                            "nodeType": "ExpressionStatement",
                            "src": "11300:51:10"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2008,
              "nodeType": "StructuredDocumentation",
              "src": "10670:266:10",
              "text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 2050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "10950:15:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2010,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10983:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2050,
                  "src": "10975:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10975:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2012,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "11006:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2050,
                  "src": "10998:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10998:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11031:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2050,
                  "src": "11023:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11023:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10965:78:10"
            },
            "returnParameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11061:0:10"
            },
            "scope": 2073,
            "src": "10941:441:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2060,
              "nodeType": "Block",
              "src": "12085:2:10",
              "statements": []
            },
            "documentation": {
              "id": 2051,
              "nodeType": "StructuredDocumentation",
              "src": "11388:573:10",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "11975:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2053,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12013:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2061,
                  "src": "12005:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12005:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2055,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12035:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2061,
                  "src": "12027:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12027:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2057,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12055:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2061,
                  "src": "12047:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12047:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11995:72:10"
            },
            "returnParameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12085:0:10"
            },
            "scope": 2073,
            "src": "11966:121:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2071,
              "nodeType": "Block",
              "src": "12793:2:10",
              "statements": []
            },
            "documentation": {
              "id": 2062,
              "nodeType": "StructuredDocumentation",
              "src": "12093:577:10",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "12684:19:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2064,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12721:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "12713:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12713:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2066,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12743:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "12735:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12735:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2068,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12763:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "12755:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12755:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12703:72:10"
            },
            "returnParameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12793:0:10"
            },
            "scope": 2073,
            "src": "12675:120:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2108,
        "src": "1582:11215:10",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2075,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2073,
              "src": "13168:5:10"
            },
            "id": 2076,
            "nodeType": "InheritanceSpecifier",
            "src": "13168:5:10"
          }
        ],
        "canonicalName": "SimpleToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2074,
          "nodeType": "StructuredDocumentation",
          "src": "12800:343:10",
          "text": " @title SimpleToken\n @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n Note they can later distribute these tokens as they wish using `transfer` and other\n `ERC20` functions.\n Based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol"
        },
        "fullyImplemented": true,
        "id": 2107,
        "linearizedBaseContracts": [
          2107,
          2073,
          2128,
          2345,
          3112
        ],
        "name": "SimpleToken",
        "nameLocation": "13153:11:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2096,
              "nodeType": "Block",
              "src": "13393:49:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2091,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13409:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13409:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2093,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2083,
                        "src": "13421:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2090,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1890,
                      "src": "13403:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13403:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2095,
                  "nodeType": "ExpressionStatement",
                  "src": "13403:32:10"
                }
              ]
            },
            "documentation": {
              "id": 2077,
              "nodeType": "StructuredDocumentation",
              "src": "13180:81:10",
              "text": " @dev Constructor that gives msg.sender all of existing tokens."
            },
            "id": 2097,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2086,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2079,
                    "src": "13379:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2087,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2081,
                    "src": "13385:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2088,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2085,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2073,
                  "src": "13373:5:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "13373:19:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2079,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "13301:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "13287:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13287:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2081,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "13329:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "13315:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2080,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13315:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2083,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "13353:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "13345:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13345:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13277:95:10"
            },
            "returnParameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13393:0:10"
            },
            "scope": 2107,
            "src": "13266:176:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1560
            ],
            "body": {
              "id": 2105,
              "nodeType": "Block",
              "src": "13505:26:10",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 2103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13522:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 2102,
                  "id": 2104,
                  "nodeType": "Return",
                  "src": "13515:9:10"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 2106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "13457:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2099,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13480:8:10"
            },
            "parameters": {
              "id": 2098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13465:2:10"
            },
            "returnParameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2106,
                  "src": "13498:5:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13498:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13497:7:10"
            },
            "scope": 2107,
            "src": "13448:83:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2108,
        "src": "13144:390:10",
        "usedErrors": []
      }
    ],
    "src": "0:13534:10"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000b6038038062000b608339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6108ce80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070b565b60405180910390f35b6100df6100da36600461077c565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a6565b610270565b604051601281526020016100c3565b6100df61013136600461077c565b610294565b6100f36101443660046107e2565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df61017536600461077c565b6102e2565b6100df61018836600461077c565b610379565b6100f361019b366004610804565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610837565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610837565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610872565b610387565b6060600480546101d590610837565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610872565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a3610537565b600060208083528351808285015260005b818110156107385785810183015185820160400152820161071c565b8181111561074a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461077757600080fd5b919050565b6000806040838503121561078f57600080fd5b61079883610760565b946020939093013593505050565b6000806000606084860312156107bb57600080fd5b6107c484610760565b92506107d260208501610760565b9150604084013590509250925092565b6000602082840312156107f457600080fd5b6107fd82610760565b9392505050565b6000806040838503121561081757600080fd5b61082083610760565b915061082e60208401610760565b90509250929050565b600181811c9082168061084b57607f821691505b6020821081141561086c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561089357634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220cd765ddb4db65f5384b179eadf2370c6dd6221efc0607c386e4397a3e7f2effe64736f6c634300080c0033",
  "bytecodeSha1": "15aeefd481ce94e0891603de0eb35048b803d199",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "10": {
        "ERC20._approve": {
          "30": [
            10425,
            10444,
            true
          ],
          "31": [
            10503,
            10524,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "32": [
            11137,
            11174,
            false
          ],
          "33": [
            11198,
            11224,
            true
          ]
        },
        "ERC20._transfer": {
          "34": [
            7785,
            7803,
            true
          ],
          "35": [
            7863,
            7879,
            true
          ],
          "36": [
            8034,
            8055,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6986,
            7021,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "4": {}
    },
    "statements": {
      "10": {
        "ERC20._approve": {
          "16": [
            10417,
            10485
          ],
          "17": [
            10495,
            10563
          ],
          "18": [
            10574,
            10610
          ],
          "19": [
            10620,
            10657
          ]
        },
        "ERC20._spendAllowance": {
          "20": [
            11190,
            11258
          ],
          "21": [
            11300,
            11351
          ]
        },
        "ERC20._transfer": {
          "22": [
            7777,
            7845
          ],
          "23": [
            7855,
            7919
          ],
          "24": [
            8026,
            8098
          ],
          "25": [
            8132,
            8170
          ],
          "26": [
            8190,
            8213
          ],
          "27": [
            8224,
            8255
          ],
          "28": [
            8266,
            8303
          ]
        },
        "ERC20.allowance": {
          "3": [
            4255,
            4289
          ]
        },
        "ERC20.approve": {
          "6": [
            4741,
            4773
          ],
          "7": [
            4783,
            4794
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3672,
            3697
          ]
        },
        "ERC20.decimals": {
          "1": [
            3339,
            3348
          ]
        },
        "ERC20.decreaseAllowance": {
          "13": [
            6978,
            7063
          ],
          "14": [
            7097,
            7157
          ]
        },
        "ERC20.increaseAllowance": {
          "11": [
            6186,
            6252
          ]
        },
        "ERC20.name": {
          "4": [
            2406,
            2418
          ]
        },
        "ERC20.symbol": {
          "12": [
            2619,
            2633
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3495,
            3514
          ]
        },
        "ERC20.transfer": {
          "15": [
            4033,
            4061
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            5546,
            5584
          ],
          "9": [
            5594,
            5621
          ],
          "10": [
            5631,
            5642
          ]
        }
      },
      "12": {},
      "13": {},
      "4": {
        "Context._msgSender": {
          "5": [
            672,
            689
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070b565b60405180910390f35b6100df6100da36600461077c565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a6565b610270565b604051601281526020016100c3565b6100df61013136600461077c565b610294565b6100f36101443660046107e2565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df61017536600461077c565b6102e2565b6100df61018836600461077c565b610379565b6100f361019b366004610804565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610837565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610837565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610872565b610387565b6060600480546101d590610837565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610872565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a3610537565b600060208083528351808285015260005b818110156107385785810183015185820160400152820161071c565b8181111561074a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461077757600080fd5b919050565b6000806040838503121561078f57600080fd5b61079883610760565b946020939093013593505050565b6000806000606084860312156107bb57600080fd5b6107c484610760565b92506107d260208501610760565b9150604084013590509250925092565b6000602082840312156107f457600080fd5b6107fd82610760565b9392505050565b6000806040838503121561081757600080fd5b61082083610760565b915061082e60208401610760565b90509250929050565b600181811c9082168061084b57607f821691505b6020821081141561086c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561089357634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220cd765ddb4db65f5384b179eadf2370c6dd6221efc0607c386e4397a3e7f2effe64736f6c634300080c0033",
  "deployedSourceMap": "1582:11215:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2327:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4604:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:19;;1211:22;1193:41;;1181:2;1166:18;4604:197:10;1053:187:19;3415:106:10;3502:12;;3415:106;;;1391:25:19;;;1379:2;1364:18;3415:106:10;1245:177:19;5363:286:10;;;;;;:::i;:::-;;:::i;3264:91::-;;;3346:2;1902:36:19;;1890:2;1875:18;3264:91:10;1760:184:19;6044:236:10;;;;;;:::i;:::-;;:::i;3579:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3679:18:10;3653:7;3679:18;;;;;;;;;;;;3579:125;2538:102;;;:::i;6767:429::-;;;;;;:::i;:::-;;:::i;3900:189::-;;;;;;:::i;:::-;;:::i;4147:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4262:18:10;;;4236:7;4262:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4147:149;2327:98;2381:13;2413:5;2406:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2327:98;:::o;4604:197::-;4687:4;679:10:4;4741:32:10;679:10:4;4757:7:10;4766:6;4741:8;:32::i;:::-;-1:-1:-1;4790:4:10;;4604:197;-1:-1:-1;;;4604:197:10:o;5363:286::-;5490:4;679:10:4;5546:38:10;5562:4;679:10:4;5577:6:10;5546:15;:38::i;:::-;5594:27;5604:4;5610:2;5614:6;5594:9;:27::i;:::-;-1:-1:-1;5638:4:10;;5363:286;-1:-1:-1;;;;5363:286:10:o;6044:236::-;679:10:4;6132:4:10;6211:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6211:27:10;;;;;;;;;;6132:4;;679:10:4;6186:66:10;;679:10:4;;6211:27:10;;:40;;6241:10;;6211:40;:::i;:::-;6186:8;:66::i;2538:102::-;2594:13;2626:7;2619:14;;;;;:::i;6767:429::-;679:10:4;6860:4:10;6941:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6941:27:10;;;;;;;;;;6860:4;;679:10:4;6986:35:10;;;;6978:85;;;;-1:-1:-1;;;6978:85:10;;3222:2:19;6978:85:10;;;3204:21:19;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:19;;;3344:35;3396:19;;6978:85:10;;;;;;;;;7097:60;7106:5;7113:7;7141:15;7122:16;:34;7097:8;:60::i;3900:189::-;3979:4;679:10:4;4033:28:10;679:10:4;4050:2:10;4054:6;4033:9;:28::i;10294:370::-;-1:-1:-1;;;;;10425:19:10;;10417:68;;;;-1:-1:-1;;;10417:68:10;;3628:2:19;10417:68:10;;;3610:21:19;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:19;;;3750:34;3801:19;;10417:68:10;3426:400:19;10417:68:10;-1:-1:-1;;;;;10503:21:10;;10495:68;;;;-1:-1:-1;;;10495:68:10;;4033:2:19;10495:68:10;;;4015:21:19;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:19;;;4155:32;4204:19;;10495:68:10;3831:398:19;10495:68:10;-1:-1:-1;;;;;10574:18:10;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10625:32;;1391:25:19;;;10625:32:10;;1364:18:19;10625:32:10;;;;;;;10294:370;;;:::o;10941:441::-;-1:-1:-1;;;;;4262:18:10;;;11071:24;4262:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11137:37:10;;11133:243;;11218:6;11198:16;:26;;11190:68;;;;-1:-1:-1;;;11190:68:10;;4436:2:19;11190:68:10;;;4418:21:19;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11190:68:10;4234:353:19;11190:68:10;11300:51;11309:5;11316:7;11344:6;11325:16;:25;11300:8;:51::i;:::-;11061:321;10941:441;;;:::o;7659:651::-;-1:-1:-1;;;;;7785:18:10;;7777:68;;;;-1:-1:-1;;;7777:68:10;;4794:2:19;7777:68:10;;;4776:21:19;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:19;;;4916:35;4968:19;;7777:68:10;4592:401:19;7777:68:10;-1:-1:-1;;;;;7863:16:10;;7855:64;;;;-1:-1:-1;;;7855:64:10;;5200:2:19;7855:64:10;;;5182:21:19;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:19;;;5322:33;5372:19;;7855:64:10;4998:399:19;7855:64:10;-1:-1:-1;;;;;8001:15:10;;7979:19;8001:15;;;;;;;;;;;8034:21;;;;8026:72;;;;-1:-1:-1;;;8026:72:10;;5604:2:19;8026:72:10;;;5586:21:19;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:19;;;5726:36;5779:19;;8026:72:10;5402:402:19;8026:72:10;-1:-1:-1;;;;;8132:15:10;;;:9;:15;;;;;;;;;;;8150:20;;;8132:38;;8190:13;;;;;;;;:23;;8164:6;;8132:9;8190:23;;8164:6;;8190:23;:::i;:::-;;;;;;;;8244:2;-1:-1:-1;;;;;8229:26:10;8238:4;-1:-1:-1;;;;;8229:26:10;;8248:6;8229:26;;;;1391:25:19;;1379:2;1364:18;;1245:177;8229:26:10;;;;;;;;8266:37;11966:121;14:597:19;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:19;574:15;-1:-1:-1;;570:29:19;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:19:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:19;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:19:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:19:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:19;;2790:225::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1582,
    12797
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x837 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x837 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x387 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27E DUP6 DUP3 DUP6 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x289 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2CE SWAP1 DUP8 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x837 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x289 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B2 SWAP1 DUP5 SWAP1 PUSH2 0x872 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x738 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x71C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x798 DUP4 PUSH2 0x760 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C4 DUP5 PUSH2 0x760 JUMP JUMPDEST SWAP3 POP PUSH2 0x7D2 PUSH1 0x20 DUP6 ADD PUSH2 0x760 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FD DUP3 PUSH2 0x760 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x820 DUP4 PUSH2 0x760 JUMP JUMPDEST SWAP2 POP PUSH2 0x82E PUSH1 0x20 DUP5 ADD PUSH2 0x760 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x84B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x86C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x893 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH23 0x5DDB4DB65F5384B179EADF2370C6DD6221EFC0607C386E NUMBER SWAP8 LOG3 0xE7 CALLCODE 0xEF INVALID PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "109": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "112": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "REVERT",
      "path": "10"
    },
    "113": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "143": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "154": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "EQ",
      "path": "10"
    },
    "165": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "169": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "DUP1",
      "path": "10"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1582,
        12797
      ],
      "op": "REVERT",
      "path": "10"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C6"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2327,
        2425
      ],
      "op": "JUMP",
      "path": "10"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x70B"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2327,
        2425
      ],
      "op": "JUMP",
      "path": "10"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "DUP1",
      "path": "10"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "SUB",
      "path": "10"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "RETURN",
      "path": "10"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x77C"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4604,
        4801
      ],
      "op": "JUMP",
      "path": "10"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x258"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4604,
        4801
      ],
      "op": "JUMP",
      "path": "10"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3415,
        3521
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3502,
        3514
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3502,
        3514
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3415,
        3521
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3415,
        3521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3415,
        3521
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3415,
        3521
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A6"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5363,
        5649
      ],
      "op": "JUMP",
      "path": "10"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x270"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5363,
        5649
      ],
      "op": "JUMP",
      "path": "10"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3264,
        3355
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3264,
        3355
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3264,
        3355
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3346,
        3348
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3264,
        3355
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6044,
        6280
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6044,
        6280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6044,
        6280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6044,
        6280
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6044,
        6280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6044,
        6280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x77C"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6044,
        6280
      ],
      "op": "JUMP",
      "path": "10"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6044,
        6280
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6044,
        6280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x294"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6044,
        6280
      ],
      "op": "JUMP",
      "path": "10"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3579,
        3704
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3579,
        3704
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3579,
        3704
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3579,
        3704
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3579,
        3704
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3579,
        3704
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7E2"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3579,
        3704
      ],
      "op": "JUMP",
      "path": "10"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3579,
        3704
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "AND",
      "path": "10",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3653,
        3660
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "DUP2",
      "path": "10"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "DUP2",
      "path": "10"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3679,
        3697
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3579,
        3704
      ],
      "op": "JUMP",
      "path": "10"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2538,
        2640
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2538,
        2640
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2538,
        2640
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D3"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2538,
        2640
      ],
      "op": "JUMP",
      "path": "10"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6767,
        7196
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6767,
        7196
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6767,
        7196
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6767,
        7196
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6767,
        7196
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6767,
        7196
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x77C"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6767,
        7196
      ],
      "op": "JUMP",
      "path": "10"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6767,
        7196
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6767,
        7196
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E2"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6767,
        7196
      ],
      "op": "JUMP",
      "path": "10"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3900,
        4089
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3900,
        4089
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3900,
        4089
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3900,
        4089
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3900,
        4089
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3900,
        4089
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x77C"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3900,
        4089
      ],
      "op": "JUMP",
      "path": "10"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3900,
        4089
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3900,
        4089
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x379"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3900,
        4089
      ],
      "op": "JUMP",
      "path": "10"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        4147,
        4296
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        4147,
        4296
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        4147,
        4296
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        4147,
        4296
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        4147,
        4296
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        4147,
        4296
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x804"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4147,
        4296
      ],
      "op": "JUMP",
      "path": "10"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        4147,
        4296
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "op": "SUB"
    },
    "420": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 3
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP3",
      "path": "10"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "AND",
      "path": "10"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4243
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP2",
      "path": "10"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4273
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "432": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "433": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP2",
      "path": "10"
    },
    "434": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "435": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP1",
      "path": "10"
    },
    "438": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP4",
      "path": "10"
    },
    "439": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "440": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "441": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "442": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "443": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "AND",
      "path": "10"
    },
    "444": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "DUP3",
      "path": "10"
    },
    "445": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "446": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "447": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "448": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "449": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "450": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "451": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "452": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "453": {
      "fn": "ERC20.allowance",
      "offset": [
        4147,
        4296
      ],
      "op": "JUMP",
      "path": "10"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2413,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0x3"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x837"
    },
    "468": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMP",
      "path": "10"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ADD",
      "path": "10"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DIV",
      "path": "10"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "MUL",
      "path": "10"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ADD",
      "path": "10"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ADD",
      "path": "10"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ADD",
      "path": "10"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP3",
      "path": "10"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x201"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x837"
    },
    "512": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMP",
      "path": "10"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24E"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "LT",
      "path": "10"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x223"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP4",
      "path": "10"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DIV",
      "path": "10"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "MUL",
      "path": "10"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP4",
      "path": "10"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ADD",
      "path": "10"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24E"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMP",
      "path": "10"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP3",
      "path": "10"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ADD",
      "path": "10"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ADD",
      "path": "10"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ADD",
      "path": "10"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP4",
      "path": "10"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "GT",
      "path": "10"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x231"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP3",
      "path": "10"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SUB",
      "path": "10"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "AND",
      "path": "10"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "DUP3",
      "path": "10"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "ADD",
      "path": "10"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "POP",
      "path": "10"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "POP",
      "path": "10"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "POP",
      "path": "10"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "POP",
      "path": "10"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "POP",
      "path": "10"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2406,
        2418
      ],
      "op": "POP",
      "path": "10"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2327,
        2425
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "599": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2327,
        2425
      ],
      "op": "JUMP",
      "path": "10"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "601": {
      "fn": "ERC20.approve",
      "offset": [
        4687,
        4691
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "603": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 5
    },
    "604": {
      "fn": "ERC20.approve",
      "offset": [
        4741,
        4773
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 6,
      "value": "0x266"
    },
    "607": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "DUP2",
      "path": "4"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        4757,
        4764
      ],
      "op": "DUP6",
      "path": "10"
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        4766,
        4772
      ],
      "op": "DUP6",
      "path": "10"
    },
    "610": {
      "fn": "ERC20.approve",
      "offset": [
        4741,
        4749
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x387"
    },
    "613": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4741,
        4773
      ],
      "op": "JUMP",
      "path": "10"
    },
    "614": {
      "fn": "ERC20.approve",
      "offset": [
        4741,
        4773
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "615": {
      "op": "POP"
    },
    "616": {
      "fn": "ERC20.approve",
      "offset": [
        4790,
        4794
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x1"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        4790,
        4794
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        4604,
        4801
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "op": "POP"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4604,
        4801
      ],
      "op": "JUMP",
      "path": "10"
    },
    "624": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "625": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5490,
        5494
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "627": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5546,
        5584
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 8,
      "value": "0x27E"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5562,
        5566
      ],
      "op": "DUP6",
      "path": "10"
    },
    "632": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "DUP3",
      "path": "4"
    },
    "633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5577,
        5583
      ],
      "op": "DUP6",
      "path": "10"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5546,
        5561
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4AB"
    },
    "637": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5546,
        5584
      ],
      "op": "JUMP",
      "path": "10"
    },
    "638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5546,
        5584
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5594,
        5621
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 9,
      "value": "0x289"
    },
    "642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5604,
        5608
      ],
      "op": "DUP6",
      "path": "10"
    },
    "643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5610,
        5612
      ],
      "op": "DUP6",
      "path": "10"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5614,
        5620
      ],
      "op": "DUP6",
      "path": "10"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5594,
        5603
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x53D"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5594,
        5621
      ],
      "op": "JUMP",
      "path": "10"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5594,
        5621
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "650": {
      "op": "POP"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5638,
        5642
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 10,
      "value": "0x1"
    },
    "653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5638,
        5642
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5363,
        5649
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "655": {
      "op": "POP"
    },
    "656": {
      "op": "POP"
    },
    "657": {
      "op": "POP"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5363,
        5649
      ],
      "op": "JUMP",
      "path": "10"
    },
    "660": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6044,
        6280
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "661": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "662": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6132,
        6136
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "664": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 11
    },
    "665": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "DUP2",
      "path": "10"
    },
    "666": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "667": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6222
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "669": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "671": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "672": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "DUP2",
      "path": "10"
    },
    "673": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "674": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "676": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "DUP1",
      "path": "10"
    },
    "677": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "DUP4",
      "path": "10"
    },
    "678": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6229
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "685": {
      "op": "SHL"
    },
    "686": {
      "op": "SUB"
    },
    "687": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "DUP8",
      "path": "10"
    },
    "688": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "AND",
      "path": "10"
    },
    "689": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "DUP5",
      "path": "10"
    },
    "690": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "691": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "692": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "693": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "694": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "DUP2",
      "path": "10"
    },
    "695": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "696": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "697": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6132,
        6136
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "698": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6132,
        6136
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "699": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "700": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6186,
        6252
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266"
    },
    "703": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6186,
        6252
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "704": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "DUP3",
      "path": "4"
    },
    "705": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "706": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "DUP7",
      "path": "10"
    },
    "707": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6238
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "708": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6251
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CE"
    },
    "711": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6251
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "712": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6241,
        6251
      ],
      "op": "DUP8",
      "path": "10"
    },
    "713": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6241,
        6251
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "714": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6251
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x872"
    },
    "717": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6211,
        6251
      ],
      "op": "JUMP",
      "path": "10"
    },
    "718": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6211,
        6251
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6186,
        6194
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x387"
    },
    "722": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6186,
        6252
      ],
      "op": "JUMP",
      "path": "10"
    },
    "723": {
      "fn": "ERC20.symbol",
      "offset": [
        2538,
        2640
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "724": {
      "fn": "ERC20.symbol",
      "offset": [
        2594,
        2607
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "726": {
      "fn": "ERC20.symbol",
      "offset": [
        2626,
        2633
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 12,
      "value": "0x4"
    },
    "728": {
      "fn": "ERC20.symbol",
      "offset": [
        2619,
        2633
      ],
      "op": "DUP1",
      "path": "10"
    },
    "729": {
      "fn": "ERC20.symbol",
      "offset": [
        2619,
        2633
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "730": {
      "fn": "ERC20.symbol",
      "offset": [
        2619,
        2633
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "733": {
      "fn": "ERC20.symbol",
      "offset": [
        2619,
        2633
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "734": {
      "fn": "ERC20.symbol",
      "offset": [
        2619,
        2633
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x837"
    },
    "737": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2619,
        2633
      ],
      "op": "JUMP",
      "path": "10"
    },
    "738": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6767,
        7196
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "739": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "740": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6860,
        6864
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "742": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "DUP2",
      "path": "10"
    },
    "743": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "DUP2",
      "path": "10"
    },
    "744": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "745": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6952
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "747": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "749": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "750": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "DUP2",
      "path": "10"
    },
    "751": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "752": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "754": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "DUP1",
      "path": "10"
    },
    "755": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "DUP4",
      "path": "10"
    },
    "756": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6959
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "763": {
      "op": "SHL"
    },
    "764": {
      "op": "SUB"
    },
    "765": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "DUP8",
      "path": "10"
    },
    "766": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "AND",
      "path": "10"
    },
    "767": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "DUP5",
      "path": "10"
    },
    "768": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "769": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "770": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "771": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "772": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "DUP2",
      "path": "10"
    },
    "773": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "774": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6941,
        6968
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "775": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6860,
        6864
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "776": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6860,
        6864
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "777": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "778": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6986,
        7021
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 13
    },
    "779": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6986,
        7021
      ],
      "op": "DUP2",
      "path": "10"
    },
    "780": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6986,
        7021
      ],
      "op": "LT",
      "path": "10"
    },
    "781": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6986,
        7021
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "782": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36C"
    },
    "785": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "788": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "DUP2",
      "path": "10"
    },
    "797": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "800": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "802": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "DUP3",
      "path": "10"
    },
    "803": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "ADD",
      "path": "10"
    },
    "804": {
      "op": "MSTORE"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "809": {
      "op": "DUP3"
    },
    "810": {
      "op": "ADD"
    },
    "811": {
      "op": "MSTORE"
    },
    "812": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "847": {
      "op": "DUP3"
    },
    "848": {
      "op": "ADD"
    },
    "849": {
      "op": "MSTORE"
    },
    "850": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "861": {
      "op": "DUP3"
    },
    "862": {
      "op": "ADD"
    },
    "863": {
      "op": "MSTORE"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "866": {
      "op": "ADD"
    },
    "867": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "868": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "870": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "871": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "DUP1",
      "path": "10"
    },
    "872": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "SUB",
      "path": "10"
    },
    "874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6978,
        7063
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7097,
        7157
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 14,
      "value": "0x289"
    },
    "880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7106,
        7111
      ],
      "op": "DUP3",
      "path": "10"
    },
    "881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7113,
        7120
      ],
      "op": "DUP7",
      "path": "10"
    },
    "882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7141,
        7156
      ],
      "op": "DUP7",
      "path": "10"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP5",
      "path": "10"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7122,
        7156
      ],
      "op": "SUB",
      "path": "10"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7097,
        7105
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x387"
    },
    "888": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        7097,
        7157
      ],
      "op": "JUMP",
      "path": "10"
    },
    "889": {
      "fn": "ERC20.transfer",
      "offset": [
        3900,
        4089
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "890": {
      "fn": "ERC20.transfer",
      "offset": [
        3979,
        3983
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "892": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "893": {
      "fn": "ERC20.transfer",
      "offset": [
        4033,
        4061
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 15,
      "value": "0x266"
    },
    "896": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "DUP2",
      "path": "4"
    },
    "897": {
      "fn": "ERC20.transfer",
      "offset": [
        4050,
        4052
      ],
      "op": "DUP6",
      "path": "10"
    },
    "898": {
      "fn": "ERC20.transfer",
      "offset": [
        4054,
        4060
      ],
      "op": "DUP6",
      "path": "10"
    },
    "899": {
      "fn": "ERC20.transfer",
      "offset": [
        4033,
        4042
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x53D"
    },
    "902": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4033,
        4061
      ],
      "op": "JUMP",
      "path": "10"
    },
    "903": {
      "fn": "ERC20._approve",
      "offset": [
        10294,
        10664
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "910": {
      "op": "SHL"
    },
    "911": {
      "op": "SUB"
    },
    "912": {
      "fn": "ERC20._approve",
      "offset": [
        10425,
        10444
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 16
    },
    "913": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10425,
        10444
      ],
      "op": "AND",
      "path": "10"
    },
    "914": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E9"
    },
    "917": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "918": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "921": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "DUP2",
      "path": "10"
    },
    "929": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "932": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "934": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "DUP3",
      "path": "10"
    },
    "935": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "ADD",
      "path": "10"
    },
    "936": {
      "op": "MSTORE"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "939": {
      "op": "DUP1"
    },
    "940": {
      "op": "DUP3"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "op": "MSTORE"
    },
    "943": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "978": {
      "op": "DUP3"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "MSTORE"
    },
    "981": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "991": {
      "op": "DUP3"
    },
    "992": {
      "op": "ADD"
    },
    "993": {
      "op": "MSTORE"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "996": {
      "op": "ADD"
    },
    "997": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x363"
    },
    "1000": {
      "op": "JUMP"
    },
    "1001": {
      "fn": "ERC20._approve",
      "offset": [
        10417,
        10485
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "op": "SUB"
    },
    "1010": {
      "fn": "ERC20._approve",
      "offset": [
        10503,
        10524
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 17
    },
    "1011": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10503,
        10524
      ],
      "op": "AND",
      "path": "10"
    },
    "1012": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44A"
    },
    "1015": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1016": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1018": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1027": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1030": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1032": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1033": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "ADD",
      "path": "10"
    },
    "1034": {
      "op": "MSTORE"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1039": {
      "op": "DUP3"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "op": "MSTORE"
    },
    "1042": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1077": {
      "op": "DUP3"
    },
    "1078": {
      "op": "ADD"
    },
    "1079": {
      "op": "MSTORE"
    },
    "1080": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1088": {
      "op": "DUP3"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "op": "MSTORE"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1093": {
      "op": "ADD"
    },
    "1094": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x363"
    },
    "1097": {
      "op": "JUMP"
    },
    "1098": {
      "fn": "ERC20._approve",
      "offset": [
        10495,
        10563
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "op": "SUB"
    },
    "1107": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 18
    },
    "1108": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1109": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "AND",
      "path": "10"
    },
    "1110": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1112": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1113": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1114": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1115": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1117": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1119": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1120": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1121": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1122": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1124": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1125": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1126": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10592
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1127": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1128": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1129": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "AND",
      "path": "10"
    },
    "1130": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1131": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1132": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1133": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1134": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1135": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1136": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1137": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1138": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1139": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10601
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1140": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10610
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1141": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10610
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1142": {
      "fn": "ERC20._approve",
      "offset": [
        10574,
        10610
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1143": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 19
    },
    "1144": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1145": {
      "op": "DUP5"
    },
    "1146": {
      "op": "DUP2"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1181": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1185": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1186": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1187": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1188": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "SUB",
      "path": "10"
    },
    "1189": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1190": {
      "fn": "ERC20._approve",
      "offset": [
        10625,
        10657
      ],
      "op": "LOG3",
      "path": "10"
    },
    "1191": {
      "fn": "ERC20._approve",
      "offset": [
        10294,
        10664
      ],
      "op": "POP",
      "path": "10"
    },
    "1192": {
      "fn": "ERC20._approve",
      "offset": [
        10294,
        10664
      ],
      "op": "POP",
      "path": "10"
    },
    "1193": {
      "fn": "ERC20._approve",
      "offset": [
        10294,
        10664
      ],
      "op": "POP",
      "path": "10"
    },
    "1194": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10294,
        10664
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1195": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10941,
        11382
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "op": "SUB"
    },
    "1204": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1205": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1206": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "AND",
      "path": "10"
    },
    "1207": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11071,
        11095
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1209": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1210": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1211": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1212": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4273
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1214": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1216": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1217": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1218": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1219": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1221": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1222": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1223": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4280
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1224": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1225": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1226": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "AND",
      "path": "10"
    },
    "1227": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1228": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1229": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1230": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1231": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1232": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1233": {
      "fn": "ERC20.allowance",
      "offset": [
        4262,
        4289
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1236": {
      "op": "NOT"
    },
    "1237": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11137,
        11174
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1238": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11137,
        11174
      ],
      "op": "EQ",
      "path": "10"
    },
    "1239": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11133,
        11376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x537"
    },
    "1242": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11133,
        11376
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1243": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11218,
        11224
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 20
    },
    "1244": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11198,
        11214
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1245": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11198,
        11224
      ],
      "op": "LT",
      "path": "10"
    },
    "1246": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11198,
        11224
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1247": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52A"
    },
    "1250": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1251": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1253": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1262": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1265": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1267": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1268": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "ADD",
      "path": "10"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1274": {
      "op": "DUP3"
    },
    "1275": {
      "op": "ADD"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1312": {
      "op": "DUP3"
    },
    "1313": {
      "op": "ADD"
    },
    "1314": {
      "op": "MSTORE"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x363"
    },
    "1321": {
      "op": "JUMP"
    },
    "1322": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11190,
        11258
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1323": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11300,
        11351
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 21,
      "value": "0x537"
    },
    "1326": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11309,
        11314
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1327": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11316,
        11323
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1328": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11344,
        11350
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1329": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11325,
        11341
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1330": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11325,
        11350
      ],
      "op": "SUB",
      "path": "10"
    },
    "1331": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11300,
        11308
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x387"
    },
    "1334": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11300,
        11351
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1335": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11300,
        11351
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1336": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11061,
        11382
      ],
      "op": "POP",
      "path": "10"
    },
    "1337": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10941,
        11382
      ],
      "op": "POP",
      "path": "10"
    },
    "1338": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10941,
        11382
      ],
      "op": "POP",
      "path": "10"
    },
    "1339": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10941,
        11382
      ],
      "op": "POP",
      "path": "10"
    },
    "1340": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10941,
        11382
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1341": {
      "fn": "ERC20._transfer",
      "offset": [
        7659,
        8310
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "op": "SUB"
    },
    "1350": {
      "fn": "ERC20._transfer",
      "offset": [
        7785,
        7803
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 22
    },
    "1351": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7785,
        7803
      ],
      "op": "AND",
      "path": "10"
    },
    "1352": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5A1"
    },
    "1355": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1356": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1358": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1367": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1370": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1372": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1373": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "ADD",
      "path": "10"
    },
    "1374": {
      "op": "MSTORE"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1417": {
      "op": "DUP3"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "op": "MSTORE"
    },
    "1420": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1431": {
      "op": "DUP3"
    },
    "1432": {
      "op": "ADD"
    },
    "1433": {
      "op": "MSTORE"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1436": {
      "op": "ADD"
    },
    "1437": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x363"
    },
    "1440": {
      "op": "JUMP"
    },
    "1441": {
      "fn": "ERC20._transfer",
      "offset": [
        7777,
        7845
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7879
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 23
    },
    "1451": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7879
      ],
      "op": "AND",
      "path": "10"
    },
    "1452": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x603"
    },
    "1455": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1456": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1458": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1467": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1470": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1472": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1473": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "ADD",
      "path": "10"
    },
    "1474": {
      "op": "MSTORE"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1479": {
      "op": "DUP3"
    },
    "1480": {
      "op": "ADD"
    },
    "1481": {
      "op": "MSTORE"
    },
    "1482": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1517": {
      "op": "DUP3"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "op": "MSTORE"
    },
    "1520": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1526": {
      "op": "SHL"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1529": {
      "op": "DUP3"
    },
    "1530": {
      "op": "ADD"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1534": {
      "op": "ADD"
    },
    "1535": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x363"
    },
    "1538": {
      "op": "JUMP"
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7919
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1546": {
      "op": "SHL"
    },
    "1547": {
      "op": "SUB"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1549": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "AND",
      "path": "10"
    },
    "1550": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7998
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1557": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1559": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1564": {
      "fn": "ERC20._transfer",
      "offset": [
        8001,
        8016
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1565": {
      "fn": "ERC20._transfer",
      "offset": [
        8034,
        8055
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 24
    },
    "1566": {
      "fn": "ERC20._transfer",
      "offset": [
        8034,
        8055
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1567": {
      "fn": "ERC20._transfer",
      "offset": [
        8034,
        8055
      ],
      "op": "LT",
      "path": "10"
    },
    "1568": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        8034,
        8055
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1569": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x67B"
    },
    "1572": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1573": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1575": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1584": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1589": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1590": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "ADD",
      "path": "10"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1634": {
      "op": "DUP3"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1649": {
      "op": "DUP3"
    },
    "1650": {
      "op": "ADD"
    },
    "1651": {
      "op": "MSTORE"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1654": {
      "op": "ADD"
    },
    "1655": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x363"
    },
    "1658": {
      "op": "JUMP"
    },
    "1659": {
      "fn": "ERC20._transfer",
      "offset": [
        8026,
        8098
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "op": "SUB"
    },
    "1668": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 25
    },
    "1669": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1670": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "AND",
      "path": "10"
    },
    "1671": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8141
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1675": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8147
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        8150,
        8170
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        8150,
        8170
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        8150,
        8170
      ],
      "op": "SUB",
      "path": "10"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8170
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8170
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8203
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 26
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8203
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8203
      ],
      "op": "AND",
      "path": "10"
    },
    "1694": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8203
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8203
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8203
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8203
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8203
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1700": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1701": {
      "fn": "ERC20._transfer",
      "offset": [
        8164,
        8170
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "offset": [
        8164,
        8170
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        8132,
        8141
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6B2"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        8164,
        8170
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        8164,
        8170
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x872"
    },
    "1713": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8190,
        8213
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1714": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1715": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1716": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "POP",
      "path": "10"
    },
    "1717": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "POP",
      "path": "10"
    },
    "1718": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1719": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1720": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        8190,
        8213
      ],
      "op": "POP",
      "path": "10"
    },
    "1722": {
      "fn": "ERC20._transfer",
      "offset": [
        8244,
        8246
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 27
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1729": {
      "op": "SHL"
    },
    "1730": {
      "op": "SUB"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "AND",
      "path": "10"
    },
    "1732": {
      "fn": "ERC20._transfer",
      "offset": [
        8238,
        8242
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "op": "SUB"
    },
    "1741": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "AND",
      "path": "10"
    },
    "1742": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1775": {
      "fn": "ERC20._transfer",
      "offset": [
        8248,
        8254
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1776": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1778": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1779": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FE"
    },
    "1782": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "MSTORE"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1787": {
      "op": "ADD"
    },
    "1788": {
      "op": "SWAP1"
    },
    "1789": {
      "op": "JUMP"
    },
    "1790": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1791": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1793": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1794": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1795": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1796": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "SUB",
      "path": "10"
    },
    "1797": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1798": {
      "fn": "ERC20._transfer",
      "offset": [
        8229,
        8255
      ],
      "op": "LOG3",
      "path": "10"
    },
    "1799": {
      "fn": "ERC20._transfer",
      "offset": [
        8266,
        8303
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 28,
      "value": "0x537"
    },
    "1802": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        11966,
        12087
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1803": {
      "op": "JUMPDEST"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1808": {
      "op": "DUP1"
    },
    "1809": {
      "op": "DUP4"
    },
    "1810": {
      "op": "MSTORE"
    },
    "1811": {
      "op": "DUP4"
    },
    "1812": {
      "op": "MLOAD"
    },
    "1813": {
      "op": "DUP1"
    },
    "1814": {
      "op": "DUP3"
    },
    "1815": {
      "op": "DUP6"
    },
    "1816": {
      "op": "ADD"
    },
    "1817": {
      "op": "MSTORE"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1820": {
      "op": "JUMPDEST"
    },
    "1821": {
      "op": "DUP2"
    },
    "1822": {
      "op": "DUP2"
    },
    "1823": {
      "op": "LT"
    },
    "1824": {
      "op": "ISZERO"
    },
    "1825": {
      "op": "PUSH2",
      "value": "0x738"
    },
    "1828": {
      "op": "JUMPI"
    },
    "1829": {
      "op": "DUP6"
    },
    "1830": {
      "op": "DUP2"
    },
    "1831": {
      "op": "ADD"
    },
    "1832": {
      "op": "DUP4"
    },
    "1833": {
      "op": "ADD"
    },
    "1834": {
      "op": "MLOAD"
    },
    "1835": {
      "op": "DUP6"
    },
    "1836": {
      "op": "DUP3"
    },
    "1837": {
      "op": "ADD"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1840": {
      "op": "ADD"
    },
    "1841": {
      "op": "MSTORE"
    },
    "1842": {
      "op": "DUP3"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "op": "PUSH2",
      "value": "0x71C"
    },
    "1847": {
      "op": "JUMP"
    },
    "1848": {
      "op": "JUMPDEST"
    },
    "1849": {
      "op": "DUP2"
    },
    "1850": {
      "op": "DUP2"
    },
    "1851": {
      "op": "GT"
    },
    "1852": {
      "op": "ISZERO"
    },
    "1853": {
      "op": "PUSH2",
      "value": "0x74A"
    },
    "1856": {
      "op": "JUMPI"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1861": {
      "op": "DUP4"
    },
    "1862": {
      "op": "DUP8"
    },
    "1863": {
      "op": "ADD"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "MSTORE"
    },
    "1866": {
      "op": "JUMPDEST"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1870": {
      "op": "ADD"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1873": {
      "op": "NOT"
    },
    "1874": {
      "op": "AND"
    },
    "1875": {
      "op": "SWAP3"
    },
    "1876": {
      "op": "SWAP1"
    },
    "1877": {
      "op": "SWAP3"
    },
    "1878": {
      "op": "ADD"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1881": {
      "op": "ADD"
    },
    "1882": {
      "op": "SWAP4"
    },
    "1883": {
      "op": "SWAP3"
    },
    "1884": {
      "op": "POP"
    },
    "1885": {
      "op": "POP"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "jump": "o",
      "op": "JUMP"
    },
    "1888": {
      "op": "JUMPDEST"
    },
    "1889": {
      "op": "DUP1"
    },
    "1890": {
      "op": "CALLDATALOAD"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "op": "SUB"
    },
    "1899": {
      "op": "DUP2"
    },
    "1900": {
      "op": "AND"
    },
    "1901": {
      "op": "DUP2"
    },
    "1902": {
      "op": "EQ"
    },
    "1903": {
      "op": "PUSH2",
      "value": "0x777"
    },
    "1906": {
      "op": "JUMPI"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1909": {
      "op": "DUP1"
    },
    "1910": {
      "op": "REVERT"
    },
    "1911": {
      "op": "JUMPDEST"
    },
    "1912": {
      "op": "SWAP2"
    },
    "1913": {
      "op": "SWAP1"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "jump": "o",
      "op": "JUMP"
    },
    "1916": {
      "op": "JUMPDEST"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1919": {
      "op": "DUP1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1922": {
      "op": "DUP4"
    },
    "1923": {
      "op": "DUP6"
    },
    "1924": {
      "op": "SUB"
    },
    "1925": {
      "op": "SLT"
    },
    "1926": {
      "op": "ISZERO"
    },
    "1927": {
      "op": "PUSH2",
      "value": "0x78F"
    },
    "1930": {
      "op": "JUMPI"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1933": {
      "op": "DUP1"
    },
    "1934": {
      "op": "REVERT"
    },
    "1935": {
      "op": "JUMPDEST"
    },
    "1936": {
      "op": "PUSH2",
      "value": "0x798"
    },
    "1939": {
      "op": "DUP4"
    },
    "1940": {
      "op": "PUSH2",
      "value": "0x760"
    },
    "1943": {
      "jump": "i",
      "op": "JUMP"
    },
    "1944": {
      "op": "JUMPDEST"
    },
    "1945": {
      "op": "SWAP5"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1948": {
      "op": "SWAP4"
    },
    "1949": {
      "op": "SWAP1"
    },
    "1950": {
      "op": "SWAP4"
    },
    "1951": {
      "op": "ADD"
    },
    "1952": {
      "op": "CALLDATALOAD"
    },
    "1953": {
      "op": "SWAP4"
    },
    "1954": {
      "op": "POP"
    },
    "1955": {
      "op": "POP"
    },
    "1956": {
      "op": "POP"
    },
    "1957": {
      "jump": "o",
      "op": "JUMP"
    },
    "1958": {
      "op": "JUMPDEST"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1961": {
      "op": "DUP1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1966": {
      "op": "DUP5"
    },
    "1967": {
      "op": "DUP7"
    },
    "1968": {
      "op": "SUB"
    },
    "1969": {
      "op": "SLT"
    },
    "1970": {
      "op": "ISZERO"
    },
    "1971": {
      "op": "PUSH2",
      "value": "0x7BB"
    },
    "1974": {
      "op": "JUMPI"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1977": {
      "op": "DUP1"
    },
    "1978": {
      "op": "REVERT"
    },
    "1979": {
      "op": "JUMPDEST"
    },
    "1980": {
      "op": "PUSH2",
      "value": "0x7C4"
    },
    "1983": {
      "op": "DUP5"
    },
    "1984": {
      "op": "PUSH2",
      "value": "0x760"
    },
    "1987": {
      "jump": "i",
      "op": "JUMP"
    },
    "1988": {
      "op": "JUMPDEST"
    },
    "1989": {
      "op": "SWAP3"
    },
    "1990": {
      "op": "POP"
    },
    "1991": {
      "op": "PUSH2",
      "value": "0x7D2"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1996": {
      "op": "DUP6"
    },
    "1997": {
      "op": "ADD"
    },
    "1998": {
      "op": "PUSH2",
      "value": "0x760"
    },
    "2001": {
      "jump": "i",
      "op": "JUMP"
    },
    "2002": {
      "op": "JUMPDEST"
    },
    "2003": {
      "op": "SWAP2"
    },
    "2004": {
      "op": "POP"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2007": {
      "op": "DUP5"
    },
    "2008": {
      "op": "ADD"
    },
    "2009": {
      "op": "CALLDATALOAD"
    },
    "2010": {
      "op": "SWAP1"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "op": "SWAP3"
    },
    "2013": {
      "op": "POP"
    },
    "2014": {
      "op": "SWAP3"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "op": "SWAP3"
    },
    "2017": {
      "jump": "o",
      "op": "JUMP"
    },
    "2018": {
      "op": "JUMPDEST"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2023": {
      "op": "DUP3"
    },
    "2024": {
      "op": "DUP5"
    },
    "2025": {
      "op": "SUB"
    },
    "2026": {
      "op": "SLT"
    },
    "2027": {
      "op": "ISZERO"
    },
    "2028": {
      "op": "PUSH2",
      "value": "0x7F4"
    },
    "2031": {
      "op": "JUMPI"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2034": {
      "op": "DUP1"
    },
    "2035": {
      "op": "REVERT"
    },
    "2036": {
      "op": "JUMPDEST"
    },
    "2037": {
      "op": "PUSH2",
      "value": "0x7FD"
    },
    "2040": {
      "op": "DUP3"
    },
    "2041": {
      "op": "PUSH2",
      "value": "0x760"
    },
    "2044": {
      "jump": "i",
      "op": "JUMP"
    },
    "2045": {
      "op": "JUMPDEST"
    },
    "2046": {
      "op": "SWAP4"
    },
    "2047": {
      "op": "SWAP3"
    },
    "2048": {
      "op": "POP"
    },
    "2049": {
      "op": "POP"
    },
    "2050": {
      "op": "POP"
    },
    "2051": {
      "jump": "o",
      "op": "JUMP"
    },
    "2052": {
      "op": "JUMPDEST"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2055": {
      "op": "DUP1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2058": {
      "op": "DUP4"
    },
    "2059": {
      "op": "DUP6"
    },
    "2060": {
      "op": "SUB"
    },
    "2061": {
      "op": "SLT"
    },
    "2062": {
      "op": "ISZERO"
    },
    "2063": {
      "op": "PUSH2",
      "value": "0x817"
    },
    "2066": {
      "op": "JUMPI"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2069": {
      "op": "DUP1"
    },
    "2070": {
      "op": "REVERT"
    },
    "2071": {
      "op": "JUMPDEST"
    },
    "2072": {
      "op": "PUSH2",
      "value": "0x820"
    },
    "2075": {
      "op": "DUP4"
    },
    "2076": {
      "op": "PUSH2",
      "value": "0x760"
    },
    "2079": {
      "jump": "i",
      "op": "JUMP"
    },
    "2080": {
      "op": "JUMPDEST"
    },
    "2081": {
      "op": "SWAP2"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "op": "PUSH2",
      "value": "0x82E"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2088": {
      "op": "DUP5"
    },
    "2089": {
      "op": "ADD"
    },
    "2090": {
      "op": "PUSH2",
      "value": "0x760"
    },
    "2093": {
      "jump": "i",
      "op": "JUMP"
    },
    "2094": {
      "op": "JUMPDEST"
    },
    "2095": {
      "op": "SWAP1"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "op": "SWAP3"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "op": "SWAP3"
    },
    "2100": {
      "op": "SWAP1"
    },
    "2101": {
      "op": "POP"
    },
    "2102": {
      "jump": "o",
      "op": "JUMP"
    },
    "2103": {
      "op": "JUMPDEST"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "DUP2"
    },
    "2107": {
      "op": "DUP2"
    },
    "2108": {
      "op": "SHR"
    },
    "2109": {
      "op": "SWAP1"
    },
    "2110": {
      "op": "DUP3"
    },
    "2111": {
      "op": "AND"
    },
    "2112": {
      "op": "DUP1"
    },
    "2113": {
      "op": "PUSH2",
      "value": "0x84B"
    },
    "2116": {
      "op": "JUMPI"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2119": {
      "op": "DUP3"
    },
    "2120": {
      "op": "AND"
    },
    "2121": {
      "op": "SWAP2"
    },
    "2122": {
      "op": "POP"
    },
    "2123": {
      "op": "JUMPDEST"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2126": {
      "op": "DUP3"
    },
    "2127": {
      "op": "LT"
    },
    "2128": {
      "op": "DUP2"
    },
    "2129": {
      "op": "EQ"
    },
    "2130": {
      "op": "ISZERO"
    },
    "2131": {
      "op": "PUSH2",
      "value": "0x86C"
    },
    "2134": {
      "op": "JUMPI"
    },
    "2135": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2155": {
      "op": "REVERT"
    },
    "2156": {
      "op": "JUMPDEST"
    },
    "2157": {
      "op": "POP"
    },
    "2158": {
      "op": "SWAP2"
    },
    "2159": {
      "op": "SWAP1"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "jump": "o",
      "op": "JUMP"
    },
    "2162": {
      "op": "JUMPDEST"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2165": {
      "op": "DUP3"
    },
    "2166": {
      "op": "NOT"
    },
    "2167": {
      "op": "DUP3"
    },
    "2168": {
      "op": "GT"
    },
    "2169": {
      "op": "ISZERO"
    },
    "2170": {
      "op": "PUSH2",
      "value": "0x893"
    },
    "2173": {
      "op": "JUMPI"
    },
    "2174": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2181": {
      "op": "SHL"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2184": {
      "op": "MSTORE"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2189": {
      "op": "MSTORE"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2194": {
      "op": "REVERT"
    },
    "2195": {
      "op": "JUMPDEST"
    },
    "2196": {
      "op": "POP"
    },
    "2197": {
      "op": "ADD"
    },
    "2198": {
      "op": "SWAP1"
    },
    "2199": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4d6414d713112c86eeb67f156fdd020fa837fef6",
  "source": "pragma solidity ^0.8.0;\n// SPDX-License-Identifier: UNLICENSED\n\nimport \"../interfaces/IERC20.sol\";\nimport \"../interfaces/IERC20Metadata.sol\";\nimport \"./Context.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n//import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\n\n\n// This has been modified and IERC20 has been removed from the contract\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n\n/**\n * @title SimpleToken\n * @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n * Note they can later distribute these tokens as they wish using `transfer` and other\n * `ERC20` functions.\n * Based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol\n */\ncontract SimpleToken is ERC20 {\n    /**\n     * @dev Constructor that gives msg.sender all of existing tokens.\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply\n    ) ERC20(name, symbol) {\n        _mint(msg.sender, initialSupply);\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 18;\n    }\n\n}",
  "sourceMap": "1582:11215:10:-:0;;;2149:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2215:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2238:17:10;;;;:7;;:17;;;;;:::i;:::-;;2149:113;;1582:11215;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1582:11215:10;;;-1:-1:-1;1582:11215:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:19;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:19;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:19;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:19:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:19;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1582:11215:10;;;;;;",
  "sourcePath": "contracts/helpers/SimpleToken.sol",
  "type": "contract"
}